
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model comentario
 * 
 */
export type comentario = $Result.DefaultSelection<Prisma.$comentarioPayload>
/**
 * Model moderador_pagina
 * 
 */
export type moderador_pagina = $Result.DefaultSelection<Prisma.$moderador_paginaPayload>
/**
 * Model morada
 * 
 */
export type morada = $Result.DefaultSelection<Prisma.$moradaPayload>
/**
 * Model pagina_freguesia
 * 
 */
export type pagina_freguesia = $Result.DefaultSelection<Prisma.$pagina_freguesiaPayload>
/**
 * Model pedido_pagina
 * 
 */
export type pedido_pagina = $Result.DefaultSelection<Prisma.$pedido_paginaPayload>
/**
 * Model perfil
 * 
 */
export type perfil = $Result.DefaultSelection<Prisma.$perfilPayload>
/**
 * Model post
 * 
 */
export type post = $Result.DefaultSelection<Prisma.$postPayload>
/**
 * Model resposta_ticket
 * 
 */
export type resposta_ticket = $Result.DefaultSelection<Prisma.$resposta_ticketPayload>
/**
 * Model seguidores_pagina
 * 
 */
export type seguidores_pagina = $Result.DefaultSelection<Prisma.$seguidores_paginaPayload>
/**
 * Model ticket
 * 
 */
export type ticket = $Result.DefaultSelection<Prisma.$ticketPayload>
/**
 * Model utilizador
 * 
 */
export type utilizador = $Result.DefaultSelection<Prisma.$utilizadorPayload>
/**
 * Model notificacao
 * 
 */
export type notificacao = $Result.DefaultSelection<Prisma.$notificacaoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const estado_notificacao: {
  lida: 'lida',
  nao_lida: 'nao_lida'
};

export type estado_notificacao = (typeof estado_notificacao)[keyof typeof estado_notificacao]


export const estado_pedido: {
  pendente: 'pendente',
  aprovado: 'aprovado',
  reprovado: 'reprovado'
};

export type estado_pedido = (typeof estado_pedido)[keyof typeof estado_pedido]


export const estado_post: {
  ativo: 'ativo',
  inativo: 'inativo',
  pendente: 'pendente'
};

export type estado_post = (typeof estado_post)[keyof typeof estado_post]


export const estado_resposta: {
  resolvido: 'resolvido',
  nao_resolvido: 'nao_resolvido'
};

export type estado_resposta = (typeof estado_resposta)[keyof typeof estado_resposta]


export const estado_ticket: {
  aberto: 'aberto',
  fechado: 'fechado',
  pendente: 'pendente'
};

export type estado_ticket = (typeof estado_ticket)[keyof typeof estado_ticket]


export const estado_votacao: {
  ativo: 'ativo',
  encerrado: 'encerrado'
};

export type estado_votacao = (typeof estado_votacao)[keyof typeof estado_votacao]


export const funcao_moderador: {
  dono: 'dono',
  moderador: 'moderador'
};

export type funcao_moderador = (typeof funcao_moderador)[keyof typeof funcao_moderador]


export const tipo_notificacao: {
  Comentario: 'Comentario',
  Post: 'Post',
  Ticket: 'Ticket',
  pagina: 'pagina'
};

export type tipo_notificacao = (typeof tipo_notificacao)[keyof typeof tipo_notificacao]


export const tipo_utilizador: {
  admin: 'admin',
  moderador: 'moderador',
  utilizador: 'utilizador'
};

export type tipo_utilizador = (typeof tipo_utilizador)[keyof typeof tipo_utilizador]

}

export type estado_notificacao = $Enums.estado_notificacao

export const estado_notificacao: typeof $Enums.estado_notificacao

export type estado_pedido = $Enums.estado_pedido

export const estado_pedido: typeof $Enums.estado_pedido

export type estado_post = $Enums.estado_post

export const estado_post: typeof $Enums.estado_post

export type estado_resposta = $Enums.estado_resposta

export const estado_resposta: typeof $Enums.estado_resposta

export type estado_ticket = $Enums.estado_ticket

export const estado_ticket: typeof $Enums.estado_ticket

export type estado_votacao = $Enums.estado_votacao

export const estado_votacao: typeof $Enums.estado_votacao

export type funcao_moderador = $Enums.funcao_moderador

export const funcao_moderador: typeof $Enums.funcao_moderador

export type tipo_notificacao = $Enums.tipo_notificacao

export const tipo_notificacao: typeof $Enums.tipo_notificacao

export type tipo_utilizador = $Enums.tipo_utilizador

export const tipo_utilizador: typeof $Enums.tipo_utilizador

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Comentarios
 * const comentarios = await prisma.comentario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Comentarios
   * const comentarios = await prisma.comentario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.comentario`: Exposes CRUD operations for the **comentario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comentarios
    * const comentarios = await prisma.comentario.findMany()
    * ```
    */
  get comentario(): Prisma.comentarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.moderador_pagina`: Exposes CRUD operations for the **moderador_pagina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Moderador_paginas
    * const moderador_paginas = await prisma.moderador_pagina.findMany()
    * ```
    */
  get moderador_pagina(): Prisma.moderador_paginaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.morada`: Exposes CRUD operations for the **morada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Moradas
    * const moradas = await prisma.morada.findMany()
    * ```
    */
  get morada(): Prisma.moradaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pagina_freguesia`: Exposes CRUD operations for the **pagina_freguesia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagina_freguesias
    * const pagina_freguesias = await prisma.pagina_freguesia.findMany()
    * ```
    */
  get pagina_freguesia(): Prisma.pagina_freguesiaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido_pagina`: Exposes CRUD operations for the **pedido_pagina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedido_paginas
    * const pedido_paginas = await prisma.pedido_pagina.findMany()
    * ```
    */
  get pedido_pagina(): Prisma.pedido_paginaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.perfil`: Exposes CRUD operations for the **perfil** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Perfils
    * const perfils = await prisma.perfil.findMany()
    * ```
    */
  get perfil(): Prisma.perfilDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.postDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.resposta_ticket`: Exposes CRUD operations for the **resposta_ticket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Resposta_tickets
    * const resposta_tickets = await prisma.resposta_ticket.findMany()
    * ```
    */
  get resposta_ticket(): Prisma.resposta_ticketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seguidores_pagina`: Exposes CRUD operations for the **seguidores_pagina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Seguidores_paginas
    * const seguidores_paginas = await prisma.seguidores_pagina.findMany()
    * ```
    */
  get seguidores_pagina(): Prisma.seguidores_paginaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticket`: Exposes CRUD operations for the **ticket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tickets
    * const tickets = await prisma.ticket.findMany()
    * ```
    */
  get ticket(): Prisma.ticketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.utilizador`: Exposes CRUD operations for the **utilizador** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Utilizadors
    * const utilizadors = await prisma.utilizador.findMany()
    * ```
    */
  get utilizador(): Prisma.utilizadorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificacao`: Exposes CRUD operations for the **notificacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificacaos
    * const notificacaos = await prisma.notificacao.findMany()
    * ```
    */
  get notificacao(): Prisma.notificacaoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    comentario: 'comentario',
    moderador_pagina: 'moderador_pagina',
    morada: 'morada',
    pagina_freguesia: 'pagina_freguesia',
    pedido_pagina: 'pedido_pagina',
    perfil: 'perfil',
    post: 'post',
    resposta_ticket: 'resposta_ticket',
    seguidores_pagina: 'seguidores_pagina',
    ticket: 'ticket',
    utilizador: 'utilizador',
    notificacao: 'notificacao'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "comentario" | "moderador_pagina" | "morada" | "pagina_freguesia" | "pedido_pagina" | "perfil" | "post" | "resposta_ticket" | "seguidores_pagina" | "ticket" | "utilizador" | "notificacao"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      comentario: {
        payload: Prisma.$comentarioPayload<ExtArgs>
        fields: Prisma.comentarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.comentarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.comentarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>
          }
          findFirst: {
            args: Prisma.comentarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.comentarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>
          }
          findMany: {
            args: Prisma.comentarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>[]
          }
          create: {
            args: Prisma.comentarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>
          }
          createMany: {
            args: Prisma.comentarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.comentarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>[]
          }
          delete: {
            args: Prisma.comentarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>
          }
          update: {
            args: Prisma.comentarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>
          }
          deleteMany: {
            args: Prisma.comentarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.comentarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.comentarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>[]
          }
          upsert: {
            args: Prisma.comentarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comentarioPayload>
          }
          aggregate: {
            args: Prisma.ComentarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComentario>
          }
          groupBy: {
            args: Prisma.comentarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComentarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.comentarioCountArgs<ExtArgs>
            result: $Utils.Optional<ComentarioCountAggregateOutputType> | number
          }
        }
      }
      moderador_pagina: {
        payload: Prisma.$moderador_paginaPayload<ExtArgs>
        fields: Prisma.moderador_paginaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.moderador_paginaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.moderador_paginaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>
          }
          findFirst: {
            args: Prisma.moderador_paginaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.moderador_paginaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>
          }
          findMany: {
            args: Prisma.moderador_paginaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>[]
          }
          create: {
            args: Prisma.moderador_paginaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>
          }
          createMany: {
            args: Prisma.moderador_paginaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.moderador_paginaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>[]
          }
          delete: {
            args: Prisma.moderador_paginaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>
          }
          update: {
            args: Prisma.moderador_paginaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>
          }
          deleteMany: {
            args: Prisma.moderador_paginaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.moderador_paginaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.moderador_paginaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>[]
          }
          upsert: {
            args: Prisma.moderador_paginaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moderador_paginaPayload>
          }
          aggregate: {
            args: Prisma.Moderador_paginaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModerador_pagina>
          }
          groupBy: {
            args: Prisma.moderador_paginaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Moderador_paginaGroupByOutputType>[]
          }
          count: {
            args: Prisma.moderador_paginaCountArgs<ExtArgs>
            result: $Utils.Optional<Moderador_paginaCountAggregateOutputType> | number
          }
        }
      }
      morada: {
        payload: Prisma.$moradaPayload<ExtArgs>
        fields: Prisma.moradaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.moradaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.moradaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>
          }
          findFirst: {
            args: Prisma.moradaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.moradaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>
          }
          findMany: {
            args: Prisma.moradaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>[]
          }
          create: {
            args: Prisma.moradaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>
          }
          createMany: {
            args: Prisma.moradaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.moradaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>[]
          }
          delete: {
            args: Prisma.moradaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>
          }
          update: {
            args: Prisma.moradaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>
          }
          deleteMany: {
            args: Prisma.moradaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.moradaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.moradaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>[]
          }
          upsert: {
            args: Prisma.moradaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$moradaPayload>
          }
          aggregate: {
            args: Prisma.MoradaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMorada>
          }
          groupBy: {
            args: Prisma.moradaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MoradaGroupByOutputType>[]
          }
          count: {
            args: Prisma.moradaCountArgs<ExtArgs>
            result: $Utils.Optional<MoradaCountAggregateOutputType> | number
          }
        }
      }
      pagina_freguesia: {
        payload: Prisma.$pagina_freguesiaPayload<ExtArgs>
        fields: Prisma.pagina_freguesiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pagina_freguesiaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pagina_freguesiaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>
          }
          findFirst: {
            args: Prisma.pagina_freguesiaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pagina_freguesiaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>
          }
          findMany: {
            args: Prisma.pagina_freguesiaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>[]
          }
          create: {
            args: Prisma.pagina_freguesiaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>
          }
          createMany: {
            args: Prisma.pagina_freguesiaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pagina_freguesiaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>[]
          }
          delete: {
            args: Prisma.pagina_freguesiaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>
          }
          update: {
            args: Prisma.pagina_freguesiaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>
          }
          deleteMany: {
            args: Prisma.pagina_freguesiaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pagina_freguesiaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pagina_freguesiaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>[]
          }
          upsert: {
            args: Prisma.pagina_freguesiaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagina_freguesiaPayload>
          }
          aggregate: {
            args: Prisma.Pagina_freguesiaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagina_freguesia>
          }
          groupBy: {
            args: Prisma.pagina_freguesiaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pagina_freguesiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.pagina_freguesiaCountArgs<ExtArgs>
            result: $Utils.Optional<Pagina_freguesiaCountAggregateOutputType> | number
          }
        }
      }
      pedido_pagina: {
        payload: Prisma.$pedido_paginaPayload<ExtArgs>
        fields: Prisma.pedido_paginaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pedido_paginaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pedido_paginaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>
          }
          findFirst: {
            args: Prisma.pedido_paginaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pedido_paginaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>
          }
          findMany: {
            args: Prisma.pedido_paginaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>[]
          }
          create: {
            args: Prisma.pedido_paginaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>
          }
          createMany: {
            args: Prisma.pedido_paginaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pedido_paginaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>[]
          }
          delete: {
            args: Prisma.pedido_paginaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>
          }
          update: {
            args: Prisma.pedido_paginaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>
          }
          deleteMany: {
            args: Prisma.pedido_paginaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pedido_paginaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pedido_paginaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>[]
          }
          upsert: {
            args: Prisma.pedido_paginaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_paginaPayload>
          }
          aggregate: {
            args: Prisma.Pedido_paginaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido_pagina>
          }
          groupBy: {
            args: Prisma.pedido_paginaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pedido_paginaGroupByOutputType>[]
          }
          count: {
            args: Prisma.pedido_paginaCountArgs<ExtArgs>
            result: $Utils.Optional<Pedido_paginaCountAggregateOutputType> | number
          }
        }
      }
      perfil: {
        payload: Prisma.$perfilPayload<ExtArgs>
        fields: Prisma.perfilFieldRefs
        operations: {
          findUnique: {
            args: Prisma.perfilFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.perfilFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          findFirst: {
            args: Prisma.perfilFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.perfilFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          findMany: {
            args: Prisma.perfilFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>[]
          }
          create: {
            args: Prisma.perfilCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          createMany: {
            args: Prisma.perfilCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.perfilCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>[]
          }
          delete: {
            args: Prisma.perfilDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          update: {
            args: Prisma.perfilUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          deleteMany: {
            args: Prisma.perfilDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.perfilUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.perfilUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>[]
          }
          upsert: {
            args: Prisma.perfilUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          aggregate: {
            args: Prisma.PerfilAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePerfil>
          }
          groupBy: {
            args: Prisma.perfilGroupByArgs<ExtArgs>
            result: $Utils.Optional<PerfilGroupByOutputType>[]
          }
          count: {
            args: Prisma.perfilCountArgs<ExtArgs>
            result: $Utils.Optional<PerfilCountAggregateOutputType> | number
          }
        }
      }
      post: {
        payload: Prisma.$postPayload<ExtArgs>
        fields: Prisma.postFieldRefs
        operations: {
          findUnique: {
            args: Prisma.postFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.postFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          findFirst: {
            args: Prisma.postFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.postFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          findMany: {
            args: Prisma.postFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>[]
          }
          create: {
            args: Prisma.postCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          createMany: {
            args: Prisma.postCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.postCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>[]
          }
          delete: {
            args: Prisma.postDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          update: {
            args: Prisma.postUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          deleteMany: {
            args: Prisma.postDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.postUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.postUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>[]
          }
          upsert: {
            args: Prisma.postUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.postGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.postCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      resposta_ticket: {
        payload: Prisma.$resposta_ticketPayload<ExtArgs>
        fields: Prisma.resposta_ticketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.resposta_ticketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.resposta_ticketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>
          }
          findFirst: {
            args: Prisma.resposta_ticketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.resposta_ticketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>
          }
          findMany: {
            args: Prisma.resposta_ticketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>[]
          }
          create: {
            args: Prisma.resposta_ticketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>
          }
          createMany: {
            args: Prisma.resposta_ticketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.resposta_ticketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>[]
          }
          delete: {
            args: Prisma.resposta_ticketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>
          }
          update: {
            args: Prisma.resposta_ticketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>
          }
          deleteMany: {
            args: Prisma.resposta_ticketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.resposta_ticketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.resposta_ticketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>[]
          }
          upsert: {
            args: Prisma.resposta_ticketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$resposta_ticketPayload>
          }
          aggregate: {
            args: Prisma.Resposta_ticketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateResposta_ticket>
          }
          groupBy: {
            args: Prisma.resposta_ticketGroupByArgs<ExtArgs>
            result: $Utils.Optional<Resposta_ticketGroupByOutputType>[]
          }
          count: {
            args: Prisma.resposta_ticketCountArgs<ExtArgs>
            result: $Utils.Optional<Resposta_ticketCountAggregateOutputType> | number
          }
        }
      }
      seguidores_pagina: {
        payload: Prisma.$seguidores_paginaPayload<ExtArgs>
        fields: Prisma.seguidores_paginaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.seguidores_paginaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.seguidores_paginaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>
          }
          findFirst: {
            args: Prisma.seguidores_paginaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.seguidores_paginaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>
          }
          findMany: {
            args: Prisma.seguidores_paginaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>[]
          }
          create: {
            args: Prisma.seguidores_paginaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>
          }
          createMany: {
            args: Prisma.seguidores_paginaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.seguidores_paginaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>[]
          }
          delete: {
            args: Prisma.seguidores_paginaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>
          }
          update: {
            args: Prisma.seguidores_paginaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>
          }
          deleteMany: {
            args: Prisma.seguidores_paginaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.seguidores_paginaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.seguidores_paginaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>[]
          }
          upsert: {
            args: Prisma.seguidores_paginaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seguidores_paginaPayload>
          }
          aggregate: {
            args: Prisma.Seguidores_paginaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeguidores_pagina>
          }
          groupBy: {
            args: Prisma.seguidores_paginaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Seguidores_paginaGroupByOutputType>[]
          }
          count: {
            args: Prisma.seguidores_paginaCountArgs<ExtArgs>
            result: $Utils.Optional<Seguidores_paginaCountAggregateOutputType> | number
          }
        }
      }
      ticket: {
        payload: Prisma.$ticketPayload<ExtArgs>
        fields: Prisma.ticketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ticketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ticketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>
          }
          findFirst: {
            args: Prisma.ticketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ticketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>
          }
          findMany: {
            args: Prisma.ticketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>[]
          }
          create: {
            args: Prisma.ticketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>
          }
          createMany: {
            args: Prisma.ticketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ticketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>[]
          }
          delete: {
            args: Prisma.ticketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>
          }
          update: {
            args: Prisma.ticketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>
          }
          deleteMany: {
            args: Prisma.ticketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ticketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ticketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>[]
          }
          upsert: {
            args: Prisma.ticketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketPayload>
          }
          aggregate: {
            args: Prisma.TicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicket>
          }
          groupBy: {
            args: Prisma.ticketGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.ticketCountArgs<ExtArgs>
            result: $Utils.Optional<TicketCountAggregateOutputType> | number
          }
        }
      }
      utilizador: {
        payload: Prisma.$utilizadorPayload<ExtArgs>
        fields: Prisma.utilizadorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.utilizadorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.utilizadorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>
          }
          findFirst: {
            args: Prisma.utilizadorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.utilizadorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>
          }
          findMany: {
            args: Prisma.utilizadorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>[]
          }
          create: {
            args: Prisma.utilizadorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>
          }
          createMany: {
            args: Prisma.utilizadorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.utilizadorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>[]
          }
          delete: {
            args: Prisma.utilizadorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>
          }
          update: {
            args: Prisma.utilizadorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>
          }
          deleteMany: {
            args: Prisma.utilizadorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.utilizadorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.utilizadorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>[]
          }
          upsert: {
            args: Prisma.utilizadorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$utilizadorPayload>
          }
          aggregate: {
            args: Prisma.UtilizadorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUtilizador>
          }
          groupBy: {
            args: Prisma.utilizadorGroupByArgs<ExtArgs>
            result: $Utils.Optional<UtilizadorGroupByOutputType>[]
          }
          count: {
            args: Prisma.utilizadorCountArgs<ExtArgs>
            result: $Utils.Optional<UtilizadorCountAggregateOutputType> | number
          }
        }
      }
      notificacao: {
        payload: Prisma.$notificacaoPayload<ExtArgs>
        fields: Prisma.notificacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>
          }
          findFirst: {
            args: Prisma.notificacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>
          }
          findMany: {
            args: Prisma.notificacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>[]
          }
          create: {
            args: Prisma.notificacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>
          }
          createMany: {
            args: Prisma.notificacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>[]
          }
          delete: {
            args: Prisma.notificacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>
          }
          update: {
            args: Prisma.notificacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>
          }
          deleteMany: {
            args: Prisma.notificacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificacaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>[]
          }
          upsert: {
            args: Prisma.notificacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacaoPayload>
          }
          aggregate: {
            args: Prisma.NotificacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacao>
          }
          groupBy: {
            args: Prisma.notificacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificacaoCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    comentario?: comentarioOmit
    moderador_pagina?: moderador_paginaOmit
    morada?: moradaOmit
    pagina_freguesia?: pagina_freguesiaOmit
    pedido_pagina?: pedido_paginaOmit
    perfil?: perfilOmit
    post?: postOmit
    resposta_ticket?: resposta_ticketOmit
    seguidores_pagina?: seguidores_paginaOmit
    ticket?: ticketOmit
    utilizador?: utilizadorOmit
    notificacao?: notificacaoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type MoradaCountOutputType
   */

  export type MoradaCountOutputType = {
    pagina_freguesia: number
    pedido_pagina: number
    utilizador: number
  }

  export type MoradaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | MoradaCountOutputTypeCountPagina_freguesiaArgs
    pedido_pagina?: boolean | MoradaCountOutputTypeCountPedido_paginaArgs
    utilizador?: boolean | MoradaCountOutputTypeCountUtilizadorArgs
  }

  // Custom InputTypes
  /**
   * MoradaCountOutputType without action
   */
  export type MoradaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MoradaCountOutputType
     */
    select?: MoradaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MoradaCountOutputType without action
   */
  export type MoradaCountOutputTypeCountPagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagina_freguesiaWhereInput
  }

  /**
   * MoradaCountOutputType without action
   */
  export type MoradaCountOutputTypeCountPedido_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_paginaWhereInput
  }

  /**
   * MoradaCountOutputType without action
   */
  export type MoradaCountOutputTypeCountUtilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: utilizadorWhereInput
  }


  /**
   * Count Type Pagina_freguesiaCountOutputType
   */

  export type Pagina_freguesiaCountOutputType = {
    moderador_pagina: number
    notificacao: number
    post: number
    seguidores_pagina: number
    ticket: number
  }

  export type Pagina_freguesiaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moderador_pagina?: boolean | Pagina_freguesiaCountOutputTypeCountModerador_paginaArgs
    notificacao?: boolean | Pagina_freguesiaCountOutputTypeCountNotificacaoArgs
    post?: boolean | Pagina_freguesiaCountOutputTypeCountPostArgs
    seguidores_pagina?: boolean | Pagina_freguesiaCountOutputTypeCountSeguidores_paginaArgs
    ticket?: boolean | Pagina_freguesiaCountOutputTypeCountTicketArgs
  }

  // Custom InputTypes
  /**
   * Pagina_freguesiaCountOutputType without action
   */
  export type Pagina_freguesiaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagina_freguesiaCountOutputType
     */
    select?: Pagina_freguesiaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Pagina_freguesiaCountOutputType without action
   */
  export type Pagina_freguesiaCountOutputTypeCountModerador_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: moderador_paginaWhereInput
  }

  /**
   * Pagina_freguesiaCountOutputType without action
   */
  export type Pagina_freguesiaCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacaoWhereInput
  }

  /**
   * Pagina_freguesiaCountOutputType without action
   */
  export type Pagina_freguesiaCountOutputTypeCountPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postWhereInput
  }

  /**
   * Pagina_freguesiaCountOutputType without action
   */
  export type Pagina_freguesiaCountOutputTypeCountSeguidores_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: seguidores_paginaWhereInput
  }

  /**
   * Pagina_freguesiaCountOutputType without action
   */
  export type Pagina_freguesiaCountOutputTypeCountTicketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticketWhereInput
  }


  /**
   * Count Type PostCountOutputType
   */

  export type PostCountOutputType = {
    comentario: number
    notificacao: number
  }

  export type PostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentario?: boolean | PostCountOutputTypeCountComentarioArgs
    notificacao?: boolean | PostCountOutputTypeCountNotificacaoArgs
  }

  // Custom InputTypes
  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     */
    select?: PostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountComentarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comentarioWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacaoWhereInput
  }


  /**
   * Count Type TicketCountOutputType
   */

  export type TicketCountOutputType = {
    notificacao: number
    resposta_ticket: number
  }

  export type TicketCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificacao?: boolean | TicketCountOutputTypeCountNotificacaoArgs
    resposta_ticket?: boolean | TicketCountOutputTypeCountResposta_ticketArgs
  }

  // Custom InputTypes
  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketCountOutputType
     */
    select?: TicketCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacaoWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountResposta_ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: resposta_ticketWhereInput
  }


  /**
   * Count Type UtilizadorCountOutputType
   */

  export type UtilizadorCountOutputType = {
    comentario: number
    moderador_pagina: number
    notificacao: number
    pagina_freguesia: number
    pedido_pagina: number
    perfil: number
    post: number
    resposta_ticket: number
    seguidores_pagina: number
    ticket: number
  }

  export type UtilizadorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentario?: boolean | UtilizadorCountOutputTypeCountComentarioArgs
    moderador_pagina?: boolean | UtilizadorCountOutputTypeCountModerador_paginaArgs
    notificacao?: boolean | UtilizadorCountOutputTypeCountNotificacaoArgs
    pagina_freguesia?: boolean | UtilizadorCountOutputTypeCountPagina_freguesiaArgs
    pedido_pagina?: boolean | UtilizadorCountOutputTypeCountPedido_paginaArgs
    perfil?: boolean | UtilizadorCountOutputTypeCountPerfilArgs
    post?: boolean | UtilizadorCountOutputTypeCountPostArgs
    resposta_ticket?: boolean | UtilizadorCountOutputTypeCountResposta_ticketArgs
    seguidores_pagina?: boolean | UtilizadorCountOutputTypeCountSeguidores_paginaArgs
    ticket?: boolean | UtilizadorCountOutputTypeCountTicketArgs
  }

  // Custom InputTypes
  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UtilizadorCountOutputType
     */
    select?: UtilizadorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountComentarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comentarioWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountModerador_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: moderador_paginaWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacaoWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountPagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagina_freguesiaWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountPedido_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_paginaWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountPerfilArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: perfilWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountResposta_ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: resposta_ticketWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountSeguidores_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: seguidores_paginaWhereInput
  }

  /**
   * UtilizadorCountOutputType without action
   */
  export type UtilizadorCountOutputTypeCountTicketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticketWhereInput
  }


  /**
   * Models
   */

  /**
   * Model comentario
   */

  export type AggregateComentario = {
    _count: ComentarioCountAggregateOutputType | null
    _avg: ComentarioAvgAggregateOutputType | null
    _sum: ComentarioSumAggregateOutputType | null
    _min: ComentarioMinAggregateOutputType | null
    _max: ComentarioMaxAggregateOutputType | null
  }

  export type ComentarioAvgAggregateOutputType = {
    id_comentario: number | null
    id_post: number | null
    id_utilizador: number | null
  }

  export type ComentarioSumAggregateOutputType = {
    id_comentario: number | null
    id_post: number | null
    id_utilizador: number | null
  }

  export type ComentarioMinAggregateOutputType = {
    id_comentario: number | null
    id_post: number | null
    id_utilizador: number | null
    conteudo_comentario: string | null
    data_comentario: Date | null
  }

  export type ComentarioMaxAggregateOutputType = {
    id_comentario: number | null
    id_post: number | null
    id_utilizador: number | null
    conteudo_comentario: string | null
    data_comentario: Date | null
  }

  export type ComentarioCountAggregateOutputType = {
    id_comentario: number
    id_post: number
    id_utilizador: number
    conteudo_comentario: number
    data_comentario: number
    _all: number
  }


  export type ComentarioAvgAggregateInputType = {
    id_comentario?: true
    id_post?: true
    id_utilizador?: true
  }

  export type ComentarioSumAggregateInputType = {
    id_comentario?: true
    id_post?: true
    id_utilizador?: true
  }

  export type ComentarioMinAggregateInputType = {
    id_comentario?: true
    id_post?: true
    id_utilizador?: true
    conteudo_comentario?: true
    data_comentario?: true
  }

  export type ComentarioMaxAggregateInputType = {
    id_comentario?: true
    id_post?: true
    id_utilizador?: true
    conteudo_comentario?: true
    data_comentario?: true
  }

  export type ComentarioCountAggregateInputType = {
    id_comentario?: true
    id_post?: true
    id_utilizador?: true
    conteudo_comentario?: true
    data_comentario?: true
    _all?: true
  }

  export type ComentarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comentario to aggregate.
     */
    where?: comentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comentarios to fetch.
     */
    orderBy?: comentarioOrderByWithRelationInput | comentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: comentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comentarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned comentarios
    **/
    _count?: true | ComentarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComentarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComentarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComentarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComentarioMaxAggregateInputType
  }

  export type GetComentarioAggregateType<T extends ComentarioAggregateArgs> = {
        [P in keyof T & keyof AggregateComentario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComentario[P]>
      : GetScalarType<T[P], AggregateComentario[P]>
  }




  export type comentarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comentarioWhereInput
    orderBy?: comentarioOrderByWithAggregationInput | comentarioOrderByWithAggregationInput[]
    by: ComentarioScalarFieldEnum[] | ComentarioScalarFieldEnum
    having?: comentarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComentarioCountAggregateInputType | true
    _avg?: ComentarioAvgAggregateInputType
    _sum?: ComentarioSumAggregateInputType
    _min?: ComentarioMinAggregateInputType
    _max?: ComentarioMaxAggregateInputType
  }

  export type ComentarioGroupByOutputType = {
    id_comentario: number
    id_post: number
    id_utilizador: number
    conteudo_comentario: string
    data_comentario: Date | null
    _count: ComentarioCountAggregateOutputType | null
    _avg: ComentarioAvgAggregateOutputType | null
    _sum: ComentarioSumAggregateOutputType | null
    _min: ComentarioMinAggregateOutputType | null
    _max: ComentarioMaxAggregateOutputType | null
  }

  type GetComentarioGroupByPayload<T extends comentarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComentarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComentarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComentarioGroupByOutputType[P]>
            : GetScalarType<T[P], ComentarioGroupByOutputType[P]>
        }
      >
    >


  export type comentarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_comentario?: boolean
    id_post?: boolean
    id_utilizador?: boolean
    conteudo_comentario?: boolean
    data_comentario?: boolean
    post?: boolean | comentario$postArgs<ExtArgs>
    utilizador?: boolean | comentario$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["comentario"]>

  export type comentarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_comentario?: boolean
    id_post?: boolean
    id_utilizador?: boolean
    conteudo_comentario?: boolean
    data_comentario?: boolean
    post?: boolean | comentario$postArgs<ExtArgs>
    utilizador?: boolean | comentario$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["comentario"]>

  export type comentarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_comentario?: boolean
    id_post?: boolean
    id_utilizador?: boolean
    conteudo_comentario?: boolean
    data_comentario?: boolean
    post?: boolean | comentario$postArgs<ExtArgs>
    utilizador?: boolean | comentario$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["comentario"]>

  export type comentarioSelectScalar = {
    id_comentario?: boolean
    id_post?: boolean
    id_utilizador?: boolean
    conteudo_comentario?: boolean
    data_comentario?: boolean
  }

  export type comentarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_comentario" | "id_post" | "id_utilizador" | "conteudo_comentario" | "data_comentario", ExtArgs["result"]["comentario"]>
  export type comentarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | comentario$postArgs<ExtArgs>
    utilizador?: boolean | comentario$utilizadorArgs<ExtArgs>
  }
  export type comentarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | comentario$postArgs<ExtArgs>
    utilizador?: boolean | comentario$utilizadorArgs<ExtArgs>
  }
  export type comentarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | comentario$postArgs<ExtArgs>
    utilizador?: boolean | comentario$utilizadorArgs<ExtArgs>
  }

  export type $comentarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "comentario"
    objects: {
      post: Prisma.$postPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_comentario: number
      id_post: number
      id_utilizador: number
      conteudo_comentario: string
      data_comentario: Date | null
    }, ExtArgs["result"]["comentario"]>
    composites: {}
  }

  type comentarioGetPayload<S extends boolean | null | undefined | comentarioDefaultArgs> = $Result.GetResult<Prisma.$comentarioPayload, S>

  type comentarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<comentarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComentarioCountAggregateInputType | true
    }

  export interface comentarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['comentario'], meta: { name: 'comentario' } }
    /**
     * Find zero or one Comentario that matches the filter.
     * @param {comentarioFindUniqueArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends comentarioFindUniqueArgs>(args: SelectSubset<T, comentarioFindUniqueArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comentario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {comentarioFindUniqueOrThrowArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends comentarioFindUniqueOrThrowArgs>(args: SelectSubset<T, comentarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comentario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comentarioFindFirstArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends comentarioFindFirstArgs>(args?: SelectSubset<T, comentarioFindFirstArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comentario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comentarioFindFirstOrThrowArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends comentarioFindFirstOrThrowArgs>(args?: SelectSubset<T, comentarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comentarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comentarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comentarios
     * const comentarios = await prisma.comentario.findMany()
     * 
     * // Get first 10 Comentarios
     * const comentarios = await prisma.comentario.findMany({ take: 10 })
     * 
     * // Only select the `id_comentario`
     * const comentarioWithId_comentarioOnly = await prisma.comentario.findMany({ select: { id_comentario: true } })
     * 
     */
    findMany<T extends comentarioFindManyArgs>(args?: SelectSubset<T, comentarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comentario.
     * @param {comentarioCreateArgs} args - Arguments to create a Comentario.
     * @example
     * // Create one Comentario
     * const Comentario = await prisma.comentario.create({
     *   data: {
     *     // ... data to create a Comentario
     *   }
     * })
     * 
     */
    create<T extends comentarioCreateArgs>(args: SelectSubset<T, comentarioCreateArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comentarios.
     * @param {comentarioCreateManyArgs} args - Arguments to create many Comentarios.
     * @example
     * // Create many Comentarios
     * const comentario = await prisma.comentario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends comentarioCreateManyArgs>(args?: SelectSubset<T, comentarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comentarios and returns the data saved in the database.
     * @param {comentarioCreateManyAndReturnArgs} args - Arguments to create many Comentarios.
     * @example
     * // Create many Comentarios
     * const comentario = await prisma.comentario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comentarios and only return the `id_comentario`
     * const comentarioWithId_comentarioOnly = await prisma.comentario.createManyAndReturn({
     *   select: { id_comentario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends comentarioCreateManyAndReturnArgs>(args?: SelectSubset<T, comentarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comentario.
     * @param {comentarioDeleteArgs} args - Arguments to delete one Comentario.
     * @example
     * // Delete one Comentario
     * const Comentario = await prisma.comentario.delete({
     *   where: {
     *     // ... filter to delete one Comentario
     *   }
     * })
     * 
     */
    delete<T extends comentarioDeleteArgs>(args: SelectSubset<T, comentarioDeleteArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comentario.
     * @param {comentarioUpdateArgs} args - Arguments to update one Comentario.
     * @example
     * // Update one Comentario
     * const comentario = await prisma.comentario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends comentarioUpdateArgs>(args: SelectSubset<T, comentarioUpdateArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comentarios.
     * @param {comentarioDeleteManyArgs} args - Arguments to filter Comentarios to delete.
     * @example
     * // Delete a few Comentarios
     * const { count } = await prisma.comentario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends comentarioDeleteManyArgs>(args?: SelectSubset<T, comentarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comentarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comentarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comentarios
     * const comentario = await prisma.comentario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends comentarioUpdateManyArgs>(args: SelectSubset<T, comentarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comentarios and returns the data updated in the database.
     * @param {comentarioUpdateManyAndReturnArgs} args - Arguments to update many Comentarios.
     * @example
     * // Update many Comentarios
     * const comentario = await prisma.comentario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comentarios and only return the `id_comentario`
     * const comentarioWithId_comentarioOnly = await prisma.comentario.updateManyAndReturn({
     *   select: { id_comentario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends comentarioUpdateManyAndReturnArgs>(args: SelectSubset<T, comentarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comentario.
     * @param {comentarioUpsertArgs} args - Arguments to update or create a Comentario.
     * @example
     * // Update or create a Comentario
     * const comentario = await prisma.comentario.upsert({
     *   create: {
     *     // ... data to create a Comentario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comentario we want to update
     *   }
     * })
     */
    upsert<T extends comentarioUpsertArgs>(args: SelectSubset<T, comentarioUpsertArgs<ExtArgs>>): Prisma__comentarioClient<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comentarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comentarioCountArgs} args - Arguments to filter Comentarios to count.
     * @example
     * // Count the number of Comentarios
     * const count = await prisma.comentario.count({
     *   where: {
     *     // ... the filter for the Comentarios we want to count
     *   }
     * })
    **/
    count<T extends comentarioCountArgs>(
      args?: Subset<T, comentarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComentarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comentario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComentarioAggregateArgs>(args: Subset<T, ComentarioAggregateArgs>): Prisma.PrismaPromise<GetComentarioAggregateType<T>>

    /**
     * Group by Comentario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comentarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends comentarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: comentarioGroupByArgs['orderBy'] }
        : { orderBy?: comentarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, comentarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComentarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the comentario model
   */
  readonly fields: comentarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for comentario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__comentarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends comentario$postArgs<ExtArgs> = {}>(args?: Subset<T, comentario$postArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends comentario$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, comentario$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the comentario model
   */
  interface comentarioFieldRefs {
    readonly id_comentario: FieldRef<"comentario", 'Int'>
    readonly id_post: FieldRef<"comentario", 'Int'>
    readonly id_utilizador: FieldRef<"comentario", 'Int'>
    readonly conteudo_comentario: FieldRef<"comentario", 'String'>
    readonly data_comentario: FieldRef<"comentario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * comentario findUnique
   */
  export type comentarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * Filter, which comentario to fetch.
     */
    where: comentarioWhereUniqueInput
  }

  /**
   * comentario findUniqueOrThrow
   */
  export type comentarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * Filter, which comentario to fetch.
     */
    where: comentarioWhereUniqueInput
  }

  /**
   * comentario findFirst
   */
  export type comentarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * Filter, which comentario to fetch.
     */
    where?: comentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comentarios to fetch.
     */
    orderBy?: comentarioOrderByWithRelationInput | comentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comentarios.
     */
    cursor?: comentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comentarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comentarios.
     */
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * comentario findFirstOrThrow
   */
  export type comentarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * Filter, which comentario to fetch.
     */
    where?: comentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comentarios to fetch.
     */
    orderBy?: comentarioOrderByWithRelationInput | comentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comentarios.
     */
    cursor?: comentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comentarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comentarios.
     */
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * comentario findMany
   */
  export type comentarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * Filter, which comentarios to fetch.
     */
    where?: comentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comentarios to fetch.
     */
    orderBy?: comentarioOrderByWithRelationInput | comentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing comentarios.
     */
    cursor?: comentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comentarios.
     */
    skip?: number
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * comentario create
   */
  export type comentarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * The data needed to create a comentario.
     */
    data: XOR<comentarioCreateInput, comentarioUncheckedCreateInput>
  }

  /**
   * comentario createMany
   */
  export type comentarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many comentarios.
     */
    data: comentarioCreateManyInput | comentarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * comentario createManyAndReturn
   */
  export type comentarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * The data used to create many comentarios.
     */
    data: comentarioCreateManyInput | comentarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * comentario update
   */
  export type comentarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * The data needed to update a comentario.
     */
    data: XOR<comentarioUpdateInput, comentarioUncheckedUpdateInput>
    /**
     * Choose, which comentario to update.
     */
    where: comentarioWhereUniqueInput
  }

  /**
   * comentario updateMany
   */
  export type comentarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update comentarios.
     */
    data: XOR<comentarioUpdateManyMutationInput, comentarioUncheckedUpdateManyInput>
    /**
     * Filter which comentarios to update
     */
    where?: comentarioWhereInput
    /**
     * Limit how many comentarios to update.
     */
    limit?: number
  }

  /**
   * comentario updateManyAndReturn
   */
  export type comentarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * The data used to update comentarios.
     */
    data: XOR<comentarioUpdateManyMutationInput, comentarioUncheckedUpdateManyInput>
    /**
     * Filter which comentarios to update
     */
    where?: comentarioWhereInput
    /**
     * Limit how many comentarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * comentario upsert
   */
  export type comentarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * The filter to search for the comentario to update in case it exists.
     */
    where: comentarioWhereUniqueInput
    /**
     * In case the comentario found by the `where` argument doesn't exist, create a new comentario with this data.
     */
    create: XOR<comentarioCreateInput, comentarioUncheckedCreateInput>
    /**
     * In case the comentario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<comentarioUpdateInput, comentarioUncheckedUpdateInput>
  }

  /**
   * comentario delete
   */
  export type comentarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    /**
     * Filter which comentario to delete.
     */
    where: comentarioWhereUniqueInput
  }

  /**
   * comentario deleteMany
   */
  export type comentarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comentarios to delete
     */
    where?: comentarioWhereInput
    /**
     * Limit how many comentarios to delete.
     */
    limit?: number
  }

  /**
   * comentario.post
   */
  export type comentario$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
  }

  /**
   * comentario.utilizador
   */
  export type comentario$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * comentario without action
   */
  export type comentarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
  }


  /**
   * Model moderador_pagina
   */

  export type AggregateModerador_pagina = {
    _count: Moderador_paginaCountAggregateOutputType | null
    _avg: Moderador_paginaAvgAggregateOutputType | null
    _sum: Moderador_paginaSumAggregateOutputType | null
    _min: Moderador_paginaMinAggregateOutputType | null
    _max: Moderador_paginaMaxAggregateOutputType | null
  }

  export type Moderador_paginaAvgAggregateOutputType = {
    id_moderador: number | null
    id_pagina: number | null
    id_utilizador: number | null
  }

  export type Moderador_paginaSumAggregateOutputType = {
    id_moderador: number | null
    id_pagina: number | null
    id_utilizador: number | null
  }

  export type Moderador_paginaMinAggregateOutputType = {
    id_moderador: number | null
    id_pagina: number | null
    id_utilizador: number | null
    funcao: $Enums.funcao_moderador | null
  }

  export type Moderador_paginaMaxAggregateOutputType = {
    id_moderador: number | null
    id_pagina: number | null
    id_utilizador: number | null
    funcao: $Enums.funcao_moderador | null
  }

  export type Moderador_paginaCountAggregateOutputType = {
    id_moderador: number
    id_pagina: number
    id_utilizador: number
    funcao: number
    _all: number
  }


  export type Moderador_paginaAvgAggregateInputType = {
    id_moderador?: true
    id_pagina?: true
    id_utilizador?: true
  }

  export type Moderador_paginaSumAggregateInputType = {
    id_moderador?: true
    id_pagina?: true
    id_utilizador?: true
  }

  export type Moderador_paginaMinAggregateInputType = {
    id_moderador?: true
    id_pagina?: true
    id_utilizador?: true
    funcao?: true
  }

  export type Moderador_paginaMaxAggregateInputType = {
    id_moderador?: true
    id_pagina?: true
    id_utilizador?: true
    funcao?: true
  }

  export type Moderador_paginaCountAggregateInputType = {
    id_moderador?: true
    id_pagina?: true
    id_utilizador?: true
    funcao?: true
    _all?: true
  }

  export type Moderador_paginaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which moderador_pagina to aggregate.
     */
    where?: moderador_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moderador_paginas to fetch.
     */
    orderBy?: moderador_paginaOrderByWithRelationInput | moderador_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: moderador_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moderador_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moderador_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned moderador_paginas
    **/
    _count?: true | Moderador_paginaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Moderador_paginaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Moderador_paginaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Moderador_paginaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Moderador_paginaMaxAggregateInputType
  }

  export type GetModerador_paginaAggregateType<T extends Moderador_paginaAggregateArgs> = {
        [P in keyof T & keyof AggregateModerador_pagina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModerador_pagina[P]>
      : GetScalarType<T[P], AggregateModerador_pagina[P]>
  }




  export type moderador_paginaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: moderador_paginaWhereInput
    orderBy?: moderador_paginaOrderByWithAggregationInput | moderador_paginaOrderByWithAggregationInput[]
    by: Moderador_paginaScalarFieldEnum[] | Moderador_paginaScalarFieldEnum
    having?: moderador_paginaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Moderador_paginaCountAggregateInputType | true
    _avg?: Moderador_paginaAvgAggregateInputType
    _sum?: Moderador_paginaSumAggregateInputType
    _min?: Moderador_paginaMinAggregateInputType
    _max?: Moderador_paginaMaxAggregateInputType
  }

  export type Moderador_paginaGroupByOutputType = {
    id_moderador: number
    id_pagina: number | null
    id_utilizador: number | null
    funcao: $Enums.funcao_moderador
    _count: Moderador_paginaCountAggregateOutputType | null
    _avg: Moderador_paginaAvgAggregateOutputType | null
    _sum: Moderador_paginaSumAggregateOutputType | null
    _min: Moderador_paginaMinAggregateOutputType | null
    _max: Moderador_paginaMaxAggregateOutputType | null
  }

  type GetModerador_paginaGroupByPayload<T extends moderador_paginaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Moderador_paginaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Moderador_paginaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Moderador_paginaGroupByOutputType[P]>
            : GetScalarType<T[P], Moderador_paginaGroupByOutputType[P]>
        }
      >
    >


  export type moderador_paginaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_moderador?: boolean
    id_pagina?: boolean
    id_utilizador?: boolean
    funcao?: boolean
    pagina_freguesia?: boolean | moderador_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | moderador_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["moderador_pagina"]>

  export type moderador_paginaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_moderador?: boolean
    id_pagina?: boolean
    id_utilizador?: boolean
    funcao?: boolean
    pagina_freguesia?: boolean | moderador_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | moderador_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["moderador_pagina"]>

  export type moderador_paginaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_moderador?: boolean
    id_pagina?: boolean
    id_utilizador?: boolean
    funcao?: boolean
    pagina_freguesia?: boolean | moderador_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | moderador_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["moderador_pagina"]>

  export type moderador_paginaSelectScalar = {
    id_moderador?: boolean
    id_pagina?: boolean
    id_utilizador?: boolean
    funcao?: boolean
  }

  export type moderador_paginaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_moderador" | "id_pagina" | "id_utilizador" | "funcao", ExtArgs["result"]["moderador_pagina"]>
  export type moderador_paginaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | moderador_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | moderador_pagina$utilizadorArgs<ExtArgs>
  }
  export type moderador_paginaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | moderador_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | moderador_pagina$utilizadorArgs<ExtArgs>
  }
  export type moderador_paginaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | moderador_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | moderador_pagina$utilizadorArgs<ExtArgs>
  }

  export type $moderador_paginaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "moderador_pagina"
    objects: {
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_moderador: number
      id_pagina: number | null
      id_utilizador: number | null
      funcao: $Enums.funcao_moderador
    }, ExtArgs["result"]["moderador_pagina"]>
    composites: {}
  }

  type moderador_paginaGetPayload<S extends boolean | null | undefined | moderador_paginaDefaultArgs> = $Result.GetResult<Prisma.$moderador_paginaPayload, S>

  type moderador_paginaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<moderador_paginaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Moderador_paginaCountAggregateInputType | true
    }

  export interface moderador_paginaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['moderador_pagina'], meta: { name: 'moderador_pagina' } }
    /**
     * Find zero or one Moderador_pagina that matches the filter.
     * @param {moderador_paginaFindUniqueArgs} args - Arguments to find a Moderador_pagina
     * @example
     * // Get one Moderador_pagina
     * const moderador_pagina = await prisma.moderador_pagina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends moderador_paginaFindUniqueArgs>(args: SelectSubset<T, moderador_paginaFindUniqueArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Moderador_pagina that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {moderador_paginaFindUniqueOrThrowArgs} args - Arguments to find a Moderador_pagina
     * @example
     * // Get one Moderador_pagina
     * const moderador_pagina = await prisma.moderador_pagina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends moderador_paginaFindUniqueOrThrowArgs>(args: SelectSubset<T, moderador_paginaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Moderador_pagina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moderador_paginaFindFirstArgs} args - Arguments to find a Moderador_pagina
     * @example
     * // Get one Moderador_pagina
     * const moderador_pagina = await prisma.moderador_pagina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends moderador_paginaFindFirstArgs>(args?: SelectSubset<T, moderador_paginaFindFirstArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Moderador_pagina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moderador_paginaFindFirstOrThrowArgs} args - Arguments to find a Moderador_pagina
     * @example
     * // Get one Moderador_pagina
     * const moderador_pagina = await prisma.moderador_pagina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends moderador_paginaFindFirstOrThrowArgs>(args?: SelectSubset<T, moderador_paginaFindFirstOrThrowArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Moderador_paginas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moderador_paginaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Moderador_paginas
     * const moderador_paginas = await prisma.moderador_pagina.findMany()
     * 
     * // Get first 10 Moderador_paginas
     * const moderador_paginas = await prisma.moderador_pagina.findMany({ take: 10 })
     * 
     * // Only select the `id_moderador`
     * const moderador_paginaWithId_moderadorOnly = await prisma.moderador_pagina.findMany({ select: { id_moderador: true } })
     * 
     */
    findMany<T extends moderador_paginaFindManyArgs>(args?: SelectSubset<T, moderador_paginaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Moderador_pagina.
     * @param {moderador_paginaCreateArgs} args - Arguments to create a Moderador_pagina.
     * @example
     * // Create one Moderador_pagina
     * const Moderador_pagina = await prisma.moderador_pagina.create({
     *   data: {
     *     // ... data to create a Moderador_pagina
     *   }
     * })
     * 
     */
    create<T extends moderador_paginaCreateArgs>(args: SelectSubset<T, moderador_paginaCreateArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Moderador_paginas.
     * @param {moderador_paginaCreateManyArgs} args - Arguments to create many Moderador_paginas.
     * @example
     * // Create many Moderador_paginas
     * const moderador_pagina = await prisma.moderador_pagina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends moderador_paginaCreateManyArgs>(args?: SelectSubset<T, moderador_paginaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Moderador_paginas and returns the data saved in the database.
     * @param {moderador_paginaCreateManyAndReturnArgs} args - Arguments to create many Moderador_paginas.
     * @example
     * // Create many Moderador_paginas
     * const moderador_pagina = await prisma.moderador_pagina.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Moderador_paginas and only return the `id_moderador`
     * const moderador_paginaWithId_moderadorOnly = await prisma.moderador_pagina.createManyAndReturn({
     *   select: { id_moderador: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends moderador_paginaCreateManyAndReturnArgs>(args?: SelectSubset<T, moderador_paginaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Moderador_pagina.
     * @param {moderador_paginaDeleteArgs} args - Arguments to delete one Moderador_pagina.
     * @example
     * // Delete one Moderador_pagina
     * const Moderador_pagina = await prisma.moderador_pagina.delete({
     *   where: {
     *     // ... filter to delete one Moderador_pagina
     *   }
     * })
     * 
     */
    delete<T extends moderador_paginaDeleteArgs>(args: SelectSubset<T, moderador_paginaDeleteArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Moderador_pagina.
     * @param {moderador_paginaUpdateArgs} args - Arguments to update one Moderador_pagina.
     * @example
     * // Update one Moderador_pagina
     * const moderador_pagina = await prisma.moderador_pagina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends moderador_paginaUpdateArgs>(args: SelectSubset<T, moderador_paginaUpdateArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Moderador_paginas.
     * @param {moderador_paginaDeleteManyArgs} args - Arguments to filter Moderador_paginas to delete.
     * @example
     * // Delete a few Moderador_paginas
     * const { count } = await prisma.moderador_pagina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends moderador_paginaDeleteManyArgs>(args?: SelectSubset<T, moderador_paginaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moderador_paginas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moderador_paginaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Moderador_paginas
     * const moderador_pagina = await prisma.moderador_pagina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends moderador_paginaUpdateManyArgs>(args: SelectSubset<T, moderador_paginaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moderador_paginas and returns the data updated in the database.
     * @param {moderador_paginaUpdateManyAndReturnArgs} args - Arguments to update many Moderador_paginas.
     * @example
     * // Update many Moderador_paginas
     * const moderador_pagina = await prisma.moderador_pagina.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Moderador_paginas and only return the `id_moderador`
     * const moderador_paginaWithId_moderadorOnly = await prisma.moderador_pagina.updateManyAndReturn({
     *   select: { id_moderador: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends moderador_paginaUpdateManyAndReturnArgs>(args: SelectSubset<T, moderador_paginaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Moderador_pagina.
     * @param {moderador_paginaUpsertArgs} args - Arguments to update or create a Moderador_pagina.
     * @example
     * // Update or create a Moderador_pagina
     * const moderador_pagina = await prisma.moderador_pagina.upsert({
     *   create: {
     *     // ... data to create a Moderador_pagina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Moderador_pagina we want to update
     *   }
     * })
     */
    upsert<T extends moderador_paginaUpsertArgs>(args: SelectSubset<T, moderador_paginaUpsertArgs<ExtArgs>>): Prisma__moderador_paginaClient<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Moderador_paginas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moderador_paginaCountArgs} args - Arguments to filter Moderador_paginas to count.
     * @example
     * // Count the number of Moderador_paginas
     * const count = await prisma.moderador_pagina.count({
     *   where: {
     *     // ... the filter for the Moderador_paginas we want to count
     *   }
     * })
    **/
    count<T extends moderador_paginaCountArgs>(
      args?: Subset<T, moderador_paginaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Moderador_paginaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Moderador_pagina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Moderador_paginaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Moderador_paginaAggregateArgs>(args: Subset<T, Moderador_paginaAggregateArgs>): Prisma.PrismaPromise<GetModerador_paginaAggregateType<T>>

    /**
     * Group by Moderador_pagina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moderador_paginaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends moderador_paginaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: moderador_paginaGroupByArgs['orderBy'] }
        : { orderBy?: moderador_paginaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, moderador_paginaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModerador_paginaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the moderador_pagina model
   */
  readonly fields: moderador_paginaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for moderador_pagina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__moderador_paginaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pagina_freguesia<T extends moderador_pagina$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, moderador_pagina$pagina_freguesiaArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends moderador_pagina$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, moderador_pagina$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the moderador_pagina model
   */
  interface moderador_paginaFieldRefs {
    readonly id_moderador: FieldRef<"moderador_pagina", 'Int'>
    readonly id_pagina: FieldRef<"moderador_pagina", 'Int'>
    readonly id_utilizador: FieldRef<"moderador_pagina", 'Int'>
    readonly funcao: FieldRef<"moderador_pagina", 'funcao_moderador'>
  }
    

  // Custom InputTypes
  /**
   * moderador_pagina findUnique
   */
  export type moderador_paginaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * Filter, which moderador_pagina to fetch.
     */
    where: moderador_paginaWhereUniqueInput
  }

  /**
   * moderador_pagina findUniqueOrThrow
   */
  export type moderador_paginaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * Filter, which moderador_pagina to fetch.
     */
    where: moderador_paginaWhereUniqueInput
  }

  /**
   * moderador_pagina findFirst
   */
  export type moderador_paginaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * Filter, which moderador_pagina to fetch.
     */
    where?: moderador_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moderador_paginas to fetch.
     */
    orderBy?: moderador_paginaOrderByWithRelationInput | moderador_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for moderador_paginas.
     */
    cursor?: moderador_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moderador_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moderador_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of moderador_paginas.
     */
    distinct?: Moderador_paginaScalarFieldEnum | Moderador_paginaScalarFieldEnum[]
  }

  /**
   * moderador_pagina findFirstOrThrow
   */
  export type moderador_paginaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * Filter, which moderador_pagina to fetch.
     */
    where?: moderador_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moderador_paginas to fetch.
     */
    orderBy?: moderador_paginaOrderByWithRelationInput | moderador_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for moderador_paginas.
     */
    cursor?: moderador_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moderador_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moderador_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of moderador_paginas.
     */
    distinct?: Moderador_paginaScalarFieldEnum | Moderador_paginaScalarFieldEnum[]
  }

  /**
   * moderador_pagina findMany
   */
  export type moderador_paginaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * Filter, which moderador_paginas to fetch.
     */
    where?: moderador_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moderador_paginas to fetch.
     */
    orderBy?: moderador_paginaOrderByWithRelationInput | moderador_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing moderador_paginas.
     */
    cursor?: moderador_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moderador_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moderador_paginas.
     */
    skip?: number
    distinct?: Moderador_paginaScalarFieldEnum | Moderador_paginaScalarFieldEnum[]
  }

  /**
   * moderador_pagina create
   */
  export type moderador_paginaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * The data needed to create a moderador_pagina.
     */
    data: XOR<moderador_paginaCreateInput, moderador_paginaUncheckedCreateInput>
  }

  /**
   * moderador_pagina createMany
   */
  export type moderador_paginaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many moderador_paginas.
     */
    data: moderador_paginaCreateManyInput | moderador_paginaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * moderador_pagina createManyAndReturn
   */
  export type moderador_paginaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * The data used to create many moderador_paginas.
     */
    data: moderador_paginaCreateManyInput | moderador_paginaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * moderador_pagina update
   */
  export type moderador_paginaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * The data needed to update a moderador_pagina.
     */
    data: XOR<moderador_paginaUpdateInput, moderador_paginaUncheckedUpdateInput>
    /**
     * Choose, which moderador_pagina to update.
     */
    where: moderador_paginaWhereUniqueInput
  }

  /**
   * moderador_pagina updateMany
   */
  export type moderador_paginaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update moderador_paginas.
     */
    data: XOR<moderador_paginaUpdateManyMutationInput, moderador_paginaUncheckedUpdateManyInput>
    /**
     * Filter which moderador_paginas to update
     */
    where?: moderador_paginaWhereInput
    /**
     * Limit how many moderador_paginas to update.
     */
    limit?: number
  }

  /**
   * moderador_pagina updateManyAndReturn
   */
  export type moderador_paginaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * The data used to update moderador_paginas.
     */
    data: XOR<moderador_paginaUpdateManyMutationInput, moderador_paginaUncheckedUpdateManyInput>
    /**
     * Filter which moderador_paginas to update
     */
    where?: moderador_paginaWhereInput
    /**
     * Limit how many moderador_paginas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * moderador_pagina upsert
   */
  export type moderador_paginaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * The filter to search for the moderador_pagina to update in case it exists.
     */
    where: moderador_paginaWhereUniqueInput
    /**
     * In case the moderador_pagina found by the `where` argument doesn't exist, create a new moderador_pagina with this data.
     */
    create: XOR<moderador_paginaCreateInput, moderador_paginaUncheckedCreateInput>
    /**
     * In case the moderador_pagina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<moderador_paginaUpdateInput, moderador_paginaUncheckedUpdateInput>
  }

  /**
   * moderador_pagina delete
   */
  export type moderador_paginaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    /**
     * Filter which moderador_pagina to delete.
     */
    where: moderador_paginaWhereUniqueInput
  }

  /**
   * moderador_pagina deleteMany
   */
  export type moderador_paginaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which moderador_paginas to delete
     */
    where?: moderador_paginaWhereInput
    /**
     * Limit how many moderador_paginas to delete.
     */
    limit?: number
  }

  /**
   * moderador_pagina.pagina_freguesia
   */
  export type moderador_pagina$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
  }

  /**
   * moderador_pagina.utilizador
   */
  export type moderador_pagina$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * moderador_pagina without action
   */
  export type moderador_paginaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
  }


  /**
   * Model morada
   */

  export type AggregateMorada = {
    _count: MoradaCountAggregateOutputType | null
    _avg: MoradaAvgAggregateOutputType | null
    _sum: MoradaSumAggregateOutputType | null
    _min: MoradaMinAggregateOutputType | null
    _max: MoradaMaxAggregateOutputType | null
  }

  export type MoradaAvgAggregateOutputType = {
    id_morada: number | null
    codigo_postal: number | null
  }

  export type MoradaSumAggregateOutputType = {
    id_morada: number | null
    codigo_postal: number | null
  }

  export type MoradaMinAggregateOutputType = {
    id_morada: number | null
    freguesia: string | null
    cidade: string | null
    rua: string | null
    codigo_postal: number | null
  }

  export type MoradaMaxAggregateOutputType = {
    id_morada: number | null
    freguesia: string | null
    cidade: string | null
    rua: string | null
    codigo_postal: number | null
  }

  export type MoradaCountAggregateOutputType = {
    id_morada: number
    freguesia: number
    cidade: number
    rua: number
    codigo_postal: number
    _all: number
  }


  export type MoradaAvgAggregateInputType = {
    id_morada?: true
    codigo_postal?: true
  }

  export type MoradaSumAggregateInputType = {
    id_morada?: true
    codigo_postal?: true
  }

  export type MoradaMinAggregateInputType = {
    id_morada?: true
    freguesia?: true
    cidade?: true
    rua?: true
    codigo_postal?: true
  }

  export type MoradaMaxAggregateInputType = {
    id_morada?: true
    freguesia?: true
    cidade?: true
    rua?: true
    codigo_postal?: true
  }

  export type MoradaCountAggregateInputType = {
    id_morada?: true
    freguesia?: true
    cidade?: true
    rua?: true
    codigo_postal?: true
    _all?: true
  }

  export type MoradaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which morada to aggregate.
     */
    where?: moradaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moradas to fetch.
     */
    orderBy?: moradaOrderByWithRelationInput | moradaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: moradaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moradas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moradas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned moradas
    **/
    _count?: true | MoradaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MoradaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MoradaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MoradaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MoradaMaxAggregateInputType
  }

  export type GetMoradaAggregateType<T extends MoradaAggregateArgs> = {
        [P in keyof T & keyof AggregateMorada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMorada[P]>
      : GetScalarType<T[P], AggregateMorada[P]>
  }




  export type moradaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: moradaWhereInput
    orderBy?: moradaOrderByWithAggregationInput | moradaOrderByWithAggregationInput[]
    by: MoradaScalarFieldEnum[] | MoradaScalarFieldEnum
    having?: moradaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MoradaCountAggregateInputType | true
    _avg?: MoradaAvgAggregateInputType
    _sum?: MoradaSumAggregateInputType
    _min?: MoradaMinAggregateInputType
    _max?: MoradaMaxAggregateInputType
  }

  export type MoradaGroupByOutputType = {
    id_morada: number
    freguesia: string | null
    cidade: string
    rua: string | null
    codigo_postal: number
    _count: MoradaCountAggregateOutputType | null
    _avg: MoradaAvgAggregateOutputType | null
    _sum: MoradaSumAggregateOutputType | null
    _min: MoradaMinAggregateOutputType | null
    _max: MoradaMaxAggregateOutputType | null
  }

  type GetMoradaGroupByPayload<T extends moradaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MoradaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MoradaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MoradaGroupByOutputType[P]>
            : GetScalarType<T[P], MoradaGroupByOutputType[P]>
        }
      >
    >


  export type moradaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_morada?: boolean
    freguesia?: boolean
    cidade?: boolean
    rua?: boolean
    codigo_postal?: boolean
    pagina_freguesia?: boolean | morada$pagina_freguesiaArgs<ExtArgs>
    pedido_pagina?: boolean | morada$pedido_paginaArgs<ExtArgs>
    utilizador?: boolean | morada$utilizadorArgs<ExtArgs>
    _count?: boolean | MoradaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["morada"]>

  export type moradaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_morada?: boolean
    freguesia?: boolean
    cidade?: boolean
    rua?: boolean
    codigo_postal?: boolean
  }, ExtArgs["result"]["morada"]>

  export type moradaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_morada?: boolean
    freguesia?: boolean
    cidade?: boolean
    rua?: boolean
    codigo_postal?: boolean
  }, ExtArgs["result"]["morada"]>

  export type moradaSelectScalar = {
    id_morada?: boolean
    freguesia?: boolean
    cidade?: boolean
    rua?: boolean
    codigo_postal?: boolean
  }

  export type moradaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_morada" | "freguesia" | "cidade" | "rua" | "codigo_postal", ExtArgs["result"]["morada"]>
  export type moradaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | morada$pagina_freguesiaArgs<ExtArgs>
    pedido_pagina?: boolean | morada$pedido_paginaArgs<ExtArgs>
    utilizador?: boolean | morada$utilizadorArgs<ExtArgs>
    _count?: boolean | MoradaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type moradaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type moradaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $moradaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "morada"
    objects: {
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs>[]
      pedido_pagina: Prisma.$pedido_paginaPayload<ExtArgs>[]
      utilizador: Prisma.$utilizadorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_morada: number
      freguesia: string | null
      cidade: string
      rua: string | null
      codigo_postal: number
    }, ExtArgs["result"]["morada"]>
    composites: {}
  }

  type moradaGetPayload<S extends boolean | null | undefined | moradaDefaultArgs> = $Result.GetResult<Prisma.$moradaPayload, S>

  type moradaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<moradaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MoradaCountAggregateInputType | true
    }

  export interface moradaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['morada'], meta: { name: 'morada' } }
    /**
     * Find zero or one Morada that matches the filter.
     * @param {moradaFindUniqueArgs} args - Arguments to find a Morada
     * @example
     * // Get one Morada
     * const morada = await prisma.morada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends moradaFindUniqueArgs>(args: SelectSubset<T, moradaFindUniqueArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Morada that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {moradaFindUniqueOrThrowArgs} args - Arguments to find a Morada
     * @example
     * // Get one Morada
     * const morada = await prisma.morada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends moradaFindUniqueOrThrowArgs>(args: SelectSubset<T, moradaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Morada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moradaFindFirstArgs} args - Arguments to find a Morada
     * @example
     * // Get one Morada
     * const morada = await prisma.morada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends moradaFindFirstArgs>(args?: SelectSubset<T, moradaFindFirstArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Morada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moradaFindFirstOrThrowArgs} args - Arguments to find a Morada
     * @example
     * // Get one Morada
     * const morada = await prisma.morada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends moradaFindFirstOrThrowArgs>(args?: SelectSubset<T, moradaFindFirstOrThrowArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Moradas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moradaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Moradas
     * const moradas = await prisma.morada.findMany()
     * 
     * // Get first 10 Moradas
     * const moradas = await prisma.morada.findMany({ take: 10 })
     * 
     * // Only select the `id_morada`
     * const moradaWithId_moradaOnly = await prisma.morada.findMany({ select: { id_morada: true } })
     * 
     */
    findMany<T extends moradaFindManyArgs>(args?: SelectSubset<T, moradaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Morada.
     * @param {moradaCreateArgs} args - Arguments to create a Morada.
     * @example
     * // Create one Morada
     * const Morada = await prisma.morada.create({
     *   data: {
     *     // ... data to create a Morada
     *   }
     * })
     * 
     */
    create<T extends moradaCreateArgs>(args: SelectSubset<T, moradaCreateArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Moradas.
     * @param {moradaCreateManyArgs} args - Arguments to create many Moradas.
     * @example
     * // Create many Moradas
     * const morada = await prisma.morada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends moradaCreateManyArgs>(args?: SelectSubset<T, moradaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Moradas and returns the data saved in the database.
     * @param {moradaCreateManyAndReturnArgs} args - Arguments to create many Moradas.
     * @example
     * // Create many Moradas
     * const morada = await prisma.morada.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Moradas and only return the `id_morada`
     * const moradaWithId_moradaOnly = await prisma.morada.createManyAndReturn({
     *   select: { id_morada: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends moradaCreateManyAndReturnArgs>(args?: SelectSubset<T, moradaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Morada.
     * @param {moradaDeleteArgs} args - Arguments to delete one Morada.
     * @example
     * // Delete one Morada
     * const Morada = await prisma.morada.delete({
     *   where: {
     *     // ... filter to delete one Morada
     *   }
     * })
     * 
     */
    delete<T extends moradaDeleteArgs>(args: SelectSubset<T, moradaDeleteArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Morada.
     * @param {moradaUpdateArgs} args - Arguments to update one Morada.
     * @example
     * // Update one Morada
     * const morada = await prisma.morada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends moradaUpdateArgs>(args: SelectSubset<T, moradaUpdateArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Moradas.
     * @param {moradaDeleteManyArgs} args - Arguments to filter Moradas to delete.
     * @example
     * // Delete a few Moradas
     * const { count } = await prisma.morada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends moradaDeleteManyArgs>(args?: SelectSubset<T, moradaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moradas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moradaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Moradas
     * const morada = await prisma.morada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends moradaUpdateManyArgs>(args: SelectSubset<T, moradaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moradas and returns the data updated in the database.
     * @param {moradaUpdateManyAndReturnArgs} args - Arguments to update many Moradas.
     * @example
     * // Update many Moradas
     * const morada = await prisma.morada.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Moradas and only return the `id_morada`
     * const moradaWithId_moradaOnly = await prisma.morada.updateManyAndReturn({
     *   select: { id_morada: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends moradaUpdateManyAndReturnArgs>(args: SelectSubset<T, moradaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Morada.
     * @param {moradaUpsertArgs} args - Arguments to update or create a Morada.
     * @example
     * // Update or create a Morada
     * const morada = await prisma.morada.upsert({
     *   create: {
     *     // ... data to create a Morada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Morada we want to update
     *   }
     * })
     */
    upsert<T extends moradaUpsertArgs>(args: SelectSubset<T, moradaUpsertArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Moradas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moradaCountArgs} args - Arguments to filter Moradas to count.
     * @example
     * // Count the number of Moradas
     * const count = await prisma.morada.count({
     *   where: {
     *     // ... the filter for the Moradas we want to count
     *   }
     * })
    **/
    count<T extends moradaCountArgs>(
      args?: Subset<T, moradaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MoradaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Morada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MoradaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MoradaAggregateArgs>(args: Subset<T, MoradaAggregateArgs>): Prisma.PrismaPromise<GetMoradaAggregateType<T>>

    /**
     * Group by Morada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {moradaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends moradaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: moradaGroupByArgs['orderBy'] }
        : { orderBy?: moradaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, moradaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMoradaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the morada model
   */
  readonly fields: moradaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for morada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__moradaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pagina_freguesia<T extends morada$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, morada$pagina_freguesiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedido_pagina<T extends morada$pedido_paginaArgs<ExtArgs> = {}>(args?: Subset<T, morada$pedido_paginaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    utilizador<T extends morada$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, morada$utilizadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the morada model
   */
  interface moradaFieldRefs {
    readonly id_morada: FieldRef<"morada", 'Int'>
    readonly freguesia: FieldRef<"morada", 'String'>
    readonly cidade: FieldRef<"morada", 'String'>
    readonly rua: FieldRef<"morada", 'String'>
    readonly codigo_postal: FieldRef<"morada", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * morada findUnique
   */
  export type moradaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * Filter, which morada to fetch.
     */
    where: moradaWhereUniqueInput
  }

  /**
   * morada findUniqueOrThrow
   */
  export type moradaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * Filter, which morada to fetch.
     */
    where: moradaWhereUniqueInput
  }

  /**
   * morada findFirst
   */
  export type moradaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * Filter, which morada to fetch.
     */
    where?: moradaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moradas to fetch.
     */
    orderBy?: moradaOrderByWithRelationInput | moradaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for moradas.
     */
    cursor?: moradaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moradas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moradas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of moradas.
     */
    distinct?: MoradaScalarFieldEnum | MoradaScalarFieldEnum[]
  }

  /**
   * morada findFirstOrThrow
   */
  export type moradaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * Filter, which morada to fetch.
     */
    where?: moradaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moradas to fetch.
     */
    orderBy?: moradaOrderByWithRelationInput | moradaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for moradas.
     */
    cursor?: moradaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moradas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moradas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of moradas.
     */
    distinct?: MoradaScalarFieldEnum | MoradaScalarFieldEnum[]
  }

  /**
   * morada findMany
   */
  export type moradaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * Filter, which moradas to fetch.
     */
    where?: moradaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of moradas to fetch.
     */
    orderBy?: moradaOrderByWithRelationInput | moradaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing moradas.
     */
    cursor?: moradaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` moradas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` moradas.
     */
    skip?: number
    distinct?: MoradaScalarFieldEnum | MoradaScalarFieldEnum[]
  }

  /**
   * morada create
   */
  export type moradaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * The data needed to create a morada.
     */
    data: XOR<moradaCreateInput, moradaUncheckedCreateInput>
  }

  /**
   * morada createMany
   */
  export type moradaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many moradas.
     */
    data: moradaCreateManyInput | moradaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * morada createManyAndReturn
   */
  export type moradaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * The data used to create many moradas.
     */
    data: moradaCreateManyInput | moradaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * morada update
   */
  export type moradaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * The data needed to update a morada.
     */
    data: XOR<moradaUpdateInput, moradaUncheckedUpdateInput>
    /**
     * Choose, which morada to update.
     */
    where: moradaWhereUniqueInput
  }

  /**
   * morada updateMany
   */
  export type moradaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update moradas.
     */
    data: XOR<moradaUpdateManyMutationInput, moradaUncheckedUpdateManyInput>
    /**
     * Filter which moradas to update
     */
    where?: moradaWhereInput
    /**
     * Limit how many moradas to update.
     */
    limit?: number
  }

  /**
   * morada updateManyAndReturn
   */
  export type moradaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * The data used to update moradas.
     */
    data: XOR<moradaUpdateManyMutationInput, moradaUncheckedUpdateManyInput>
    /**
     * Filter which moradas to update
     */
    where?: moradaWhereInput
    /**
     * Limit how many moradas to update.
     */
    limit?: number
  }

  /**
   * morada upsert
   */
  export type moradaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * The filter to search for the morada to update in case it exists.
     */
    where: moradaWhereUniqueInput
    /**
     * In case the morada found by the `where` argument doesn't exist, create a new morada with this data.
     */
    create: XOR<moradaCreateInput, moradaUncheckedCreateInput>
    /**
     * In case the morada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<moradaUpdateInput, moradaUncheckedUpdateInput>
  }

  /**
   * morada delete
   */
  export type moradaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    /**
     * Filter which morada to delete.
     */
    where: moradaWhereUniqueInput
  }

  /**
   * morada deleteMany
   */
  export type moradaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which moradas to delete
     */
    where?: moradaWhereInput
    /**
     * Limit how many moradas to delete.
     */
    limit?: number
  }

  /**
   * morada.pagina_freguesia
   */
  export type morada$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
    orderBy?: pagina_freguesiaOrderByWithRelationInput | pagina_freguesiaOrderByWithRelationInput[]
    cursor?: pagina_freguesiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pagina_freguesiaScalarFieldEnum | Pagina_freguesiaScalarFieldEnum[]
  }

  /**
   * morada.pedido_pagina
   */
  export type morada$pedido_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    where?: pedido_paginaWhereInput
    orderBy?: pedido_paginaOrderByWithRelationInput | pedido_paginaOrderByWithRelationInput[]
    cursor?: pedido_paginaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pedido_paginaScalarFieldEnum | Pedido_paginaScalarFieldEnum[]
  }

  /**
   * morada.utilizador
   */
  export type morada$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
    orderBy?: utilizadorOrderByWithRelationInput | utilizadorOrderByWithRelationInput[]
    cursor?: utilizadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UtilizadorScalarFieldEnum | UtilizadorScalarFieldEnum[]
  }

  /**
   * morada without action
   */
  export type moradaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
  }


  /**
   * Model pagina_freguesia
   */

  export type AggregatePagina_freguesia = {
    _count: Pagina_freguesiaCountAggregateOutputType | null
    _avg: Pagina_freguesiaAvgAggregateOutputType | null
    _sum: Pagina_freguesiaSumAggregateOutputType | null
    _min: Pagina_freguesiaMinAggregateOutputType | null
    _max: Pagina_freguesiaMaxAggregateOutputType | null
  }

  export type Pagina_freguesiaAvgAggregateOutputType = {
    id_pagina: number | null
    id_morada: number | null
    id_utilizador: number | null
  }

  export type Pagina_freguesiaSumAggregateOutputType = {
    id_pagina: number | null
    id_morada: number | null
    id_utilizador: number | null
  }

  export type Pagina_freguesiaMinAggregateOutputType = {
    id_pagina: number | null
    id_morada: number | null
    id_utilizador: number | null
    nome_pagina: string | null
    descricao: string | null
    foto_perfil: string | null
    foto_capa: string | null
  }

  export type Pagina_freguesiaMaxAggregateOutputType = {
    id_pagina: number | null
    id_morada: number | null
    id_utilizador: number | null
    nome_pagina: string | null
    descricao: string | null
    foto_perfil: string | null
    foto_capa: string | null
  }

  export type Pagina_freguesiaCountAggregateOutputType = {
    id_pagina: number
    id_morada: number
    id_utilizador: number
    nome_pagina: number
    descricao: number
    foto_perfil: number
    foto_capa: number
    _all: number
  }


  export type Pagina_freguesiaAvgAggregateInputType = {
    id_pagina?: true
    id_morada?: true
    id_utilizador?: true
  }

  export type Pagina_freguesiaSumAggregateInputType = {
    id_pagina?: true
    id_morada?: true
    id_utilizador?: true
  }

  export type Pagina_freguesiaMinAggregateInputType = {
    id_pagina?: true
    id_morada?: true
    id_utilizador?: true
    nome_pagina?: true
    descricao?: true
    foto_perfil?: true
    foto_capa?: true
  }

  export type Pagina_freguesiaMaxAggregateInputType = {
    id_pagina?: true
    id_morada?: true
    id_utilizador?: true
    nome_pagina?: true
    descricao?: true
    foto_perfil?: true
    foto_capa?: true
  }

  export type Pagina_freguesiaCountAggregateInputType = {
    id_pagina?: true
    id_morada?: true
    id_utilizador?: true
    nome_pagina?: true
    descricao?: true
    foto_perfil?: true
    foto_capa?: true
    _all?: true
  }

  export type Pagina_freguesiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagina_freguesia to aggregate.
     */
    where?: pagina_freguesiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagina_freguesias to fetch.
     */
    orderBy?: pagina_freguesiaOrderByWithRelationInput | pagina_freguesiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pagina_freguesiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagina_freguesias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagina_freguesias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pagina_freguesias
    **/
    _count?: true | Pagina_freguesiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pagina_freguesiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pagina_freguesiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pagina_freguesiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pagina_freguesiaMaxAggregateInputType
  }

  export type GetPagina_freguesiaAggregateType<T extends Pagina_freguesiaAggregateArgs> = {
        [P in keyof T & keyof AggregatePagina_freguesia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagina_freguesia[P]>
      : GetScalarType<T[P], AggregatePagina_freguesia[P]>
  }




  export type pagina_freguesiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagina_freguesiaWhereInput
    orderBy?: pagina_freguesiaOrderByWithAggregationInput | pagina_freguesiaOrderByWithAggregationInput[]
    by: Pagina_freguesiaScalarFieldEnum[] | Pagina_freguesiaScalarFieldEnum
    having?: pagina_freguesiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pagina_freguesiaCountAggregateInputType | true
    _avg?: Pagina_freguesiaAvgAggregateInputType
    _sum?: Pagina_freguesiaSumAggregateInputType
    _min?: Pagina_freguesiaMinAggregateInputType
    _max?: Pagina_freguesiaMaxAggregateInputType
  }

  export type Pagina_freguesiaGroupByOutputType = {
    id_pagina: number
    id_morada: number
    id_utilizador: number | null
    nome_pagina: string
    descricao: string | null
    foto_perfil: string | null
    foto_capa: string | null
    _count: Pagina_freguesiaCountAggregateOutputType | null
    _avg: Pagina_freguesiaAvgAggregateOutputType | null
    _sum: Pagina_freguesiaSumAggregateOutputType | null
    _min: Pagina_freguesiaMinAggregateOutputType | null
    _max: Pagina_freguesiaMaxAggregateOutputType | null
  }

  type GetPagina_freguesiaGroupByPayload<T extends pagina_freguesiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pagina_freguesiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pagina_freguesiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pagina_freguesiaGroupByOutputType[P]>
            : GetScalarType<T[P], Pagina_freguesiaGroupByOutputType[P]>
        }
      >
    >


  export type pagina_freguesiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pagina?: boolean
    id_morada?: boolean
    id_utilizador?: boolean
    nome_pagina?: boolean
    descricao?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    moderador_pagina?: boolean | pagina_freguesia$moderador_paginaArgs<ExtArgs>
    notificacao?: boolean | pagina_freguesia$notificacaoArgs<ExtArgs>
    morada?: boolean | pagina_freguesia$moradaArgs<ExtArgs>
    utilizador?: boolean | pagina_freguesia$utilizadorArgs<ExtArgs>
    post?: boolean | pagina_freguesia$postArgs<ExtArgs>
    seguidores_pagina?: boolean | pagina_freguesia$seguidores_paginaArgs<ExtArgs>
    ticket?: boolean | pagina_freguesia$ticketArgs<ExtArgs>
    _count?: boolean | Pagina_freguesiaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagina_freguesia"]>

  export type pagina_freguesiaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pagina?: boolean
    id_morada?: boolean
    id_utilizador?: boolean
    nome_pagina?: boolean
    descricao?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    morada?: boolean | pagina_freguesia$moradaArgs<ExtArgs>
    utilizador?: boolean | pagina_freguesia$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["pagina_freguesia"]>

  export type pagina_freguesiaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pagina?: boolean
    id_morada?: boolean
    id_utilizador?: boolean
    nome_pagina?: boolean
    descricao?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    morada?: boolean | pagina_freguesia$moradaArgs<ExtArgs>
    utilizador?: boolean | pagina_freguesia$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["pagina_freguesia"]>

  export type pagina_freguesiaSelectScalar = {
    id_pagina?: boolean
    id_morada?: boolean
    id_utilizador?: boolean
    nome_pagina?: boolean
    descricao?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
  }

  export type pagina_freguesiaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pagina" | "id_morada" | "id_utilizador" | "nome_pagina" | "descricao" | "foto_perfil" | "foto_capa", ExtArgs["result"]["pagina_freguesia"]>
  export type pagina_freguesiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moderador_pagina?: boolean | pagina_freguesia$moderador_paginaArgs<ExtArgs>
    notificacao?: boolean | pagina_freguesia$notificacaoArgs<ExtArgs>
    morada?: boolean | pagina_freguesia$moradaArgs<ExtArgs>
    utilizador?: boolean | pagina_freguesia$utilizadorArgs<ExtArgs>
    post?: boolean | pagina_freguesia$postArgs<ExtArgs>
    seguidores_pagina?: boolean | pagina_freguesia$seguidores_paginaArgs<ExtArgs>
    ticket?: boolean | pagina_freguesia$ticketArgs<ExtArgs>
    _count?: boolean | Pagina_freguesiaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pagina_freguesiaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | pagina_freguesia$moradaArgs<ExtArgs>
    utilizador?: boolean | pagina_freguesia$utilizadorArgs<ExtArgs>
  }
  export type pagina_freguesiaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | pagina_freguesia$moradaArgs<ExtArgs>
    utilizador?: boolean | pagina_freguesia$utilizadorArgs<ExtArgs>
  }

  export type $pagina_freguesiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pagina_freguesia"
    objects: {
      moderador_pagina: Prisma.$moderador_paginaPayload<ExtArgs>[]
      notificacao: Prisma.$notificacaoPayload<ExtArgs>[]
      morada: Prisma.$moradaPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
      post: Prisma.$postPayload<ExtArgs>[]
      seguidores_pagina: Prisma.$seguidores_paginaPayload<ExtArgs>[]
      ticket: Prisma.$ticketPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pagina: number
      id_morada: number
      id_utilizador: number | null
      nome_pagina: string
      descricao: string | null
      foto_perfil: string | null
      foto_capa: string | null
    }, ExtArgs["result"]["pagina_freguesia"]>
    composites: {}
  }

  type pagina_freguesiaGetPayload<S extends boolean | null | undefined | pagina_freguesiaDefaultArgs> = $Result.GetResult<Prisma.$pagina_freguesiaPayload, S>

  type pagina_freguesiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pagina_freguesiaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pagina_freguesiaCountAggregateInputType | true
    }

  export interface pagina_freguesiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pagina_freguesia'], meta: { name: 'pagina_freguesia' } }
    /**
     * Find zero or one Pagina_freguesia that matches the filter.
     * @param {pagina_freguesiaFindUniqueArgs} args - Arguments to find a Pagina_freguesia
     * @example
     * // Get one Pagina_freguesia
     * const pagina_freguesia = await prisma.pagina_freguesia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pagina_freguesiaFindUniqueArgs>(args: SelectSubset<T, pagina_freguesiaFindUniqueArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pagina_freguesia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pagina_freguesiaFindUniqueOrThrowArgs} args - Arguments to find a Pagina_freguesia
     * @example
     * // Get one Pagina_freguesia
     * const pagina_freguesia = await prisma.pagina_freguesia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pagina_freguesiaFindUniqueOrThrowArgs>(args: SelectSubset<T, pagina_freguesiaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagina_freguesia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagina_freguesiaFindFirstArgs} args - Arguments to find a Pagina_freguesia
     * @example
     * // Get one Pagina_freguesia
     * const pagina_freguesia = await prisma.pagina_freguesia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pagina_freguesiaFindFirstArgs>(args?: SelectSubset<T, pagina_freguesiaFindFirstArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagina_freguesia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagina_freguesiaFindFirstOrThrowArgs} args - Arguments to find a Pagina_freguesia
     * @example
     * // Get one Pagina_freguesia
     * const pagina_freguesia = await prisma.pagina_freguesia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pagina_freguesiaFindFirstOrThrowArgs>(args?: SelectSubset<T, pagina_freguesiaFindFirstOrThrowArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagina_freguesias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagina_freguesiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagina_freguesias
     * const pagina_freguesias = await prisma.pagina_freguesia.findMany()
     * 
     * // Get first 10 Pagina_freguesias
     * const pagina_freguesias = await prisma.pagina_freguesia.findMany({ take: 10 })
     * 
     * // Only select the `id_pagina`
     * const pagina_freguesiaWithId_paginaOnly = await prisma.pagina_freguesia.findMany({ select: { id_pagina: true } })
     * 
     */
    findMany<T extends pagina_freguesiaFindManyArgs>(args?: SelectSubset<T, pagina_freguesiaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pagina_freguesia.
     * @param {pagina_freguesiaCreateArgs} args - Arguments to create a Pagina_freguesia.
     * @example
     * // Create one Pagina_freguesia
     * const Pagina_freguesia = await prisma.pagina_freguesia.create({
     *   data: {
     *     // ... data to create a Pagina_freguesia
     *   }
     * })
     * 
     */
    create<T extends pagina_freguesiaCreateArgs>(args: SelectSubset<T, pagina_freguesiaCreateArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagina_freguesias.
     * @param {pagina_freguesiaCreateManyArgs} args - Arguments to create many Pagina_freguesias.
     * @example
     * // Create many Pagina_freguesias
     * const pagina_freguesia = await prisma.pagina_freguesia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pagina_freguesiaCreateManyArgs>(args?: SelectSubset<T, pagina_freguesiaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagina_freguesias and returns the data saved in the database.
     * @param {pagina_freguesiaCreateManyAndReturnArgs} args - Arguments to create many Pagina_freguesias.
     * @example
     * // Create many Pagina_freguesias
     * const pagina_freguesia = await prisma.pagina_freguesia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagina_freguesias and only return the `id_pagina`
     * const pagina_freguesiaWithId_paginaOnly = await prisma.pagina_freguesia.createManyAndReturn({
     *   select: { id_pagina: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pagina_freguesiaCreateManyAndReturnArgs>(args?: SelectSubset<T, pagina_freguesiaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pagina_freguesia.
     * @param {pagina_freguesiaDeleteArgs} args - Arguments to delete one Pagina_freguesia.
     * @example
     * // Delete one Pagina_freguesia
     * const Pagina_freguesia = await prisma.pagina_freguesia.delete({
     *   where: {
     *     // ... filter to delete one Pagina_freguesia
     *   }
     * })
     * 
     */
    delete<T extends pagina_freguesiaDeleteArgs>(args: SelectSubset<T, pagina_freguesiaDeleteArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pagina_freguesia.
     * @param {pagina_freguesiaUpdateArgs} args - Arguments to update one Pagina_freguesia.
     * @example
     * // Update one Pagina_freguesia
     * const pagina_freguesia = await prisma.pagina_freguesia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pagina_freguesiaUpdateArgs>(args: SelectSubset<T, pagina_freguesiaUpdateArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagina_freguesias.
     * @param {pagina_freguesiaDeleteManyArgs} args - Arguments to filter Pagina_freguesias to delete.
     * @example
     * // Delete a few Pagina_freguesias
     * const { count } = await prisma.pagina_freguesia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pagina_freguesiaDeleteManyArgs>(args?: SelectSubset<T, pagina_freguesiaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagina_freguesias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagina_freguesiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagina_freguesias
     * const pagina_freguesia = await prisma.pagina_freguesia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pagina_freguesiaUpdateManyArgs>(args: SelectSubset<T, pagina_freguesiaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagina_freguesias and returns the data updated in the database.
     * @param {pagina_freguesiaUpdateManyAndReturnArgs} args - Arguments to update many Pagina_freguesias.
     * @example
     * // Update many Pagina_freguesias
     * const pagina_freguesia = await prisma.pagina_freguesia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pagina_freguesias and only return the `id_pagina`
     * const pagina_freguesiaWithId_paginaOnly = await prisma.pagina_freguesia.updateManyAndReturn({
     *   select: { id_pagina: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pagina_freguesiaUpdateManyAndReturnArgs>(args: SelectSubset<T, pagina_freguesiaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pagina_freguesia.
     * @param {pagina_freguesiaUpsertArgs} args - Arguments to update or create a Pagina_freguesia.
     * @example
     * // Update or create a Pagina_freguesia
     * const pagina_freguesia = await prisma.pagina_freguesia.upsert({
     *   create: {
     *     // ... data to create a Pagina_freguesia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagina_freguesia we want to update
     *   }
     * })
     */
    upsert<T extends pagina_freguesiaUpsertArgs>(args: SelectSubset<T, pagina_freguesiaUpsertArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagina_freguesias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagina_freguesiaCountArgs} args - Arguments to filter Pagina_freguesias to count.
     * @example
     * // Count the number of Pagina_freguesias
     * const count = await prisma.pagina_freguesia.count({
     *   where: {
     *     // ... the filter for the Pagina_freguesias we want to count
     *   }
     * })
    **/
    count<T extends pagina_freguesiaCountArgs>(
      args?: Subset<T, pagina_freguesiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pagina_freguesiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagina_freguesia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pagina_freguesiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pagina_freguesiaAggregateArgs>(args: Subset<T, Pagina_freguesiaAggregateArgs>): Prisma.PrismaPromise<GetPagina_freguesiaAggregateType<T>>

    /**
     * Group by Pagina_freguesia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagina_freguesiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pagina_freguesiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pagina_freguesiaGroupByArgs['orderBy'] }
        : { orderBy?: pagina_freguesiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pagina_freguesiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagina_freguesiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pagina_freguesia model
   */
  readonly fields: pagina_freguesiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pagina_freguesia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pagina_freguesiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    moderador_pagina<T extends pagina_freguesia$moderador_paginaArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$moderador_paginaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificacao<T extends pagina_freguesia$notificacaoArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$notificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    morada<T extends pagina_freguesia$moradaArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$moradaArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends pagina_freguesia$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    post<T extends pagina_freguesia$postArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    seguidores_pagina<T extends pagina_freguesia$seguidores_paginaArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$seguidores_paginaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticket<T extends pagina_freguesia$ticketArgs<ExtArgs> = {}>(args?: Subset<T, pagina_freguesia$ticketArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pagina_freguesia model
   */
  interface pagina_freguesiaFieldRefs {
    readonly id_pagina: FieldRef<"pagina_freguesia", 'Int'>
    readonly id_morada: FieldRef<"pagina_freguesia", 'Int'>
    readonly id_utilizador: FieldRef<"pagina_freguesia", 'Int'>
    readonly nome_pagina: FieldRef<"pagina_freguesia", 'String'>
    readonly descricao: FieldRef<"pagina_freguesia", 'String'>
    readonly foto_perfil: FieldRef<"pagina_freguesia", 'String'>
    readonly foto_capa: FieldRef<"pagina_freguesia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pagina_freguesia findUnique
   */
  export type pagina_freguesiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * Filter, which pagina_freguesia to fetch.
     */
    where: pagina_freguesiaWhereUniqueInput
  }

  /**
   * pagina_freguesia findUniqueOrThrow
   */
  export type pagina_freguesiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * Filter, which pagina_freguesia to fetch.
     */
    where: pagina_freguesiaWhereUniqueInput
  }

  /**
   * pagina_freguesia findFirst
   */
  export type pagina_freguesiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * Filter, which pagina_freguesia to fetch.
     */
    where?: pagina_freguesiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagina_freguesias to fetch.
     */
    orderBy?: pagina_freguesiaOrderByWithRelationInput | pagina_freguesiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagina_freguesias.
     */
    cursor?: pagina_freguesiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagina_freguesias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagina_freguesias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagina_freguesias.
     */
    distinct?: Pagina_freguesiaScalarFieldEnum | Pagina_freguesiaScalarFieldEnum[]
  }

  /**
   * pagina_freguesia findFirstOrThrow
   */
  export type pagina_freguesiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * Filter, which pagina_freguesia to fetch.
     */
    where?: pagina_freguesiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagina_freguesias to fetch.
     */
    orderBy?: pagina_freguesiaOrderByWithRelationInput | pagina_freguesiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagina_freguesias.
     */
    cursor?: pagina_freguesiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagina_freguesias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagina_freguesias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagina_freguesias.
     */
    distinct?: Pagina_freguesiaScalarFieldEnum | Pagina_freguesiaScalarFieldEnum[]
  }

  /**
   * pagina_freguesia findMany
   */
  export type pagina_freguesiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * Filter, which pagina_freguesias to fetch.
     */
    where?: pagina_freguesiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagina_freguesias to fetch.
     */
    orderBy?: pagina_freguesiaOrderByWithRelationInput | pagina_freguesiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pagina_freguesias.
     */
    cursor?: pagina_freguesiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagina_freguesias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagina_freguesias.
     */
    skip?: number
    distinct?: Pagina_freguesiaScalarFieldEnum | Pagina_freguesiaScalarFieldEnum[]
  }

  /**
   * pagina_freguesia create
   */
  export type pagina_freguesiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * The data needed to create a pagina_freguesia.
     */
    data: XOR<pagina_freguesiaCreateInput, pagina_freguesiaUncheckedCreateInput>
  }

  /**
   * pagina_freguesia createMany
   */
  export type pagina_freguesiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pagina_freguesias.
     */
    data: pagina_freguesiaCreateManyInput | pagina_freguesiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pagina_freguesia createManyAndReturn
   */
  export type pagina_freguesiaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * The data used to create many pagina_freguesias.
     */
    data: pagina_freguesiaCreateManyInput | pagina_freguesiaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pagina_freguesia update
   */
  export type pagina_freguesiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * The data needed to update a pagina_freguesia.
     */
    data: XOR<pagina_freguesiaUpdateInput, pagina_freguesiaUncheckedUpdateInput>
    /**
     * Choose, which pagina_freguesia to update.
     */
    where: pagina_freguesiaWhereUniqueInput
  }

  /**
   * pagina_freguesia updateMany
   */
  export type pagina_freguesiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pagina_freguesias.
     */
    data: XOR<pagina_freguesiaUpdateManyMutationInput, pagina_freguesiaUncheckedUpdateManyInput>
    /**
     * Filter which pagina_freguesias to update
     */
    where?: pagina_freguesiaWhereInput
    /**
     * Limit how many pagina_freguesias to update.
     */
    limit?: number
  }

  /**
   * pagina_freguesia updateManyAndReturn
   */
  export type pagina_freguesiaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * The data used to update pagina_freguesias.
     */
    data: XOR<pagina_freguesiaUpdateManyMutationInput, pagina_freguesiaUncheckedUpdateManyInput>
    /**
     * Filter which pagina_freguesias to update
     */
    where?: pagina_freguesiaWhereInput
    /**
     * Limit how many pagina_freguesias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pagina_freguesia upsert
   */
  export type pagina_freguesiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * The filter to search for the pagina_freguesia to update in case it exists.
     */
    where: pagina_freguesiaWhereUniqueInput
    /**
     * In case the pagina_freguesia found by the `where` argument doesn't exist, create a new pagina_freguesia with this data.
     */
    create: XOR<pagina_freguesiaCreateInput, pagina_freguesiaUncheckedCreateInput>
    /**
     * In case the pagina_freguesia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pagina_freguesiaUpdateInput, pagina_freguesiaUncheckedUpdateInput>
  }

  /**
   * pagina_freguesia delete
   */
  export type pagina_freguesiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    /**
     * Filter which pagina_freguesia to delete.
     */
    where: pagina_freguesiaWhereUniqueInput
  }

  /**
   * pagina_freguesia deleteMany
   */
  export type pagina_freguesiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagina_freguesias to delete
     */
    where?: pagina_freguesiaWhereInput
    /**
     * Limit how many pagina_freguesias to delete.
     */
    limit?: number
  }

  /**
   * pagina_freguesia.moderador_pagina
   */
  export type pagina_freguesia$moderador_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    where?: moderador_paginaWhereInput
    orderBy?: moderador_paginaOrderByWithRelationInput | moderador_paginaOrderByWithRelationInput[]
    cursor?: moderador_paginaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Moderador_paginaScalarFieldEnum | Moderador_paginaScalarFieldEnum[]
  }

  /**
   * pagina_freguesia.notificacao
   */
  export type pagina_freguesia$notificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    where?: notificacaoWhereInput
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    cursor?: notificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * pagina_freguesia.morada
   */
  export type pagina_freguesia$moradaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    where?: moradaWhereInput
  }

  /**
   * pagina_freguesia.utilizador
   */
  export type pagina_freguesia$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * pagina_freguesia.post
   */
  export type pagina_freguesia$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    cursor?: postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * pagina_freguesia.seguidores_pagina
   */
  export type pagina_freguesia$seguidores_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    where?: seguidores_paginaWhereInput
    orderBy?: seguidores_paginaOrderByWithRelationInput | seguidores_paginaOrderByWithRelationInput[]
    cursor?: seguidores_paginaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Seguidores_paginaScalarFieldEnum | Seguidores_paginaScalarFieldEnum[]
  }

  /**
   * pagina_freguesia.ticket
   */
  export type pagina_freguesia$ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    where?: ticketWhereInput
    orderBy?: ticketOrderByWithRelationInput | ticketOrderByWithRelationInput[]
    cursor?: ticketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * pagina_freguesia without action
   */
  export type pagina_freguesiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
  }


  /**
   * Model pedido_pagina
   */

  export type AggregatePedido_pagina = {
    _count: Pedido_paginaCountAggregateOutputType | null
    _avg: Pedido_paginaAvgAggregateOutputType | null
    _sum: Pedido_paginaSumAggregateOutputType | null
    _min: Pedido_paginaMinAggregateOutputType | null
    _max: Pedido_paginaMaxAggregateOutputType | null
  }

  export type Pedido_paginaAvgAggregateOutputType = {
    id_pedido: number | null
    id_utilizador: number | null
    id_morada: number | null
  }

  export type Pedido_paginaSumAggregateOutputType = {
    id_pedido: number | null
    id_utilizador: number | null
    id_morada: number | null
  }

  export type Pedido_paginaMinAggregateOutputType = {
    id_pedido: number | null
    id_utilizador: number | null
    id_morada: number | null
    dados_comprovacao: string | null
    estado_pedido: $Enums.estado_pedido | null
    data_pedido: Date | null
  }

  export type Pedido_paginaMaxAggregateOutputType = {
    id_pedido: number | null
    id_utilizador: number | null
    id_morada: number | null
    dados_comprovacao: string | null
    estado_pedido: $Enums.estado_pedido | null
    data_pedido: Date | null
  }

  export type Pedido_paginaCountAggregateOutputType = {
    id_pedido: number
    id_utilizador: number
    id_morada: number
    dados_comprovacao: number
    estado_pedido: number
    data_pedido: number
    _all: number
  }


  export type Pedido_paginaAvgAggregateInputType = {
    id_pedido?: true
    id_utilizador?: true
    id_morada?: true
  }

  export type Pedido_paginaSumAggregateInputType = {
    id_pedido?: true
    id_utilizador?: true
    id_morada?: true
  }

  export type Pedido_paginaMinAggregateInputType = {
    id_pedido?: true
    id_utilizador?: true
    id_morada?: true
    dados_comprovacao?: true
    estado_pedido?: true
    data_pedido?: true
  }

  export type Pedido_paginaMaxAggregateInputType = {
    id_pedido?: true
    id_utilizador?: true
    id_morada?: true
    dados_comprovacao?: true
    estado_pedido?: true
    data_pedido?: true
  }

  export type Pedido_paginaCountAggregateInputType = {
    id_pedido?: true
    id_utilizador?: true
    id_morada?: true
    dados_comprovacao?: true
    estado_pedido?: true
    data_pedido?: true
    _all?: true
  }

  export type Pedido_paginaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pedido_pagina to aggregate.
     */
    where?: pedido_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_paginas to fetch.
     */
    orderBy?: pedido_paginaOrderByWithRelationInput | pedido_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pedido_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pedido_paginas
    **/
    _count?: true | Pedido_paginaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pedido_paginaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pedido_paginaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pedido_paginaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pedido_paginaMaxAggregateInputType
  }

  export type GetPedido_paginaAggregateType<T extends Pedido_paginaAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido_pagina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido_pagina[P]>
      : GetScalarType<T[P], AggregatePedido_pagina[P]>
  }




  export type pedido_paginaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_paginaWhereInput
    orderBy?: pedido_paginaOrderByWithAggregationInput | pedido_paginaOrderByWithAggregationInput[]
    by: Pedido_paginaScalarFieldEnum[] | Pedido_paginaScalarFieldEnum
    having?: pedido_paginaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pedido_paginaCountAggregateInputType | true
    _avg?: Pedido_paginaAvgAggregateInputType
    _sum?: Pedido_paginaSumAggregateInputType
    _min?: Pedido_paginaMinAggregateInputType
    _max?: Pedido_paginaMaxAggregateInputType
  }

  export type Pedido_paginaGroupByOutputType = {
    id_pedido: number
    id_utilizador: number
    id_morada: number
    dados_comprovacao: string
    estado_pedido: $Enums.estado_pedido
    data_pedido: Date | null
    _count: Pedido_paginaCountAggregateOutputType | null
    _avg: Pedido_paginaAvgAggregateOutputType | null
    _sum: Pedido_paginaSumAggregateOutputType | null
    _min: Pedido_paginaMinAggregateOutputType | null
    _max: Pedido_paginaMaxAggregateOutputType | null
  }

  type GetPedido_paginaGroupByPayload<T extends pedido_paginaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pedido_paginaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pedido_paginaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pedido_paginaGroupByOutputType[P]>
            : GetScalarType<T[P], Pedido_paginaGroupByOutputType[P]>
        }
      >
    >


  export type pedido_paginaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_utilizador?: boolean
    id_morada?: boolean
    dados_comprovacao?: boolean
    estado_pedido?: boolean
    data_pedido?: boolean
    morada?: boolean | pedido_pagina$moradaArgs<ExtArgs>
    utilizador?: boolean | pedido_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["pedido_pagina"]>

  export type pedido_paginaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_utilizador?: boolean
    id_morada?: boolean
    dados_comprovacao?: boolean
    estado_pedido?: boolean
    data_pedido?: boolean
    morada?: boolean | pedido_pagina$moradaArgs<ExtArgs>
    utilizador?: boolean | pedido_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["pedido_pagina"]>

  export type pedido_paginaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_utilizador?: boolean
    id_morada?: boolean
    dados_comprovacao?: boolean
    estado_pedido?: boolean
    data_pedido?: boolean
    morada?: boolean | pedido_pagina$moradaArgs<ExtArgs>
    utilizador?: boolean | pedido_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["pedido_pagina"]>

  export type pedido_paginaSelectScalar = {
    id_pedido?: boolean
    id_utilizador?: boolean
    id_morada?: boolean
    dados_comprovacao?: boolean
    estado_pedido?: boolean
    data_pedido?: boolean
  }

  export type pedido_paginaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pedido" | "id_utilizador" | "id_morada" | "dados_comprovacao" | "estado_pedido" | "data_pedido", ExtArgs["result"]["pedido_pagina"]>
  export type pedido_paginaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | pedido_pagina$moradaArgs<ExtArgs>
    utilizador?: boolean | pedido_pagina$utilizadorArgs<ExtArgs>
  }
  export type pedido_paginaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | pedido_pagina$moradaArgs<ExtArgs>
    utilizador?: boolean | pedido_pagina$utilizadorArgs<ExtArgs>
  }
  export type pedido_paginaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | pedido_pagina$moradaArgs<ExtArgs>
    utilizador?: boolean | pedido_pagina$utilizadorArgs<ExtArgs>
  }

  export type $pedido_paginaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pedido_pagina"
    objects: {
      morada: Prisma.$moradaPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pedido: number
      id_utilizador: number
      id_morada: number
      dados_comprovacao: string
      estado_pedido: $Enums.estado_pedido
      data_pedido: Date | null
    }, ExtArgs["result"]["pedido_pagina"]>
    composites: {}
  }

  type pedido_paginaGetPayload<S extends boolean | null | undefined | pedido_paginaDefaultArgs> = $Result.GetResult<Prisma.$pedido_paginaPayload, S>

  type pedido_paginaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pedido_paginaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pedido_paginaCountAggregateInputType | true
    }

  export interface pedido_paginaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pedido_pagina'], meta: { name: 'pedido_pagina' } }
    /**
     * Find zero or one Pedido_pagina that matches the filter.
     * @param {pedido_paginaFindUniqueArgs} args - Arguments to find a Pedido_pagina
     * @example
     * // Get one Pedido_pagina
     * const pedido_pagina = await prisma.pedido_pagina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pedido_paginaFindUniqueArgs>(args: SelectSubset<T, pedido_paginaFindUniqueArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido_pagina that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pedido_paginaFindUniqueOrThrowArgs} args - Arguments to find a Pedido_pagina
     * @example
     * // Get one Pedido_pagina
     * const pedido_pagina = await prisma.pedido_pagina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pedido_paginaFindUniqueOrThrowArgs>(args: SelectSubset<T, pedido_paginaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido_pagina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_paginaFindFirstArgs} args - Arguments to find a Pedido_pagina
     * @example
     * // Get one Pedido_pagina
     * const pedido_pagina = await prisma.pedido_pagina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pedido_paginaFindFirstArgs>(args?: SelectSubset<T, pedido_paginaFindFirstArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido_pagina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_paginaFindFirstOrThrowArgs} args - Arguments to find a Pedido_pagina
     * @example
     * // Get one Pedido_pagina
     * const pedido_pagina = await prisma.pedido_pagina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pedido_paginaFindFirstOrThrowArgs>(args?: SelectSubset<T, pedido_paginaFindFirstOrThrowArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedido_paginas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_paginaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedido_paginas
     * const pedido_paginas = await prisma.pedido_pagina.findMany()
     * 
     * // Get first 10 Pedido_paginas
     * const pedido_paginas = await prisma.pedido_pagina.findMany({ take: 10 })
     * 
     * // Only select the `id_pedido`
     * const pedido_paginaWithId_pedidoOnly = await prisma.pedido_pagina.findMany({ select: { id_pedido: true } })
     * 
     */
    findMany<T extends pedido_paginaFindManyArgs>(args?: SelectSubset<T, pedido_paginaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido_pagina.
     * @param {pedido_paginaCreateArgs} args - Arguments to create a Pedido_pagina.
     * @example
     * // Create one Pedido_pagina
     * const Pedido_pagina = await prisma.pedido_pagina.create({
     *   data: {
     *     // ... data to create a Pedido_pagina
     *   }
     * })
     * 
     */
    create<T extends pedido_paginaCreateArgs>(args: SelectSubset<T, pedido_paginaCreateArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedido_paginas.
     * @param {pedido_paginaCreateManyArgs} args - Arguments to create many Pedido_paginas.
     * @example
     * // Create many Pedido_paginas
     * const pedido_pagina = await prisma.pedido_pagina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pedido_paginaCreateManyArgs>(args?: SelectSubset<T, pedido_paginaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedido_paginas and returns the data saved in the database.
     * @param {pedido_paginaCreateManyAndReturnArgs} args - Arguments to create many Pedido_paginas.
     * @example
     * // Create many Pedido_paginas
     * const pedido_pagina = await prisma.pedido_pagina.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedido_paginas and only return the `id_pedido`
     * const pedido_paginaWithId_pedidoOnly = await prisma.pedido_pagina.createManyAndReturn({
     *   select: { id_pedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pedido_paginaCreateManyAndReturnArgs>(args?: SelectSubset<T, pedido_paginaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pedido_pagina.
     * @param {pedido_paginaDeleteArgs} args - Arguments to delete one Pedido_pagina.
     * @example
     * // Delete one Pedido_pagina
     * const Pedido_pagina = await prisma.pedido_pagina.delete({
     *   where: {
     *     // ... filter to delete one Pedido_pagina
     *   }
     * })
     * 
     */
    delete<T extends pedido_paginaDeleteArgs>(args: SelectSubset<T, pedido_paginaDeleteArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido_pagina.
     * @param {pedido_paginaUpdateArgs} args - Arguments to update one Pedido_pagina.
     * @example
     * // Update one Pedido_pagina
     * const pedido_pagina = await prisma.pedido_pagina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pedido_paginaUpdateArgs>(args: SelectSubset<T, pedido_paginaUpdateArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedido_paginas.
     * @param {pedido_paginaDeleteManyArgs} args - Arguments to filter Pedido_paginas to delete.
     * @example
     * // Delete a few Pedido_paginas
     * const { count } = await prisma.pedido_pagina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pedido_paginaDeleteManyArgs>(args?: SelectSubset<T, pedido_paginaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedido_paginas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_paginaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedido_paginas
     * const pedido_pagina = await prisma.pedido_pagina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pedido_paginaUpdateManyArgs>(args: SelectSubset<T, pedido_paginaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedido_paginas and returns the data updated in the database.
     * @param {pedido_paginaUpdateManyAndReturnArgs} args - Arguments to update many Pedido_paginas.
     * @example
     * // Update many Pedido_paginas
     * const pedido_pagina = await prisma.pedido_pagina.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pedido_paginas and only return the `id_pedido`
     * const pedido_paginaWithId_pedidoOnly = await prisma.pedido_pagina.updateManyAndReturn({
     *   select: { id_pedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pedido_paginaUpdateManyAndReturnArgs>(args: SelectSubset<T, pedido_paginaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pedido_pagina.
     * @param {pedido_paginaUpsertArgs} args - Arguments to update or create a Pedido_pagina.
     * @example
     * // Update or create a Pedido_pagina
     * const pedido_pagina = await prisma.pedido_pagina.upsert({
     *   create: {
     *     // ... data to create a Pedido_pagina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido_pagina we want to update
     *   }
     * })
     */
    upsert<T extends pedido_paginaUpsertArgs>(args: SelectSubset<T, pedido_paginaUpsertArgs<ExtArgs>>): Prisma__pedido_paginaClient<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pedido_paginas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_paginaCountArgs} args - Arguments to filter Pedido_paginas to count.
     * @example
     * // Count the number of Pedido_paginas
     * const count = await prisma.pedido_pagina.count({
     *   where: {
     *     // ... the filter for the Pedido_paginas we want to count
     *   }
     * })
    **/
    count<T extends pedido_paginaCountArgs>(
      args?: Subset<T, pedido_paginaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pedido_paginaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido_pagina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pedido_paginaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pedido_paginaAggregateArgs>(args: Subset<T, Pedido_paginaAggregateArgs>): Prisma.PrismaPromise<GetPedido_paginaAggregateType<T>>

    /**
     * Group by Pedido_pagina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_paginaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pedido_paginaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pedido_paginaGroupByArgs['orderBy'] }
        : { orderBy?: pedido_paginaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pedido_paginaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedido_paginaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pedido_pagina model
   */
  readonly fields: pedido_paginaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pedido_pagina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pedido_paginaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    morada<T extends pedido_pagina$moradaArgs<ExtArgs> = {}>(args?: Subset<T, pedido_pagina$moradaArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends pedido_pagina$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, pedido_pagina$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pedido_pagina model
   */
  interface pedido_paginaFieldRefs {
    readonly id_pedido: FieldRef<"pedido_pagina", 'Int'>
    readonly id_utilizador: FieldRef<"pedido_pagina", 'Int'>
    readonly id_morada: FieldRef<"pedido_pagina", 'Int'>
    readonly dados_comprovacao: FieldRef<"pedido_pagina", 'String'>
    readonly estado_pedido: FieldRef<"pedido_pagina", 'estado_pedido'>
    readonly data_pedido: FieldRef<"pedido_pagina", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pedido_pagina findUnique
   */
  export type pedido_paginaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * Filter, which pedido_pagina to fetch.
     */
    where: pedido_paginaWhereUniqueInput
  }

  /**
   * pedido_pagina findUniqueOrThrow
   */
  export type pedido_paginaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * Filter, which pedido_pagina to fetch.
     */
    where: pedido_paginaWhereUniqueInput
  }

  /**
   * pedido_pagina findFirst
   */
  export type pedido_paginaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * Filter, which pedido_pagina to fetch.
     */
    where?: pedido_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_paginas to fetch.
     */
    orderBy?: pedido_paginaOrderByWithRelationInput | pedido_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pedido_paginas.
     */
    cursor?: pedido_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pedido_paginas.
     */
    distinct?: Pedido_paginaScalarFieldEnum | Pedido_paginaScalarFieldEnum[]
  }

  /**
   * pedido_pagina findFirstOrThrow
   */
  export type pedido_paginaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * Filter, which pedido_pagina to fetch.
     */
    where?: pedido_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_paginas to fetch.
     */
    orderBy?: pedido_paginaOrderByWithRelationInput | pedido_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pedido_paginas.
     */
    cursor?: pedido_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pedido_paginas.
     */
    distinct?: Pedido_paginaScalarFieldEnum | Pedido_paginaScalarFieldEnum[]
  }

  /**
   * pedido_pagina findMany
   */
  export type pedido_paginaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * Filter, which pedido_paginas to fetch.
     */
    where?: pedido_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_paginas to fetch.
     */
    orderBy?: pedido_paginaOrderByWithRelationInput | pedido_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pedido_paginas.
     */
    cursor?: pedido_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_paginas.
     */
    skip?: number
    distinct?: Pedido_paginaScalarFieldEnum | Pedido_paginaScalarFieldEnum[]
  }

  /**
   * pedido_pagina create
   */
  export type pedido_paginaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * The data needed to create a pedido_pagina.
     */
    data: XOR<pedido_paginaCreateInput, pedido_paginaUncheckedCreateInput>
  }

  /**
   * pedido_pagina createMany
   */
  export type pedido_paginaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pedido_paginas.
     */
    data: pedido_paginaCreateManyInput | pedido_paginaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pedido_pagina createManyAndReturn
   */
  export type pedido_paginaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * The data used to create many pedido_paginas.
     */
    data: pedido_paginaCreateManyInput | pedido_paginaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pedido_pagina update
   */
  export type pedido_paginaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * The data needed to update a pedido_pagina.
     */
    data: XOR<pedido_paginaUpdateInput, pedido_paginaUncheckedUpdateInput>
    /**
     * Choose, which pedido_pagina to update.
     */
    where: pedido_paginaWhereUniqueInput
  }

  /**
   * pedido_pagina updateMany
   */
  export type pedido_paginaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pedido_paginas.
     */
    data: XOR<pedido_paginaUpdateManyMutationInput, pedido_paginaUncheckedUpdateManyInput>
    /**
     * Filter which pedido_paginas to update
     */
    where?: pedido_paginaWhereInput
    /**
     * Limit how many pedido_paginas to update.
     */
    limit?: number
  }

  /**
   * pedido_pagina updateManyAndReturn
   */
  export type pedido_paginaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * The data used to update pedido_paginas.
     */
    data: XOR<pedido_paginaUpdateManyMutationInput, pedido_paginaUncheckedUpdateManyInput>
    /**
     * Filter which pedido_paginas to update
     */
    where?: pedido_paginaWhereInput
    /**
     * Limit how many pedido_paginas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pedido_pagina upsert
   */
  export type pedido_paginaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * The filter to search for the pedido_pagina to update in case it exists.
     */
    where: pedido_paginaWhereUniqueInput
    /**
     * In case the pedido_pagina found by the `where` argument doesn't exist, create a new pedido_pagina with this data.
     */
    create: XOR<pedido_paginaCreateInput, pedido_paginaUncheckedCreateInput>
    /**
     * In case the pedido_pagina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pedido_paginaUpdateInput, pedido_paginaUncheckedUpdateInput>
  }

  /**
   * pedido_pagina delete
   */
  export type pedido_paginaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    /**
     * Filter which pedido_pagina to delete.
     */
    where: pedido_paginaWhereUniqueInput
  }

  /**
   * pedido_pagina deleteMany
   */
  export type pedido_paginaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pedido_paginas to delete
     */
    where?: pedido_paginaWhereInput
    /**
     * Limit how many pedido_paginas to delete.
     */
    limit?: number
  }

  /**
   * pedido_pagina.morada
   */
  export type pedido_pagina$moradaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    where?: moradaWhereInput
  }

  /**
   * pedido_pagina.utilizador
   */
  export type pedido_pagina$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * pedido_pagina without action
   */
  export type pedido_paginaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
  }


  /**
   * Model perfil
   */

  export type AggregatePerfil = {
    _count: PerfilCountAggregateOutputType | null
    _avg: PerfilAvgAggregateOutputType | null
    _sum: PerfilSumAggregateOutputType | null
    _min: PerfilMinAggregateOutputType | null
    _max: PerfilMaxAggregateOutputType | null
  }

  export type PerfilAvgAggregateOutputType = {
    id_perfil: number | null
    id_utilizador: number | null
  }

  export type PerfilSumAggregateOutputType = {
    id_perfil: number | null
    id_utilizador: number | null
  }

  export type PerfilMinAggregateOutputType = {
    id_perfil: number | null
    id_utilizador: number | null
    foto_perfil: string | null
    foto_capa: string | null
    biografia: string | null
  }

  export type PerfilMaxAggregateOutputType = {
    id_perfil: number | null
    id_utilizador: number | null
    foto_perfil: string | null
    foto_capa: string | null
    biografia: string | null
  }

  export type PerfilCountAggregateOutputType = {
    id_perfil: number
    id_utilizador: number
    foto_perfil: number
    foto_capa: number
    biografia: number
    _all: number
  }


  export type PerfilAvgAggregateInputType = {
    id_perfil?: true
    id_utilizador?: true
  }

  export type PerfilSumAggregateInputType = {
    id_perfil?: true
    id_utilizador?: true
  }

  export type PerfilMinAggregateInputType = {
    id_perfil?: true
    id_utilizador?: true
    foto_perfil?: true
    foto_capa?: true
    biografia?: true
  }

  export type PerfilMaxAggregateInputType = {
    id_perfil?: true
    id_utilizador?: true
    foto_perfil?: true
    foto_capa?: true
    biografia?: true
  }

  export type PerfilCountAggregateInputType = {
    id_perfil?: true
    id_utilizador?: true
    foto_perfil?: true
    foto_capa?: true
    biografia?: true
    _all?: true
  }

  export type PerfilAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which perfil to aggregate.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned perfils
    **/
    _count?: true | PerfilCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PerfilAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PerfilSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PerfilMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PerfilMaxAggregateInputType
  }

  export type GetPerfilAggregateType<T extends PerfilAggregateArgs> = {
        [P in keyof T & keyof AggregatePerfil]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePerfil[P]>
      : GetScalarType<T[P], AggregatePerfil[P]>
  }




  export type perfilGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: perfilWhereInput
    orderBy?: perfilOrderByWithAggregationInput | perfilOrderByWithAggregationInput[]
    by: PerfilScalarFieldEnum[] | PerfilScalarFieldEnum
    having?: perfilScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PerfilCountAggregateInputType | true
    _avg?: PerfilAvgAggregateInputType
    _sum?: PerfilSumAggregateInputType
    _min?: PerfilMinAggregateInputType
    _max?: PerfilMaxAggregateInputType
  }

  export type PerfilGroupByOutputType = {
    id_perfil: number
    id_utilizador: number
    foto_perfil: string | null
    foto_capa: string | null
    biografia: string | null
    _count: PerfilCountAggregateOutputType | null
    _avg: PerfilAvgAggregateOutputType | null
    _sum: PerfilSumAggregateOutputType | null
    _min: PerfilMinAggregateOutputType | null
    _max: PerfilMaxAggregateOutputType | null
  }

  type GetPerfilGroupByPayload<T extends perfilGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PerfilGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PerfilGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PerfilGroupByOutputType[P]>
            : GetScalarType<T[P], PerfilGroupByOutputType[P]>
        }
      >
    >


  export type perfilSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_perfil?: boolean
    id_utilizador?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    biografia?: boolean
    utilizador?: boolean | perfil$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["perfil"]>

  export type perfilSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_perfil?: boolean
    id_utilizador?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    biografia?: boolean
    utilizador?: boolean | perfil$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["perfil"]>

  export type perfilSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_perfil?: boolean
    id_utilizador?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    biografia?: boolean
    utilizador?: boolean | perfil$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["perfil"]>

  export type perfilSelectScalar = {
    id_perfil?: boolean
    id_utilizador?: boolean
    foto_perfil?: boolean
    foto_capa?: boolean
    biografia?: boolean
  }

  export type perfilOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_perfil" | "id_utilizador" | "foto_perfil" | "foto_capa" | "biografia", ExtArgs["result"]["perfil"]>
  export type perfilInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    utilizador?: boolean | perfil$utilizadorArgs<ExtArgs>
  }
  export type perfilIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    utilizador?: boolean | perfil$utilizadorArgs<ExtArgs>
  }
  export type perfilIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    utilizador?: boolean | perfil$utilizadorArgs<ExtArgs>
  }

  export type $perfilPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "perfil"
    objects: {
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_perfil: number
      id_utilizador: number
      foto_perfil: string | null
      foto_capa: string | null
      biografia: string | null
    }, ExtArgs["result"]["perfil"]>
    composites: {}
  }

  type perfilGetPayload<S extends boolean | null | undefined | perfilDefaultArgs> = $Result.GetResult<Prisma.$perfilPayload, S>

  type perfilCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<perfilFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PerfilCountAggregateInputType | true
    }

  export interface perfilDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['perfil'], meta: { name: 'perfil' } }
    /**
     * Find zero or one Perfil that matches the filter.
     * @param {perfilFindUniqueArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends perfilFindUniqueArgs>(args: SelectSubset<T, perfilFindUniqueArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Perfil that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {perfilFindUniqueOrThrowArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends perfilFindUniqueOrThrowArgs>(args: SelectSubset<T, perfilFindUniqueOrThrowArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Perfil that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilFindFirstArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends perfilFindFirstArgs>(args?: SelectSubset<T, perfilFindFirstArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Perfil that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilFindFirstOrThrowArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends perfilFindFirstOrThrowArgs>(args?: SelectSubset<T, perfilFindFirstOrThrowArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Perfils that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Perfils
     * const perfils = await prisma.perfil.findMany()
     * 
     * // Get first 10 Perfils
     * const perfils = await prisma.perfil.findMany({ take: 10 })
     * 
     * // Only select the `id_perfil`
     * const perfilWithId_perfilOnly = await prisma.perfil.findMany({ select: { id_perfil: true } })
     * 
     */
    findMany<T extends perfilFindManyArgs>(args?: SelectSubset<T, perfilFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Perfil.
     * @param {perfilCreateArgs} args - Arguments to create a Perfil.
     * @example
     * // Create one Perfil
     * const Perfil = await prisma.perfil.create({
     *   data: {
     *     // ... data to create a Perfil
     *   }
     * })
     * 
     */
    create<T extends perfilCreateArgs>(args: SelectSubset<T, perfilCreateArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Perfils.
     * @param {perfilCreateManyArgs} args - Arguments to create many Perfils.
     * @example
     * // Create many Perfils
     * const perfil = await prisma.perfil.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends perfilCreateManyArgs>(args?: SelectSubset<T, perfilCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Perfils and returns the data saved in the database.
     * @param {perfilCreateManyAndReturnArgs} args - Arguments to create many Perfils.
     * @example
     * // Create many Perfils
     * const perfil = await prisma.perfil.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Perfils and only return the `id_perfil`
     * const perfilWithId_perfilOnly = await prisma.perfil.createManyAndReturn({
     *   select: { id_perfil: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends perfilCreateManyAndReturnArgs>(args?: SelectSubset<T, perfilCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Perfil.
     * @param {perfilDeleteArgs} args - Arguments to delete one Perfil.
     * @example
     * // Delete one Perfil
     * const Perfil = await prisma.perfil.delete({
     *   where: {
     *     // ... filter to delete one Perfil
     *   }
     * })
     * 
     */
    delete<T extends perfilDeleteArgs>(args: SelectSubset<T, perfilDeleteArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Perfil.
     * @param {perfilUpdateArgs} args - Arguments to update one Perfil.
     * @example
     * // Update one Perfil
     * const perfil = await prisma.perfil.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends perfilUpdateArgs>(args: SelectSubset<T, perfilUpdateArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Perfils.
     * @param {perfilDeleteManyArgs} args - Arguments to filter Perfils to delete.
     * @example
     * // Delete a few Perfils
     * const { count } = await prisma.perfil.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends perfilDeleteManyArgs>(args?: SelectSubset<T, perfilDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Perfils
     * const perfil = await prisma.perfil.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends perfilUpdateManyArgs>(args: SelectSubset<T, perfilUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Perfils and returns the data updated in the database.
     * @param {perfilUpdateManyAndReturnArgs} args - Arguments to update many Perfils.
     * @example
     * // Update many Perfils
     * const perfil = await prisma.perfil.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Perfils and only return the `id_perfil`
     * const perfilWithId_perfilOnly = await prisma.perfil.updateManyAndReturn({
     *   select: { id_perfil: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends perfilUpdateManyAndReturnArgs>(args: SelectSubset<T, perfilUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Perfil.
     * @param {perfilUpsertArgs} args - Arguments to update or create a Perfil.
     * @example
     * // Update or create a Perfil
     * const perfil = await prisma.perfil.upsert({
     *   create: {
     *     // ... data to create a Perfil
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Perfil we want to update
     *   }
     * })
     */
    upsert<T extends perfilUpsertArgs>(args: SelectSubset<T, perfilUpsertArgs<ExtArgs>>): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilCountArgs} args - Arguments to filter Perfils to count.
     * @example
     * // Count the number of Perfils
     * const count = await prisma.perfil.count({
     *   where: {
     *     // ... the filter for the Perfils we want to count
     *   }
     * })
    **/
    count<T extends perfilCountArgs>(
      args?: Subset<T, perfilCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PerfilCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerfilAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PerfilAggregateArgs>(args: Subset<T, PerfilAggregateArgs>): Prisma.PrismaPromise<GetPerfilAggregateType<T>>

    /**
     * Group by Perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends perfilGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: perfilGroupByArgs['orderBy'] }
        : { orderBy?: perfilGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, perfilGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPerfilGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the perfil model
   */
  readonly fields: perfilFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for perfil.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__perfilClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    utilizador<T extends perfil$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, perfil$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the perfil model
   */
  interface perfilFieldRefs {
    readonly id_perfil: FieldRef<"perfil", 'Int'>
    readonly id_utilizador: FieldRef<"perfil", 'Int'>
    readonly foto_perfil: FieldRef<"perfil", 'String'>
    readonly foto_capa: FieldRef<"perfil", 'String'>
    readonly biografia: FieldRef<"perfil", 'String'>
  }
    

  // Custom InputTypes
  /**
   * perfil findUnique
   */
  export type perfilFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where: perfilWhereUniqueInput
  }

  /**
   * perfil findUniqueOrThrow
   */
  export type perfilFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where: perfilWhereUniqueInput
  }

  /**
   * perfil findFirst
   */
  export type perfilFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for perfils.
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of perfils.
     */
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }

  /**
   * perfil findFirstOrThrow
   */
  export type perfilFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for perfils.
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of perfils.
     */
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }

  /**
   * perfil findMany
   */
  export type perfilFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * Filter, which perfils to fetch.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing perfils.
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }

  /**
   * perfil create
   */
  export type perfilCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * The data needed to create a perfil.
     */
    data: XOR<perfilCreateInput, perfilUncheckedCreateInput>
  }

  /**
   * perfil createMany
   */
  export type perfilCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many perfils.
     */
    data: perfilCreateManyInput | perfilCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * perfil createManyAndReturn
   */
  export type perfilCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * The data used to create many perfils.
     */
    data: perfilCreateManyInput | perfilCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * perfil update
   */
  export type perfilUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * The data needed to update a perfil.
     */
    data: XOR<perfilUpdateInput, perfilUncheckedUpdateInput>
    /**
     * Choose, which perfil to update.
     */
    where: perfilWhereUniqueInput
  }

  /**
   * perfil updateMany
   */
  export type perfilUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update perfils.
     */
    data: XOR<perfilUpdateManyMutationInput, perfilUncheckedUpdateManyInput>
    /**
     * Filter which perfils to update
     */
    where?: perfilWhereInput
    /**
     * Limit how many perfils to update.
     */
    limit?: number
  }

  /**
   * perfil updateManyAndReturn
   */
  export type perfilUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * The data used to update perfils.
     */
    data: XOR<perfilUpdateManyMutationInput, perfilUncheckedUpdateManyInput>
    /**
     * Filter which perfils to update
     */
    where?: perfilWhereInput
    /**
     * Limit how many perfils to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * perfil upsert
   */
  export type perfilUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * The filter to search for the perfil to update in case it exists.
     */
    where: perfilWhereUniqueInput
    /**
     * In case the perfil found by the `where` argument doesn't exist, create a new perfil with this data.
     */
    create: XOR<perfilCreateInput, perfilUncheckedCreateInput>
    /**
     * In case the perfil was found with the provided `where` argument, update it with this data.
     */
    update: XOR<perfilUpdateInput, perfilUncheckedUpdateInput>
  }

  /**
   * perfil delete
   */
  export type perfilDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    /**
     * Filter which perfil to delete.
     */
    where: perfilWhereUniqueInput
  }

  /**
   * perfil deleteMany
   */
  export type perfilDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which perfils to delete
     */
    where?: perfilWhereInput
    /**
     * Limit how many perfils to delete.
     */
    limit?: number
  }

  /**
   * perfil.utilizador
   */
  export type perfil$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * perfil without action
   */
  export type perfilDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
  }


  /**
   * Model post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    id_post: number | null
    id_utilizador: number | null
    id_pagina: number | null
    aprovacoes: number | null
  }

  export type PostSumAggregateOutputType = {
    id_post: number | null
    id_utilizador: number | null
    id_pagina: number | null
    aprovacoes: number | null
  }

  export type PostMinAggregateOutputType = {
    id_post: number | null
    id_utilizador: number | null
    id_pagina: number | null
    descricao_post: string | null
    media_post: string | null
    estado_post: $Enums.estado_post | null
    aprovacoes: number | null
  }

  export type PostMaxAggregateOutputType = {
    id_post: number | null
    id_utilizador: number | null
    id_pagina: number | null
    descricao_post: string | null
    media_post: string | null
    estado_post: $Enums.estado_post | null
    aprovacoes: number | null
  }

  export type PostCountAggregateOutputType = {
    id_post: number
    id_utilizador: number
    id_pagina: number
    descricao_post: number
    media_post: number
    estado_post: number
    aprovacoes: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    id_post?: true
    id_utilizador?: true
    id_pagina?: true
    aprovacoes?: true
  }

  export type PostSumAggregateInputType = {
    id_post?: true
    id_utilizador?: true
    id_pagina?: true
    aprovacoes?: true
  }

  export type PostMinAggregateInputType = {
    id_post?: true
    id_utilizador?: true
    id_pagina?: true
    descricao_post?: true
    media_post?: true
    estado_post?: true
    aprovacoes?: true
  }

  export type PostMaxAggregateInputType = {
    id_post?: true
    id_utilizador?: true
    id_pagina?: true
    descricao_post?: true
    media_post?: true
    estado_post?: true
    aprovacoes?: true
  }

  export type PostCountAggregateInputType = {
    id_post?: true
    id_utilizador?: true
    id_pagina?: true
    descricao_post?: true
    media_post?: true
    estado_post?: true
    aprovacoes?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post to aggregate.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type postGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postWhereInput
    orderBy?: postOrderByWithAggregationInput | postOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: postScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id_post: number
    id_utilizador: number
    id_pagina: number
    descricao_post: string | null
    media_post: string | null
    estado_post: $Enums.estado_post
    aprovacoes: number | null
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends postGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type postSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_post?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    descricao_post?: boolean
    media_post?: boolean
    estado_post?: boolean
    aprovacoes?: boolean
    comentario?: boolean | post$comentarioArgs<ExtArgs>
    notificacao?: boolean | post$notificacaoArgs<ExtArgs>
    pagina_freguesia?: boolean | post$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | post$utilizadorArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type postSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_post?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    descricao_post?: boolean
    media_post?: boolean
    estado_post?: boolean
    aprovacoes?: boolean
    pagina_freguesia?: boolean | post$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | post$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type postSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_post?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    descricao_post?: boolean
    media_post?: boolean
    estado_post?: boolean
    aprovacoes?: boolean
    pagina_freguesia?: boolean | post$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | post$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type postSelectScalar = {
    id_post?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    descricao_post?: boolean
    media_post?: boolean
    estado_post?: boolean
    aprovacoes?: boolean
  }

  export type postOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_post" | "id_utilizador" | "id_pagina" | "descricao_post" | "media_post" | "estado_post" | "aprovacoes", ExtArgs["result"]["post"]>
  export type postInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentario?: boolean | post$comentarioArgs<ExtArgs>
    notificacao?: boolean | post$notificacaoArgs<ExtArgs>
    pagina_freguesia?: boolean | post$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | post$utilizadorArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type postIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | post$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | post$utilizadorArgs<ExtArgs>
  }
  export type postIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | post$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | post$utilizadorArgs<ExtArgs>
  }

  export type $postPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post"
    objects: {
      comentario: Prisma.$comentarioPayload<ExtArgs>[]
      notificacao: Prisma.$notificacaoPayload<ExtArgs>[]
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_post: number
      id_utilizador: number
      id_pagina: number
      descricao_post: string | null
      media_post: string | null
      estado_post: $Enums.estado_post
      aprovacoes: number | null
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type postGetPayload<S extends boolean | null | undefined | postDefaultArgs> = $Result.GetResult<Prisma.$postPayload, S>

  type postCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<postFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface postDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post'], meta: { name: 'post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {postFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends postFindUniqueArgs>(args: SelectSubset<T, postFindUniqueArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {postFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends postFindUniqueOrThrowArgs>(args: SelectSubset<T, postFindUniqueOrThrowArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends postFindFirstArgs>(args?: SelectSubset<T, postFindFirstArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends postFindFirstOrThrowArgs>(args?: SelectSubset<T, postFindFirstOrThrowArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id_post`
     * const postWithId_postOnly = await prisma.post.findMany({ select: { id_post: true } })
     * 
     */
    findMany<T extends postFindManyArgs>(args?: SelectSubset<T, postFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post.
     * @param {postCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends postCreateArgs>(args: SelectSubset<T, postCreateArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {postCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends postCreateManyArgs>(args?: SelectSubset<T, postCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {postCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `id_post`
     * const postWithId_postOnly = await prisma.post.createManyAndReturn({
     *   select: { id_post: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends postCreateManyAndReturnArgs>(args?: SelectSubset<T, postCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Post.
     * @param {postDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends postDeleteArgs>(args: SelectSubset<T, postDeleteArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post.
     * @param {postUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends postUpdateArgs>(args: SelectSubset<T, postUpdateArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {postDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends postDeleteManyArgs>(args?: SelectSubset<T, postDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends postUpdateManyArgs>(args: SelectSubset<T, postUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts and returns the data updated in the database.
     * @param {postUpdateManyAndReturnArgs} args - Arguments to update many Posts.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Posts and only return the `id_post`
     * const postWithId_postOnly = await prisma.post.updateManyAndReturn({
     *   select: { id_post: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends postUpdateManyAndReturnArgs>(args: SelectSubset<T, postUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Post.
     * @param {postUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends postUpsertArgs>(args: SelectSubset<T, postUpsertArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends postCountArgs>(
      args?: Subset<T, postCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends postGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: postGroupByArgs['orderBy'] }
        : { orderBy?: postGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, postGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post model
   */
  readonly fields: postFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__postClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comentario<T extends post$comentarioArgs<ExtArgs> = {}>(args?: Subset<T, post$comentarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificacao<T extends post$notificacaoArgs<ExtArgs> = {}>(args?: Subset<T, post$notificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagina_freguesia<T extends post$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, post$pagina_freguesiaArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends post$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, post$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post model
   */
  interface postFieldRefs {
    readonly id_post: FieldRef<"post", 'Int'>
    readonly id_utilizador: FieldRef<"post", 'Int'>
    readonly id_pagina: FieldRef<"post", 'Int'>
    readonly descricao_post: FieldRef<"post", 'String'>
    readonly media_post: FieldRef<"post", 'String'>
    readonly estado_post: FieldRef<"post", 'estado_post'>
    readonly aprovacoes: FieldRef<"post", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * post findUnique
   */
  export type postFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where: postWhereUniqueInput
  }

  /**
   * post findUniqueOrThrow
   */
  export type postFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where: postWhereUniqueInput
  }

  /**
   * post findFirst
   */
  export type postFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * post findFirstOrThrow
   */
  export type postFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * post findMany
   */
  export type postFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing posts.
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * post create
   */
  export type postCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * The data needed to create a post.
     */
    data: XOR<postCreateInput, postUncheckedCreateInput>
  }

  /**
   * post createMany
   */
  export type postCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many posts.
     */
    data: postCreateManyInput | postCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post createManyAndReturn
   */
  export type postCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * The data used to create many posts.
     */
    data: postCreateManyInput | postCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * post update
   */
  export type postUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * The data needed to update a post.
     */
    data: XOR<postUpdateInput, postUncheckedUpdateInput>
    /**
     * Choose, which post to update.
     */
    where: postWhereUniqueInput
  }

  /**
   * post updateMany
   */
  export type postUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update posts.
     */
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postWhereInput
    /**
     * Limit how many posts to update.
     */
    limit?: number
  }

  /**
   * post updateManyAndReturn
   */
  export type postUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * The data used to update posts.
     */
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postWhereInput
    /**
     * Limit how many posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * post upsert
   */
  export type postUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * The filter to search for the post to update in case it exists.
     */
    where: postWhereUniqueInput
    /**
     * In case the post found by the `where` argument doesn't exist, create a new post with this data.
     */
    create: XOR<postCreateInput, postUncheckedCreateInput>
    /**
     * In case the post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<postUpdateInput, postUncheckedUpdateInput>
  }

  /**
   * post delete
   */
  export type postDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter which post to delete.
     */
    where: postWhereUniqueInput
  }

  /**
   * post deleteMany
   */
  export type postDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to delete
     */
    where?: postWhereInput
    /**
     * Limit how many posts to delete.
     */
    limit?: number
  }

  /**
   * post.comentario
   */
  export type post$comentarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    where?: comentarioWhereInput
    orderBy?: comentarioOrderByWithRelationInput | comentarioOrderByWithRelationInput[]
    cursor?: comentarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * post.notificacao
   */
  export type post$notificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    where?: notificacaoWhereInput
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    cursor?: notificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * post.pagina_freguesia
   */
  export type post$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
  }

  /**
   * post.utilizador
   */
  export type post$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * post without action
   */
  export type postDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
  }


  /**
   * Model resposta_ticket
   */

  export type AggregateResposta_ticket = {
    _count: Resposta_ticketCountAggregateOutputType | null
    _avg: Resposta_ticketAvgAggregateOutputType | null
    _sum: Resposta_ticketSumAggregateOutputType | null
    _min: Resposta_ticketMinAggregateOutputType | null
    _max: Resposta_ticketMaxAggregateOutputType | null
  }

  export type Resposta_ticketAvgAggregateOutputType = {
    id_resposta: number | null
    id_ticket: number | null
    id_utilizador: number | null
  }

  export type Resposta_ticketSumAggregateOutputType = {
    id_resposta: number | null
    id_ticket: number | null
    id_utilizador: number | null
  }

  export type Resposta_ticketMinAggregateOutputType = {
    id_resposta: number | null
    id_ticket: number | null
    id_utilizador: number | null
    data_resposta: Date | null
    conteudo_resposta: string | null
    estado_resposta: $Enums.estado_resposta | null
  }

  export type Resposta_ticketMaxAggregateOutputType = {
    id_resposta: number | null
    id_ticket: number | null
    id_utilizador: number | null
    data_resposta: Date | null
    conteudo_resposta: string | null
    estado_resposta: $Enums.estado_resposta | null
  }

  export type Resposta_ticketCountAggregateOutputType = {
    id_resposta: number
    id_ticket: number
    id_utilizador: number
    data_resposta: number
    conteudo_resposta: number
    estado_resposta: number
    _all: number
  }


  export type Resposta_ticketAvgAggregateInputType = {
    id_resposta?: true
    id_ticket?: true
    id_utilizador?: true
  }

  export type Resposta_ticketSumAggregateInputType = {
    id_resposta?: true
    id_ticket?: true
    id_utilizador?: true
  }

  export type Resposta_ticketMinAggregateInputType = {
    id_resposta?: true
    id_ticket?: true
    id_utilizador?: true
    data_resposta?: true
    conteudo_resposta?: true
    estado_resposta?: true
  }

  export type Resposta_ticketMaxAggregateInputType = {
    id_resposta?: true
    id_ticket?: true
    id_utilizador?: true
    data_resposta?: true
    conteudo_resposta?: true
    estado_resposta?: true
  }

  export type Resposta_ticketCountAggregateInputType = {
    id_resposta?: true
    id_ticket?: true
    id_utilizador?: true
    data_resposta?: true
    conteudo_resposta?: true
    estado_resposta?: true
    _all?: true
  }

  export type Resposta_ticketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which resposta_ticket to aggregate.
     */
    where?: resposta_ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of resposta_tickets to fetch.
     */
    orderBy?: resposta_ticketOrderByWithRelationInput | resposta_ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: resposta_ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` resposta_tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` resposta_tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned resposta_tickets
    **/
    _count?: true | Resposta_ticketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Resposta_ticketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Resposta_ticketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Resposta_ticketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Resposta_ticketMaxAggregateInputType
  }

  export type GetResposta_ticketAggregateType<T extends Resposta_ticketAggregateArgs> = {
        [P in keyof T & keyof AggregateResposta_ticket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResposta_ticket[P]>
      : GetScalarType<T[P], AggregateResposta_ticket[P]>
  }




  export type resposta_ticketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: resposta_ticketWhereInput
    orderBy?: resposta_ticketOrderByWithAggregationInput | resposta_ticketOrderByWithAggregationInput[]
    by: Resposta_ticketScalarFieldEnum[] | Resposta_ticketScalarFieldEnum
    having?: resposta_ticketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Resposta_ticketCountAggregateInputType | true
    _avg?: Resposta_ticketAvgAggregateInputType
    _sum?: Resposta_ticketSumAggregateInputType
    _min?: Resposta_ticketMinAggregateInputType
    _max?: Resposta_ticketMaxAggregateInputType
  }

  export type Resposta_ticketGroupByOutputType = {
    id_resposta: number
    id_ticket: number
    id_utilizador: number
    data_resposta: Date | null
    conteudo_resposta: string | null
    estado_resposta: $Enums.estado_resposta
    _count: Resposta_ticketCountAggregateOutputType | null
    _avg: Resposta_ticketAvgAggregateOutputType | null
    _sum: Resposta_ticketSumAggregateOutputType | null
    _min: Resposta_ticketMinAggregateOutputType | null
    _max: Resposta_ticketMaxAggregateOutputType | null
  }

  type GetResposta_ticketGroupByPayload<T extends resposta_ticketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Resposta_ticketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Resposta_ticketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Resposta_ticketGroupByOutputType[P]>
            : GetScalarType<T[P], Resposta_ticketGroupByOutputType[P]>
        }
      >
    >


  export type resposta_ticketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_resposta?: boolean
    id_ticket?: boolean
    id_utilizador?: boolean
    data_resposta?: boolean
    conteudo_resposta?: boolean
    estado_resposta?: boolean
    ticket?: boolean | resposta_ticket$ticketArgs<ExtArgs>
    utilizador?: boolean | resposta_ticket$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["resposta_ticket"]>

  export type resposta_ticketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_resposta?: boolean
    id_ticket?: boolean
    id_utilizador?: boolean
    data_resposta?: boolean
    conteudo_resposta?: boolean
    estado_resposta?: boolean
    ticket?: boolean | resposta_ticket$ticketArgs<ExtArgs>
    utilizador?: boolean | resposta_ticket$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["resposta_ticket"]>

  export type resposta_ticketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_resposta?: boolean
    id_ticket?: boolean
    id_utilizador?: boolean
    data_resposta?: boolean
    conteudo_resposta?: boolean
    estado_resposta?: boolean
    ticket?: boolean | resposta_ticket$ticketArgs<ExtArgs>
    utilizador?: boolean | resposta_ticket$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["resposta_ticket"]>

  export type resposta_ticketSelectScalar = {
    id_resposta?: boolean
    id_ticket?: boolean
    id_utilizador?: boolean
    data_resposta?: boolean
    conteudo_resposta?: boolean
    estado_resposta?: boolean
  }

  export type resposta_ticketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_resposta" | "id_ticket" | "id_utilizador" | "data_resposta" | "conteudo_resposta" | "estado_resposta", ExtArgs["result"]["resposta_ticket"]>
  export type resposta_ticketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | resposta_ticket$ticketArgs<ExtArgs>
    utilizador?: boolean | resposta_ticket$utilizadorArgs<ExtArgs>
  }
  export type resposta_ticketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | resposta_ticket$ticketArgs<ExtArgs>
    utilizador?: boolean | resposta_ticket$utilizadorArgs<ExtArgs>
  }
  export type resposta_ticketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | resposta_ticket$ticketArgs<ExtArgs>
    utilizador?: boolean | resposta_ticket$utilizadorArgs<ExtArgs>
  }

  export type $resposta_ticketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "resposta_ticket"
    objects: {
      ticket: Prisma.$ticketPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_resposta: number
      id_ticket: number
      id_utilizador: number
      data_resposta: Date | null
      conteudo_resposta: string | null
      estado_resposta: $Enums.estado_resposta
    }, ExtArgs["result"]["resposta_ticket"]>
    composites: {}
  }

  type resposta_ticketGetPayload<S extends boolean | null | undefined | resposta_ticketDefaultArgs> = $Result.GetResult<Prisma.$resposta_ticketPayload, S>

  type resposta_ticketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<resposta_ticketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Resposta_ticketCountAggregateInputType | true
    }

  export interface resposta_ticketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['resposta_ticket'], meta: { name: 'resposta_ticket' } }
    /**
     * Find zero or one Resposta_ticket that matches the filter.
     * @param {resposta_ticketFindUniqueArgs} args - Arguments to find a Resposta_ticket
     * @example
     * // Get one Resposta_ticket
     * const resposta_ticket = await prisma.resposta_ticket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends resposta_ticketFindUniqueArgs>(args: SelectSubset<T, resposta_ticketFindUniqueArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Resposta_ticket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {resposta_ticketFindUniqueOrThrowArgs} args - Arguments to find a Resposta_ticket
     * @example
     * // Get one Resposta_ticket
     * const resposta_ticket = await prisma.resposta_ticket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends resposta_ticketFindUniqueOrThrowArgs>(args: SelectSubset<T, resposta_ticketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Resposta_ticket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {resposta_ticketFindFirstArgs} args - Arguments to find a Resposta_ticket
     * @example
     * // Get one Resposta_ticket
     * const resposta_ticket = await prisma.resposta_ticket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends resposta_ticketFindFirstArgs>(args?: SelectSubset<T, resposta_ticketFindFirstArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Resposta_ticket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {resposta_ticketFindFirstOrThrowArgs} args - Arguments to find a Resposta_ticket
     * @example
     * // Get one Resposta_ticket
     * const resposta_ticket = await prisma.resposta_ticket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends resposta_ticketFindFirstOrThrowArgs>(args?: SelectSubset<T, resposta_ticketFindFirstOrThrowArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Resposta_tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {resposta_ticketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Resposta_tickets
     * const resposta_tickets = await prisma.resposta_ticket.findMany()
     * 
     * // Get first 10 Resposta_tickets
     * const resposta_tickets = await prisma.resposta_ticket.findMany({ take: 10 })
     * 
     * // Only select the `id_resposta`
     * const resposta_ticketWithId_respostaOnly = await prisma.resposta_ticket.findMany({ select: { id_resposta: true } })
     * 
     */
    findMany<T extends resposta_ticketFindManyArgs>(args?: SelectSubset<T, resposta_ticketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Resposta_ticket.
     * @param {resposta_ticketCreateArgs} args - Arguments to create a Resposta_ticket.
     * @example
     * // Create one Resposta_ticket
     * const Resposta_ticket = await prisma.resposta_ticket.create({
     *   data: {
     *     // ... data to create a Resposta_ticket
     *   }
     * })
     * 
     */
    create<T extends resposta_ticketCreateArgs>(args: SelectSubset<T, resposta_ticketCreateArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Resposta_tickets.
     * @param {resposta_ticketCreateManyArgs} args - Arguments to create many Resposta_tickets.
     * @example
     * // Create many Resposta_tickets
     * const resposta_ticket = await prisma.resposta_ticket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends resposta_ticketCreateManyArgs>(args?: SelectSubset<T, resposta_ticketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Resposta_tickets and returns the data saved in the database.
     * @param {resposta_ticketCreateManyAndReturnArgs} args - Arguments to create many Resposta_tickets.
     * @example
     * // Create many Resposta_tickets
     * const resposta_ticket = await prisma.resposta_ticket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Resposta_tickets and only return the `id_resposta`
     * const resposta_ticketWithId_respostaOnly = await prisma.resposta_ticket.createManyAndReturn({
     *   select: { id_resposta: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends resposta_ticketCreateManyAndReturnArgs>(args?: SelectSubset<T, resposta_ticketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Resposta_ticket.
     * @param {resposta_ticketDeleteArgs} args - Arguments to delete one Resposta_ticket.
     * @example
     * // Delete one Resposta_ticket
     * const Resposta_ticket = await prisma.resposta_ticket.delete({
     *   where: {
     *     // ... filter to delete one Resposta_ticket
     *   }
     * })
     * 
     */
    delete<T extends resposta_ticketDeleteArgs>(args: SelectSubset<T, resposta_ticketDeleteArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Resposta_ticket.
     * @param {resposta_ticketUpdateArgs} args - Arguments to update one Resposta_ticket.
     * @example
     * // Update one Resposta_ticket
     * const resposta_ticket = await prisma.resposta_ticket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends resposta_ticketUpdateArgs>(args: SelectSubset<T, resposta_ticketUpdateArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Resposta_tickets.
     * @param {resposta_ticketDeleteManyArgs} args - Arguments to filter Resposta_tickets to delete.
     * @example
     * // Delete a few Resposta_tickets
     * const { count } = await prisma.resposta_ticket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends resposta_ticketDeleteManyArgs>(args?: SelectSubset<T, resposta_ticketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Resposta_tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {resposta_ticketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Resposta_tickets
     * const resposta_ticket = await prisma.resposta_ticket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends resposta_ticketUpdateManyArgs>(args: SelectSubset<T, resposta_ticketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Resposta_tickets and returns the data updated in the database.
     * @param {resposta_ticketUpdateManyAndReturnArgs} args - Arguments to update many Resposta_tickets.
     * @example
     * // Update many Resposta_tickets
     * const resposta_ticket = await prisma.resposta_ticket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Resposta_tickets and only return the `id_resposta`
     * const resposta_ticketWithId_respostaOnly = await prisma.resposta_ticket.updateManyAndReturn({
     *   select: { id_resposta: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends resposta_ticketUpdateManyAndReturnArgs>(args: SelectSubset<T, resposta_ticketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Resposta_ticket.
     * @param {resposta_ticketUpsertArgs} args - Arguments to update or create a Resposta_ticket.
     * @example
     * // Update or create a Resposta_ticket
     * const resposta_ticket = await prisma.resposta_ticket.upsert({
     *   create: {
     *     // ... data to create a Resposta_ticket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Resposta_ticket we want to update
     *   }
     * })
     */
    upsert<T extends resposta_ticketUpsertArgs>(args: SelectSubset<T, resposta_ticketUpsertArgs<ExtArgs>>): Prisma__resposta_ticketClient<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Resposta_tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {resposta_ticketCountArgs} args - Arguments to filter Resposta_tickets to count.
     * @example
     * // Count the number of Resposta_tickets
     * const count = await prisma.resposta_ticket.count({
     *   where: {
     *     // ... the filter for the Resposta_tickets we want to count
     *   }
     * })
    **/
    count<T extends resposta_ticketCountArgs>(
      args?: Subset<T, resposta_ticketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Resposta_ticketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Resposta_ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Resposta_ticketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Resposta_ticketAggregateArgs>(args: Subset<T, Resposta_ticketAggregateArgs>): Prisma.PrismaPromise<GetResposta_ticketAggregateType<T>>

    /**
     * Group by Resposta_ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {resposta_ticketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends resposta_ticketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: resposta_ticketGroupByArgs['orderBy'] }
        : { orderBy?: resposta_ticketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, resposta_ticketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResposta_ticketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the resposta_ticket model
   */
  readonly fields: resposta_ticketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for resposta_ticket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__resposta_ticketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends resposta_ticket$ticketArgs<ExtArgs> = {}>(args?: Subset<T, resposta_ticket$ticketArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends resposta_ticket$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, resposta_ticket$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the resposta_ticket model
   */
  interface resposta_ticketFieldRefs {
    readonly id_resposta: FieldRef<"resposta_ticket", 'Int'>
    readonly id_ticket: FieldRef<"resposta_ticket", 'Int'>
    readonly id_utilizador: FieldRef<"resposta_ticket", 'Int'>
    readonly data_resposta: FieldRef<"resposta_ticket", 'DateTime'>
    readonly conteudo_resposta: FieldRef<"resposta_ticket", 'String'>
    readonly estado_resposta: FieldRef<"resposta_ticket", 'estado_resposta'>
  }
    

  // Custom InputTypes
  /**
   * resposta_ticket findUnique
   */
  export type resposta_ticketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * Filter, which resposta_ticket to fetch.
     */
    where: resposta_ticketWhereUniqueInput
  }

  /**
   * resposta_ticket findUniqueOrThrow
   */
  export type resposta_ticketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * Filter, which resposta_ticket to fetch.
     */
    where: resposta_ticketWhereUniqueInput
  }

  /**
   * resposta_ticket findFirst
   */
  export type resposta_ticketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * Filter, which resposta_ticket to fetch.
     */
    where?: resposta_ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of resposta_tickets to fetch.
     */
    orderBy?: resposta_ticketOrderByWithRelationInput | resposta_ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for resposta_tickets.
     */
    cursor?: resposta_ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` resposta_tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` resposta_tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of resposta_tickets.
     */
    distinct?: Resposta_ticketScalarFieldEnum | Resposta_ticketScalarFieldEnum[]
  }

  /**
   * resposta_ticket findFirstOrThrow
   */
  export type resposta_ticketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * Filter, which resposta_ticket to fetch.
     */
    where?: resposta_ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of resposta_tickets to fetch.
     */
    orderBy?: resposta_ticketOrderByWithRelationInput | resposta_ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for resposta_tickets.
     */
    cursor?: resposta_ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` resposta_tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` resposta_tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of resposta_tickets.
     */
    distinct?: Resposta_ticketScalarFieldEnum | Resposta_ticketScalarFieldEnum[]
  }

  /**
   * resposta_ticket findMany
   */
  export type resposta_ticketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * Filter, which resposta_tickets to fetch.
     */
    where?: resposta_ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of resposta_tickets to fetch.
     */
    orderBy?: resposta_ticketOrderByWithRelationInput | resposta_ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing resposta_tickets.
     */
    cursor?: resposta_ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` resposta_tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` resposta_tickets.
     */
    skip?: number
    distinct?: Resposta_ticketScalarFieldEnum | Resposta_ticketScalarFieldEnum[]
  }

  /**
   * resposta_ticket create
   */
  export type resposta_ticketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * The data needed to create a resposta_ticket.
     */
    data: XOR<resposta_ticketCreateInput, resposta_ticketUncheckedCreateInput>
  }

  /**
   * resposta_ticket createMany
   */
  export type resposta_ticketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many resposta_tickets.
     */
    data: resposta_ticketCreateManyInput | resposta_ticketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * resposta_ticket createManyAndReturn
   */
  export type resposta_ticketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * The data used to create many resposta_tickets.
     */
    data: resposta_ticketCreateManyInput | resposta_ticketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * resposta_ticket update
   */
  export type resposta_ticketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * The data needed to update a resposta_ticket.
     */
    data: XOR<resposta_ticketUpdateInput, resposta_ticketUncheckedUpdateInput>
    /**
     * Choose, which resposta_ticket to update.
     */
    where: resposta_ticketWhereUniqueInput
  }

  /**
   * resposta_ticket updateMany
   */
  export type resposta_ticketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update resposta_tickets.
     */
    data: XOR<resposta_ticketUpdateManyMutationInput, resposta_ticketUncheckedUpdateManyInput>
    /**
     * Filter which resposta_tickets to update
     */
    where?: resposta_ticketWhereInput
    /**
     * Limit how many resposta_tickets to update.
     */
    limit?: number
  }

  /**
   * resposta_ticket updateManyAndReturn
   */
  export type resposta_ticketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * The data used to update resposta_tickets.
     */
    data: XOR<resposta_ticketUpdateManyMutationInput, resposta_ticketUncheckedUpdateManyInput>
    /**
     * Filter which resposta_tickets to update
     */
    where?: resposta_ticketWhereInput
    /**
     * Limit how many resposta_tickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * resposta_ticket upsert
   */
  export type resposta_ticketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * The filter to search for the resposta_ticket to update in case it exists.
     */
    where: resposta_ticketWhereUniqueInput
    /**
     * In case the resposta_ticket found by the `where` argument doesn't exist, create a new resposta_ticket with this data.
     */
    create: XOR<resposta_ticketCreateInput, resposta_ticketUncheckedCreateInput>
    /**
     * In case the resposta_ticket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<resposta_ticketUpdateInput, resposta_ticketUncheckedUpdateInput>
  }

  /**
   * resposta_ticket delete
   */
  export type resposta_ticketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    /**
     * Filter which resposta_ticket to delete.
     */
    where: resposta_ticketWhereUniqueInput
  }

  /**
   * resposta_ticket deleteMany
   */
  export type resposta_ticketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which resposta_tickets to delete
     */
    where?: resposta_ticketWhereInput
    /**
     * Limit how many resposta_tickets to delete.
     */
    limit?: number
  }

  /**
   * resposta_ticket.ticket
   */
  export type resposta_ticket$ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    where?: ticketWhereInput
  }

  /**
   * resposta_ticket.utilizador
   */
  export type resposta_ticket$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * resposta_ticket without action
   */
  export type resposta_ticketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
  }


  /**
   * Model seguidores_pagina
   */

  export type AggregateSeguidores_pagina = {
    _count: Seguidores_paginaCountAggregateOutputType | null
    _avg: Seguidores_paginaAvgAggregateOutputType | null
    _sum: Seguidores_paginaSumAggregateOutputType | null
    _min: Seguidores_paginaMinAggregateOutputType | null
    _max: Seguidores_paginaMaxAggregateOutputType | null
  }

  export type Seguidores_paginaAvgAggregateOutputType = {
    id_seguimento: number | null
    id_utilizador: number | null
    id_pagina: number | null
  }

  export type Seguidores_paginaSumAggregateOutputType = {
    id_seguimento: number | null
    id_utilizador: number | null
    id_pagina: number | null
  }

  export type Seguidores_paginaMinAggregateOutputType = {
    id_seguimento: number | null
    id_utilizador: number | null
    id_pagina: number | null
    data_seguimento: Date | null
  }

  export type Seguidores_paginaMaxAggregateOutputType = {
    id_seguimento: number | null
    id_utilizador: number | null
    id_pagina: number | null
    data_seguimento: Date | null
  }

  export type Seguidores_paginaCountAggregateOutputType = {
    id_seguimento: number
    id_utilizador: number
    id_pagina: number
    data_seguimento: number
    _all: number
  }


  export type Seguidores_paginaAvgAggregateInputType = {
    id_seguimento?: true
    id_utilizador?: true
    id_pagina?: true
  }

  export type Seguidores_paginaSumAggregateInputType = {
    id_seguimento?: true
    id_utilizador?: true
    id_pagina?: true
  }

  export type Seguidores_paginaMinAggregateInputType = {
    id_seguimento?: true
    id_utilizador?: true
    id_pagina?: true
    data_seguimento?: true
  }

  export type Seguidores_paginaMaxAggregateInputType = {
    id_seguimento?: true
    id_utilizador?: true
    id_pagina?: true
    data_seguimento?: true
  }

  export type Seguidores_paginaCountAggregateInputType = {
    id_seguimento?: true
    id_utilizador?: true
    id_pagina?: true
    data_seguimento?: true
    _all?: true
  }

  export type Seguidores_paginaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which seguidores_pagina to aggregate.
     */
    where?: seguidores_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seguidores_paginas to fetch.
     */
    orderBy?: seguidores_paginaOrderByWithRelationInput | seguidores_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: seguidores_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seguidores_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seguidores_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned seguidores_paginas
    **/
    _count?: true | Seguidores_paginaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Seguidores_paginaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Seguidores_paginaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Seguidores_paginaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Seguidores_paginaMaxAggregateInputType
  }

  export type GetSeguidores_paginaAggregateType<T extends Seguidores_paginaAggregateArgs> = {
        [P in keyof T & keyof AggregateSeguidores_pagina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeguidores_pagina[P]>
      : GetScalarType<T[P], AggregateSeguidores_pagina[P]>
  }




  export type seguidores_paginaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: seguidores_paginaWhereInput
    orderBy?: seguidores_paginaOrderByWithAggregationInput | seguidores_paginaOrderByWithAggregationInput[]
    by: Seguidores_paginaScalarFieldEnum[] | Seguidores_paginaScalarFieldEnum
    having?: seguidores_paginaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Seguidores_paginaCountAggregateInputType | true
    _avg?: Seguidores_paginaAvgAggregateInputType
    _sum?: Seguidores_paginaSumAggregateInputType
    _min?: Seguidores_paginaMinAggregateInputType
    _max?: Seguidores_paginaMaxAggregateInputType
  }

  export type Seguidores_paginaGroupByOutputType = {
    id_seguimento: number
    id_utilizador: number
    id_pagina: number
    data_seguimento: Date | null
    _count: Seguidores_paginaCountAggregateOutputType | null
    _avg: Seguidores_paginaAvgAggregateOutputType | null
    _sum: Seguidores_paginaSumAggregateOutputType | null
    _min: Seguidores_paginaMinAggregateOutputType | null
    _max: Seguidores_paginaMaxAggregateOutputType | null
  }

  type GetSeguidores_paginaGroupByPayload<T extends seguidores_paginaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Seguidores_paginaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Seguidores_paginaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Seguidores_paginaGroupByOutputType[P]>
            : GetScalarType<T[P], Seguidores_paginaGroupByOutputType[P]>
        }
      >
    >


  export type seguidores_paginaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seguimento?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_seguimento?: boolean
    pagina_freguesia?: boolean | seguidores_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | seguidores_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["seguidores_pagina"]>

  export type seguidores_paginaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seguimento?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_seguimento?: boolean
    pagina_freguesia?: boolean | seguidores_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | seguidores_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["seguidores_pagina"]>

  export type seguidores_paginaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seguimento?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_seguimento?: boolean
    pagina_freguesia?: boolean | seguidores_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | seguidores_pagina$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["seguidores_pagina"]>

  export type seguidores_paginaSelectScalar = {
    id_seguimento?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_seguimento?: boolean
  }

  export type seguidores_paginaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_seguimento" | "id_utilizador" | "id_pagina" | "data_seguimento", ExtArgs["result"]["seguidores_pagina"]>
  export type seguidores_paginaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | seguidores_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | seguidores_pagina$utilizadorArgs<ExtArgs>
  }
  export type seguidores_paginaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | seguidores_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | seguidores_pagina$utilizadorArgs<ExtArgs>
  }
  export type seguidores_paginaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | seguidores_pagina$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | seguidores_pagina$utilizadorArgs<ExtArgs>
  }

  export type $seguidores_paginaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "seguidores_pagina"
    objects: {
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_seguimento: number
      id_utilizador: number
      id_pagina: number
      data_seguimento: Date | null
    }, ExtArgs["result"]["seguidores_pagina"]>
    composites: {}
  }

  type seguidores_paginaGetPayload<S extends boolean | null | undefined | seguidores_paginaDefaultArgs> = $Result.GetResult<Prisma.$seguidores_paginaPayload, S>

  type seguidores_paginaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<seguidores_paginaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Seguidores_paginaCountAggregateInputType | true
    }

  export interface seguidores_paginaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['seguidores_pagina'], meta: { name: 'seguidores_pagina' } }
    /**
     * Find zero or one Seguidores_pagina that matches the filter.
     * @param {seguidores_paginaFindUniqueArgs} args - Arguments to find a Seguidores_pagina
     * @example
     * // Get one Seguidores_pagina
     * const seguidores_pagina = await prisma.seguidores_pagina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends seguidores_paginaFindUniqueArgs>(args: SelectSubset<T, seguidores_paginaFindUniqueArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Seguidores_pagina that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {seguidores_paginaFindUniqueOrThrowArgs} args - Arguments to find a Seguidores_pagina
     * @example
     * // Get one Seguidores_pagina
     * const seguidores_pagina = await prisma.seguidores_pagina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends seguidores_paginaFindUniqueOrThrowArgs>(args: SelectSubset<T, seguidores_paginaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seguidores_pagina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seguidores_paginaFindFirstArgs} args - Arguments to find a Seguidores_pagina
     * @example
     * // Get one Seguidores_pagina
     * const seguidores_pagina = await prisma.seguidores_pagina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends seguidores_paginaFindFirstArgs>(args?: SelectSubset<T, seguidores_paginaFindFirstArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seguidores_pagina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seguidores_paginaFindFirstOrThrowArgs} args - Arguments to find a Seguidores_pagina
     * @example
     * // Get one Seguidores_pagina
     * const seguidores_pagina = await prisma.seguidores_pagina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends seguidores_paginaFindFirstOrThrowArgs>(args?: SelectSubset<T, seguidores_paginaFindFirstOrThrowArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Seguidores_paginas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seguidores_paginaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Seguidores_paginas
     * const seguidores_paginas = await prisma.seguidores_pagina.findMany()
     * 
     * // Get first 10 Seguidores_paginas
     * const seguidores_paginas = await prisma.seguidores_pagina.findMany({ take: 10 })
     * 
     * // Only select the `id_seguimento`
     * const seguidores_paginaWithId_seguimentoOnly = await prisma.seguidores_pagina.findMany({ select: { id_seguimento: true } })
     * 
     */
    findMany<T extends seguidores_paginaFindManyArgs>(args?: SelectSubset<T, seguidores_paginaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Seguidores_pagina.
     * @param {seguidores_paginaCreateArgs} args - Arguments to create a Seguidores_pagina.
     * @example
     * // Create one Seguidores_pagina
     * const Seguidores_pagina = await prisma.seguidores_pagina.create({
     *   data: {
     *     // ... data to create a Seguidores_pagina
     *   }
     * })
     * 
     */
    create<T extends seguidores_paginaCreateArgs>(args: SelectSubset<T, seguidores_paginaCreateArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Seguidores_paginas.
     * @param {seguidores_paginaCreateManyArgs} args - Arguments to create many Seguidores_paginas.
     * @example
     * // Create many Seguidores_paginas
     * const seguidores_pagina = await prisma.seguidores_pagina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends seguidores_paginaCreateManyArgs>(args?: SelectSubset<T, seguidores_paginaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Seguidores_paginas and returns the data saved in the database.
     * @param {seguidores_paginaCreateManyAndReturnArgs} args - Arguments to create many Seguidores_paginas.
     * @example
     * // Create many Seguidores_paginas
     * const seguidores_pagina = await prisma.seguidores_pagina.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Seguidores_paginas and only return the `id_seguimento`
     * const seguidores_paginaWithId_seguimentoOnly = await prisma.seguidores_pagina.createManyAndReturn({
     *   select: { id_seguimento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends seguidores_paginaCreateManyAndReturnArgs>(args?: SelectSubset<T, seguidores_paginaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Seguidores_pagina.
     * @param {seguidores_paginaDeleteArgs} args - Arguments to delete one Seguidores_pagina.
     * @example
     * // Delete one Seguidores_pagina
     * const Seguidores_pagina = await prisma.seguidores_pagina.delete({
     *   where: {
     *     // ... filter to delete one Seguidores_pagina
     *   }
     * })
     * 
     */
    delete<T extends seguidores_paginaDeleteArgs>(args: SelectSubset<T, seguidores_paginaDeleteArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Seguidores_pagina.
     * @param {seguidores_paginaUpdateArgs} args - Arguments to update one Seguidores_pagina.
     * @example
     * // Update one Seguidores_pagina
     * const seguidores_pagina = await prisma.seguidores_pagina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends seguidores_paginaUpdateArgs>(args: SelectSubset<T, seguidores_paginaUpdateArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Seguidores_paginas.
     * @param {seguidores_paginaDeleteManyArgs} args - Arguments to filter Seguidores_paginas to delete.
     * @example
     * // Delete a few Seguidores_paginas
     * const { count } = await prisma.seguidores_pagina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends seguidores_paginaDeleteManyArgs>(args?: SelectSubset<T, seguidores_paginaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seguidores_paginas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seguidores_paginaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Seguidores_paginas
     * const seguidores_pagina = await prisma.seguidores_pagina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends seguidores_paginaUpdateManyArgs>(args: SelectSubset<T, seguidores_paginaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seguidores_paginas and returns the data updated in the database.
     * @param {seguidores_paginaUpdateManyAndReturnArgs} args - Arguments to update many Seguidores_paginas.
     * @example
     * // Update many Seguidores_paginas
     * const seguidores_pagina = await prisma.seguidores_pagina.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Seguidores_paginas and only return the `id_seguimento`
     * const seguidores_paginaWithId_seguimentoOnly = await prisma.seguidores_pagina.updateManyAndReturn({
     *   select: { id_seguimento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends seguidores_paginaUpdateManyAndReturnArgs>(args: SelectSubset<T, seguidores_paginaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Seguidores_pagina.
     * @param {seguidores_paginaUpsertArgs} args - Arguments to update or create a Seguidores_pagina.
     * @example
     * // Update or create a Seguidores_pagina
     * const seguidores_pagina = await prisma.seguidores_pagina.upsert({
     *   create: {
     *     // ... data to create a Seguidores_pagina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seguidores_pagina we want to update
     *   }
     * })
     */
    upsert<T extends seguidores_paginaUpsertArgs>(args: SelectSubset<T, seguidores_paginaUpsertArgs<ExtArgs>>): Prisma__seguidores_paginaClient<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Seguidores_paginas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seguidores_paginaCountArgs} args - Arguments to filter Seguidores_paginas to count.
     * @example
     * // Count the number of Seguidores_paginas
     * const count = await prisma.seguidores_pagina.count({
     *   where: {
     *     // ... the filter for the Seguidores_paginas we want to count
     *   }
     * })
    **/
    count<T extends seguidores_paginaCountArgs>(
      args?: Subset<T, seguidores_paginaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Seguidores_paginaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seguidores_pagina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Seguidores_paginaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Seguidores_paginaAggregateArgs>(args: Subset<T, Seguidores_paginaAggregateArgs>): Prisma.PrismaPromise<GetSeguidores_paginaAggregateType<T>>

    /**
     * Group by Seguidores_pagina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seguidores_paginaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends seguidores_paginaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: seguidores_paginaGroupByArgs['orderBy'] }
        : { orderBy?: seguidores_paginaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, seguidores_paginaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeguidores_paginaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the seguidores_pagina model
   */
  readonly fields: seguidores_paginaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for seguidores_pagina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__seguidores_paginaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pagina_freguesia<T extends seguidores_pagina$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, seguidores_pagina$pagina_freguesiaArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends seguidores_pagina$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, seguidores_pagina$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the seguidores_pagina model
   */
  interface seguidores_paginaFieldRefs {
    readonly id_seguimento: FieldRef<"seguidores_pagina", 'Int'>
    readonly id_utilizador: FieldRef<"seguidores_pagina", 'Int'>
    readonly id_pagina: FieldRef<"seguidores_pagina", 'Int'>
    readonly data_seguimento: FieldRef<"seguidores_pagina", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * seguidores_pagina findUnique
   */
  export type seguidores_paginaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * Filter, which seguidores_pagina to fetch.
     */
    where: seguidores_paginaWhereUniqueInput
  }

  /**
   * seguidores_pagina findUniqueOrThrow
   */
  export type seguidores_paginaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * Filter, which seguidores_pagina to fetch.
     */
    where: seguidores_paginaWhereUniqueInput
  }

  /**
   * seguidores_pagina findFirst
   */
  export type seguidores_paginaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * Filter, which seguidores_pagina to fetch.
     */
    where?: seguidores_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seguidores_paginas to fetch.
     */
    orderBy?: seguidores_paginaOrderByWithRelationInput | seguidores_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for seguidores_paginas.
     */
    cursor?: seguidores_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seguidores_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seguidores_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of seguidores_paginas.
     */
    distinct?: Seguidores_paginaScalarFieldEnum | Seguidores_paginaScalarFieldEnum[]
  }

  /**
   * seguidores_pagina findFirstOrThrow
   */
  export type seguidores_paginaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * Filter, which seguidores_pagina to fetch.
     */
    where?: seguidores_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seguidores_paginas to fetch.
     */
    orderBy?: seguidores_paginaOrderByWithRelationInput | seguidores_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for seguidores_paginas.
     */
    cursor?: seguidores_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seguidores_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seguidores_paginas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of seguidores_paginas.
     */
    distinct?: Seguidores_paginaScalarFieldEnum | Seguidores_paginaScalarFieldEnum[]
  }

  /**
   * seguidores_pagina findMany
   */
  export type seguidores_paginaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * Filter, which seguidores_paginas to fetch.
     */
    where?: seguidores_paginaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seguidores_paginas to fetch.
     */
    orderBy?: seguidores_paginaOrderByWithRelationInput | seguidores_paginaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing seguidores_paginas.
     */
    cursor?: seguidores_paginaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seguidores_paginas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seguidores_paginas.
     */
    skip?: number
    distinct?: Seguidores_paginaScalarFieldEnum | Seguidores_paginaScalarFieldEnum[]
  }

  /**
   * seguidores_pagina create
   */
  export type seguidores_paginaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * The data needed to create a seguidores_pagina.
     */
    data: XOR<seguidores_paginaCreateInput, seguidores_paginaUncheckedCreateInput>
  }

  /**
   * seguidores_pagina createMany
   */
  export type seguidores_paginaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many seguidores_paginas.
     */
    data: seguidores_paginaCreateManyInput | seguidores_paginaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * seguidores_pagina createManyAndReturn
   */
  export type seguidores_paginaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * The data used to create many seguidores_paginas.
     */
    data: seguidores_paginaCreateManyInput | seguidores_paginaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * seguidores_pagina update
   */
  export type seguidores_paginaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * The data needed to update a seguidores_pagina.
     */
    data: XOR<seguidores_paginaUpdateInput, seguidores_paginaUncheckedUpdateInput>
    /**
     * Choose, which seguidores_pagina to update.
     */
    where: seguidores_paginaWhereUniqueInput
  }

  /**
   * seguidores_pagina updateMany
   */
  export type seguidores_paginaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update seguidores_paginas.
     */
    data: XOR<seguidores_paginaUpdateManyMutationInput, seguidores_paginaUncheckedUpdateManyInput>
    /**
     * Filter which seguidores_paginas to update
     */
    where?: seguidores_paginaWhereInput
    /**
     * Limit how many seguidores_paginas to update.
     */
    limit?: number
  }

  /**
   * seguidores_pagina updateManyAndReturn
   */
  export type seguidores_paginaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * The data used to update seguidores_paginas.
     */
    data: XOR<seguidores_paginaUpdateManyMutationInput, seguidores_paginaUncheckedUpdateManyInput>
    /**
     * Filter which seguidores_paginas to update
     */
    where?: seguidores_paginaWhereInput
    /**
     * Limit how many seguidores_paginas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * seguidores_pagina upsert
   */
  export type seguidores_paginaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * The filter to search for the seguidores_pagina to update in case it exists.
     */
    where: seguidores_paginaWhereUniqueInput
    /**
     * In case the seguidores_pagina found by the `where` argument doesn't exist, create a new seguidores_pagina with this data.
     */
    create: XOR<seguidores_paginaCreateInput, seguidores_paginaUncheckedCreateInput>
    /**
     * In case the seguidores_pagina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<seguidores_paginaUpdateInput, seguidores_paginaUncheckedUpdateInput>
  }

  /**
   * seguidores_pagina delete
   */
  export type seguidores_paginaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    /**
     * Filter which seguidores_pagina to delete.
     */
    where: seguidores_paginaWhereUniqueInput
  }

  /**
   * seguidores_pagina deleteMany
   */
  export type seguidores_paginaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which seguidores_paginas to delete
     */
    where?: seguidores_paginaWhereInput
    /**
     * Limit how many seguidores_paginas to delete.
     */
    limit?: number
  }

  /**
   * seguidores_pagina.pagina_freguesia
   */
  export type seguidores_pagina$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
  }

  /**
   * seguidores_pagina.utilizador
   */
  export type seguidores_pagina$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * seguidores_pagina without action
   */
  export type seguidores_paginaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
  }


  /**
   * Model ticket
   */

  export type AggregateTicket = {
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  export type TicketAvgAggregateOutputType = {
    id_ticket: number | null
    id_utilizador: number | null
    id_pagina: number | null
  }

  export type TicketSumAggregateOutputType = {
    id_ticket: number | null
    id_utilizador: number | null
    id_pagina: number | null
  }

  export type TicketMinAggregateOutputType = {
    id_ticket: number | null
    id_utilizador: number | null
    id_pagina: number | null
    data_criacao: Date | null
    descricao_problema: string | null
    estado_ticket: $Enums.estado_ticket | null
  }

  export type TicketMaxAggregateOutputType = {
    id_ticket: number | null
    id_utilizador: number | null
    id_pagina: number | null
    data_criacao: Date | null
    descricao_problema: string | null
    estado_ticket: $Enums.estado_ticket | null
  }

  export type TicketCountAggregateOutputType = {
    id_ticket: number
    id_utilizador: number
    id_pagina: number
    data_criacao: number
    descricao_problema: number
    estado_ticket: number
    _all: number
  }


  export type TicketAvgAggregateInputType = {
    id_ticket?: true
    id_utilizador?: true
    id_pagina?: true
  }

  export type TicketSumAggregateInputType = {
    id_ticket?: true
    id_utilizador?: true
    id_pagina?: true
  }

  export type TicketMinAggregateInputType = {
    id_ticket?: true
    id_utilizador?: true
    id_pagina?: true
    data_criacao?: true
    descricao_problema?: true
    estado_ticket?: true
  }

  export type TicketMaxAggregateInputType = {
    id_ticket?: true
    id_utilizador?: true
    id_pagina?: true
    data_criacao?: true
    descricao_problema?: true
    estado_ticket?: true
  }

  export type TicketCountAggregateInputType = {
    id_ticket?: true
    id_utilizador?: true
    id_pagina?: true
    data_criacao?: true
    descricao_problema?: true
    estado_ticket?: true
    _all?: true
  }

  export type TicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ticket to aggregate.
     */
    where?: ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketOrderByWithRelationInput | ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tickets
    **/
    _count?: true | TicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketMaxAggregateInputType
  }

  export type GetTicketAggregateType<T extends TicketAggregateArgs> = {
        [P in keyof T & keyof AggregateTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicket[P]>
      : GetScalarType<T[P], AggregateTicket[P]>
  }




  export type ticketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticketWhereInput
    orderBy?: ticketOrderByWithAggregationInput | ticketOrderByWithAggregationInput[]
    by: TicketScalarFieldEnum[] | TicketScalarFieldEnum
    having?: ticketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketCountAggregateInputType | true
    _avg?: TicketAvgAggregateInputType
    _sum?: TicketSumAggregateInputType
    _min?: TicketMinAggregateInputType
    _max?: TicketMaxAggregateInputType
  }

  export type TicketGroupByOutputType = {
    id_ticket: number
    id_utilizador: number
    id_pagina: number
    data_criacao: Date | null
    descricao_problema: string | null
    estado_ticket: $Enums.estado_ticket
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  type GetTicketGroupByPayload<T extends ticketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketGroupByOutputType[P]>
            : GetScalarType<T[P], TicketGroupByOutputType[P]>
        }
      >
    >


  export type ticketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ticket?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_criacao?: boolean
    descricao_problema?: boolean
    estado_ticket?: boolean
    notificacao?: boolean | ticket$notificacaoArgs<ExtArgs>
    resposta_ticket?: boolean | ticket$resposta_ticketArgs<ExtArgs>
    pagina_freguesia?: boolean | ticket$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | ticket$utilizadorArgs<ExtArgs>
    _count?: boolean | TicketCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>

  export type ticketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ticket?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_criacao?: boolean
    descricao_problema?: boolean
    estado_ticket?: boolean
    pagina_freguesia?: boolean | ticket$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | ticket$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>

  export type ticketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ticket?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_criacao?: boolean
    descricao_problema?: boolean
    estado_ticket?: boolean
    pagina_freguesia?: boolean | ticket$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | ticket$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>

  export type ticketSelectScalar = {
    id_ticket?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    data_criacao?: boolean
    descricao_problema?: boolean
    estado_ticket?: boolean
  }

  export type ticketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ticket" | "id_utilizador" | "id_pagina" | "data_criacao" | "descricao_problema" | "estado_ticket", ExtArgs["result"]["ticket"]>
  export type ticketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificacao?: boolean | ticket$notificacaoArgs<ExtArgs>
    resposta_ticket?: boolean | ticket$resposta_ticketArgs<ExtArgs>
    pagina_freguesia?: boolean | ticket$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | ticket$utilizadorArgs<ExtArgs>
    _count?: boolean | TicketCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ticketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | ticket$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | ticket$utilizadorArgs<ExtArgs>
  }
  export type ticketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | ticket$pagina_freguesiaArgs<ExtArgs>
    utilizador?: boolean | ticket$utilizadorArgs<ExtArgs>
  }

  export type $ticketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ticket"
    objects: {
      notificacao: Prisma.$notificacaoPayload<ExtArgs>[]
      resposta_ticket: Prisma.$resposta_ticketPayload<ExtArgs>[]
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ticket: number
      id_utilizador: number
      id_pagina: number
      data_criacao: Date | null
      descricao_problema: string | null
      estado_ticket: $Enums.estado_ticket
    }, ExtArgs["result"]["ticket"]>
    composites: {}
  }

  type ticketGetPayload<S extends boolean | null | undefined | ticketDefaultArgs> = $Result.GetResult<Prisma.$ticketPayload, S>

  type ticketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ticketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketCountAggregateInputType | true
    }

  export interface ticketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ticket'], meta: { name: 'ticket' } }
    /**
     * Find zero or one Ticket that matches the filter.
     * @param {ticketFindUniqueArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ticketFindUniqueArgs>(args: SelectSubset<T, ticketFindUniqueArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ticket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ticketFindUniqueOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ticketFindUniqueOrThrowArgs>(args: SelectSubset<T, ticketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketFindFirstArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ticketFindFirstArgs>(args?: SelectSubset<T, ticketFindFirstArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketFindFirstOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ticketFindFirstOrThrowArgs>(args?: SelectSubset<T, ticketFindFirstOrThrowArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tickets
     * const tickets = await prisma.ticket.findMany()
     * 
     * // Get first 10 Tickets
     * const tickets = await prisma.ticket.findMany({ take: 10 })
     * 
     * // Only select the `id_ticket`
     * const ticketWithId_ticketOnly = await prisma.ticket.findMany({ select: { id_ticket: true } })
     * 
     */
    findMany<T extends ticketFindManyArgs>(args?: SelectSubset<T, ticketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ticket.
     * @param {ticketCreateArgs} args - Arguments to create a Ticket.
     * @example
     * // Create one Ticket
     * const Ticket = await prisma.ticket.create({
     *   data: {
     *     // ... data to create a Ticket
     *   }
     * })
     * 
     */
    create<T extends ticketCreateArgs>(args: SelectSubset<T, ticketCreateArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tickets.
     * @param {ticketCreateManyArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const ticket = await prisma.ticket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ticketCreateManyArgs>(args?: SelectSubset<T, ticketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tickets and returns the data saved in the database.
     * @param {ticketCreateManyAndReturnArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const ticket = await prisma.ticket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tickets and only return the `id_ticket`
     * const ticketWithId_ticketOnly = await prisma.ticket.createManyAndReturn({
     *   select: { id_ticket: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ticketCreateManyAndReturnArgs>(args?: SelectSubset<T, ticketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ticket.
     * @param {ticketDeleteArgs} args - Arguments to delete one Ticket.
     * @example
     * // Delete one Ticket
     * const Ticket = await prisma.ticket.delete({
     *   where: {
     *     // ... filter to delete one Ticket
     *   }
     * })
     * 
     */
    delete<T extends ticketDeleteArgs>(args: SelectSubset<T, ticketDeleteArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ticket.
     * @param {ticketUpdateArgs} args - Arguments to update one Ticket.
     * @example
     * // Update one Ticket
     * const ticket = await prisma.ticket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ticketUpdateArgs>(args: SelectSubset<T, ticketUpdateArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tickets.
     * @param {ticketDeleteManyArgs} args - Arguments to filter Tickets to delete.
     * @example
     * // Delete a few Tickets
     * const { count } = await prisma.ticket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ticketDeleteManyArgs>(args?: SelectSubset<T, ticketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tickets
     * const ticket = await prisma.ticket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ticketUpdateManyArgs>(args: SelectSubset<T, ticketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets and returns the data updated in the database.
     * @param {ticketUpdateManyAndReturnArgs} args - Arguments to update many Tickets.
     * @example
     * // Update many Tickets
     * const ticket = await prisma.ticket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tickets and only return the `id_ticket`
     * const ticketWithId_ticketOnly = await prisma.ticket.updateManyAndReturn({
     *   select: { id_ticket: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ticketUpdateManyAndReturnArgs>(args: SelectSubset<T, ticketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ticket.
     * @param {ticketUpsertArgs} args - Arguments to update or create a Ticket.
     * @example
     * // Update or create a Ticket
     * const ticket = await prisma.ticket.upsert({
     *   create: {
     *     // ... data to create a Ticket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ticket we want to update
     *   }
     * })
     */
    upsert<T extends ticketUpsertArgs>(args: SelectSubset<T, ticketUpsertArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketCountArgs} args - Arguments to filter Tickets to count.
     * @example
     * // Count the number of Tickets
     * const count = await prisma.ticket.count({
     *   where: {
     *     // ... the filter for the Tickets we want to count
     *   }
     * })
    **/
    count<T extends ticketCountArgs>(
      args?: Subset<T, ticketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketAggregateArgs>(args: Subset<T, TicketAggregateArgs>): Prisma.PrismaPromise<GetTicketAggregateType<T>>

    /**
     * Group by Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ticketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ticketGroupByArgs['orderBy'] }
        : { orderBy?: ticketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ticketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ticket model
   */
  readonly fields: ticketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ticket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ticketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notificacao<T extends ticket$notificacaoArgs<ExtArgs> = {}>(args?: Subset<T, ticket$notificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    resposta_ticket<T extends ticket$resposta_ticketArgs<ExtArgs> = {}>(args?: Subset<T, ticket$resposta_ticketArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagina_freguesia<T extends ticket$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, ticket$pagina_freguesiaArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends ticket$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, ticket$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ticket model
   */
  interface ticketFieldRefs {
    readonly id_ticket: FieldRef<"ticket", 'Int'>
    readonly id_utilizador: FieldRef<"ticket", 'Int'>
    readonly id_pagina: FieldRef<"ticket", 'Int'>
    readonly data_criacao: FieldRef<"ticket", 'DateTime'>
    readonly descricao_problema: FieldRef<"ticket", 'String'>
    readonly estado_ticket: FieldRef<"ticket", 'estado_ticket'>
  }
    

  // Custom InputTypes
  /**
   * ticket findUnique
   */
  export type ticketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * Filter, which ticket to fetch.
     */
    where: ticketWhereUniqueInput
  }

  /**
   * ticket findUniqueOrThrow
   */
  export type ticketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * Filter, which ticket to fetch.
     */
    where: ticketWhereUniqueInput
  }

  /**
   * ticket findFirst
   */
  export type ticketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * Filter, which ticket to fetch.
     */
    where?: ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketOrderByWithRelationInput | ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tickets.
     */
    cursor?: ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tickets.
     */
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * ticket findFirstOrThrow
   */
  export type ticketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * Filter, which ticket to fetch.
     */
    where?: ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketOrderByWithRelationInput | ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tickets.
     */
    cursor?: ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tickets.
     */
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * ticket findMany
   */
  export type ticketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * Filter, which tickets to fetch.
     */
    where?: ticketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketOrderByWithRelationInput | ticketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tickets.
     */
    cursor?: ticketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * ticket create
   */
  export type ticketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * The data needed to create a ticket.
     */
    data: XOR<ticketCreateInput, ticketUncheckedCreateInput>
  }

  /**
   * ticket createMany
   */
  export type ticketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tickets.
     */
    data: ticketCreateManyInput | ticketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ticket createManyAndReturn
   */
  export type ticketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * The data used to create many tickets.
     */
    data: ticketCreateManyInput | ticketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ticket update
   */
  export type ticketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * The data needed to update a ticket.
     */
    data: XOR<ticketUpdateInput, ticketUncheckedUpdateInput>
    /**
     * Choose, which ticket to update.
     */
    where: ticketWhereUniqueInput
  }

  /**
   * ticket updateMany
   */
  export type ticketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tickets.
     */
    data: XOR<ticketUpdateManyMutationInput, ticketUncheckedUpdateManyInput>
    /**
     * Filter which tickets to update
     */
    where?: ticketWhereInput
    /**
     * Limit how many tickets to update.
     */
    limit?: number
  }

  /**
   * ticket updateManyAndReturn
   */
  export type ticketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * The data used to update tickets.
     */
    data: XOR<ticketUpdateManyMutationInput, ticketUncheckedUpdateManyInput>
    /**
     * Filter which tickets to update
     */
    where?: ticketWhereInput
    /**
     * Limit how many tickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ticket upsert
   */
  export type ticketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * The filter to search for the ticket to update in case it exists.
     */
    where: ticketWhereUniqueInput
    /**
     * In case the ticket found by the `where` argument doesn't exist, create a new ticket with this data.
     */
    create: XOR<ticketCreateInput, ticketUncheckedCreateInput>
    /**
     * In case the ticket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ticketUpdateInput, ticketUncheckedUpdateInput>
  }

  /**
   * ticket delete
   */
  export type ticketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    /**
     * Filter which ticket to delete.
     */
    where: ticketWhereUniqueInput
  }

  /**
   * ticket deleteMany
   */
  export type ticketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tickets to delete
     */
    where?: ticketWhereInput
    /**
     * Limit how many tickets to delete.
     */
    limit?: number
  }

  /**
   * ticket.notificacao
   */
  export type ticket$notificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    where?: notificacaoWhereInput
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    cursor?: notificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * ticket.resposta_ticket
   */
  export type ticket$resposta_ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    where?: resposta_ticketWhereInput
    orderBy?: resposta_ticketOrderByWithRelationInput | resposta_ticketOrderByWithRelationInput[]
    cursor?: resposta_ticketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Resposta_ticketScalarFieldEnum | Resposta_ticketScalarFieldEnum[]
  }

  /**
   * ticket.pagina_freguesia
   */
  export type ticket$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
  }

  /**
   * ticket.utilizador
   */
  export type ticket$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * ticket without action
   */
  export type ticketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
  }


  /**
   * Model utilizador
   */

  export type AggregateUtilizador = {
    _count: UtilizadorCountAggregateOutputType | null
    _avg: UtilizadorAvgAggregateOutputType | null
    _sum: UtilizadorSumAggregateOutputType | null
    _min: UtilizadorMinAggregateOutputType | null
    _max: UtilizadorMaxAggregateOutputType | null
  }

  export type UtilizadorAvgAggregateOutputType = {
    id_utilizador: number | null
    id_morada: number | null
  }

  export type UtilizadorSumAggregateOutputType = {
    id_utilizador: number | null
    id_morada: number | null
  }

  export type UtilizadorMinAggregateOutputType = {
    id_utilizador: number | null
    id_morada: number | null
    nome: string | null
    password: string | null
    email: string | null
    data_nascimento: Date | null
    contacto: string | null
    tipo_utilizador: $Enums.tipo_utilizador | null
  }

  export type UtilizadorMaxAggregateOutputType = {
    id_utilizador: number | null
    id_morada: number | null
    nome: string | null
    password: string | null
    email: string | null
    data_nascimento: Date | null
    contacto: string | null
    tipo_utilizador: $Enums.tipo_utilizador | null
  }

  export type UtilizadorCountAggregateOutputType = {
    id_utilizador: number
    id_morada: number
    nome: number
    password: number
    email: number
    data_nascimento: number
    contacto: number
    tipo_utilizador: number
    _all: number
  }


  export type UtilizadorAvgAggregateInputType = {
    id_utilizador?: true
    id_morada?: true
  }

  export type UtilizadorSumAggregateInputType = {
    id_utilizador?: true
    id_morada?: true
  }

  export type UtilizadorMinAggregateInputType = {
    id_utilizador?: true
    id_morada?: true
    nome?: true
    password?: true
    email?: true
    data_nascimento?: true
    contacto?: true
    tipo_utilizador?: true
  }

  export type UtilizadorMaxAggregateInputType = {
    id_utilizador?: true
    id_morada?: true
    nome?: true
    password?: true
    email?: true
    data_nascimento?: true
    contacto?: true
    tipo_utilizador?: true
  }

  export type UtilizadorCountAggregateInputType = {
    id_utilizador?: true
    id_morada?: true
    nome?: true
    password?: true
    email?: true
    data_nascimento?: true
    contacto?: true
    tipo_utilizador?: true
    _all?: true
  }

  export type UtilizadorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which utilizador to aggregate.
     */
    where?: utilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadors to fetch.
     */
    orderBy?: utilizadorOrderByWithRelationInput | utilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: utilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned utilizadors
    **/
    _count?: true | UtilizadorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UtilizadorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UtilizadorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UtilizadorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UtilizadorMaxAggregateInputType
  }

  export type GetUtilizadorAggregateType<T extends UtilizadorAggregateArgs> = {
        [P in keyof T & keyof AggregateUtilizador]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUtilizador[P]>
      : GetScalarType<T[P], AggregateUtilizador[P]>
  }




  export type utilizadorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: utilizadorWhereInput
    orderBy?: utilizadorOrderByWithAggregationInput | utilizadorOrderByWithAggregationInput[]
    by: UtilizadorScalarFieldEnum[] | UtilizadorScalarFieldEnum
    having?: utilizadorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UtilizadorCountAggregateInputType | true
    _avg?: UtilizadorAvgAggregateInputType
    _sum?: UtilizadorSumAggregateInputType
    _min?: UtilizadorMinAggregateInputType
    _max?: UtilizadorMaxAggregateInputType
  }

  export type UtilizadorGroupByOutputType = {
    id_utilizador: number
    id_morada: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date
    contacto: string | null
    tipo_utilizador: $Enums.tipo_utilizador
    _count: UtilizadorCountAggregateOutputType | null
    _avg: UtilizadorAvgAggregateOutputType | null
    _sum: UtilizadorSumAggregateOutputType | null
    _min: UtilizadorMinAggregateOutputType | null
    _max: UtilizadorMaxAggregateOutputType | null
  }

  type GetUtilizadorGroupByPayload<T extends utilizadorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UtilizadorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UtilizadorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UtilizadorGroupByOutputType[P]>
            : GetScalarType<T[P], UtilizadorGroupByOutputType[P]>
        }
      >
    >


  export type utilizadorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_utilizador?: boolean
    id_morada?: boolean
    nome?: boolean
    password?: boolean
    email?: boolean
    data_nascimento?: boolean
    contacto?: boolean
    tipo_utilizador?: boolean
    comentario?: boolean | utilizador$comentarioArgs<ExtArgs>
    moderador_pagina?: boolean | utilizador$moderador_paginaArgs<ExtArgs>
    notificacao?: boolean | utilizador$notificacaoArgs<ExtArgs>
    pagina_freguesia?: boolean | utilizador$pagina_freguesiaArgs<ExtArgs>
    pedido_pagina?: boolean | utilizador$pedido_paginaArgs<ExtArgs>
    perfil?: boolean | utilizador$perfilArgs<ExtArgs>
    post?: boolean | utilizador$postArgs<ExtArgs>
    resposta_ticket?: boolean | utilizador$resposta_ticketArgs<ExtArgs>
    seguidores_pagina?: boolean | utilizador$seguidores_paginaArgs<ExtArgs>
    ticket?: boolean | utilizador$ticketArgs<ExtArgs>
    morada?: boolean | utilizador$moradaArgs<ExtArgs>
    _count?: boolean | UtilizadorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["utilizador"]>

  export type utilizadorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_utilizador?: boolean
    id_morada?: boolean
    nome?: boolean
    password?: boolean
    email?: boolean
    data_nascimento?: boolean
    contacto?: boolean
    tipo_utilizador?: boolean
    morada?: boolean | utilizador$moradaArgs<ExtArgs>
  }, ExtArgs["result"]["utilizador"]>

  export type utilizadorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_utilizador?: boolean
    id_morada?: boolean
    nome?: boolean
    password?: boolean
    email?: boolean
    data_nascimento?: boolean
    contacto?: boolean
    tipo_utilizador?: boolean
    morada?: boolean | utilizador$moradaArgs<ExtArgs>
  }, ExtArgs["result"]["utilizador"]>

  export type utilizadorSelectScalar = {
    id_utilizador?: boolean
    id_morada?: boolean
    nome?: boolean
    password?: boolean
    email?: boolean
    data_nascimento?: boolean
    contacto?: boolean
    tipo_utilizador?: boolean
  }

  export type utilizadorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_utilizador" | "id_morada" | "nome" | "password" | "email" | "data_nascimento" | "contacto" | "tipo_utilizador", ExtArgs["result"]["utilizador"]>
  export type utilizadorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentario?: boolean | utilizador$comentarioArgs<ExtArgs>
    moderador_pagina?: boolean | utilizador$moderador_paginaArgs<ExtArgs>
    notificacao?: boolean | utilizador$notificacaoArgs<ExtArgs>
    pagina_freguesia?: boolean | utilizador$pagina_freguesiaArgs<ExtArgs>
    pedido_pagina?: boolean | utilizador$pedido_paginaArgs<ExtArgs>
    perfil?: boolean | utilizador$perfilArgs<ExtArgs>
    post?: boolean | utilizador$postArgs<ExtArgs>
    resposta_ticket?: boolean | utilizador$resposta_ticketArgs<ExtArgs>
    seguidores_pagina?: boolean | utilizador$seguidores_paginaArgs<ExtArgs>
    ticket?: boolean | utilizador$ticketArgs<ExtArgs>
    morada?: boolean | utilizador$moradaArgs<ExtArgs>
    _count?: boolean | UtilizadorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type utilizadorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | utilizador$moradaArgs<ExtArgs>
  }
  export type utilizadorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    morada?: boolean | utilizador$moradaArgs<ExtArgs>
  }

  export type $utilizadorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "utilizador"
    objects: {
      comentario: Prisma.$comentarioPayload<ExtArgs>[]
      moderador_pagina: Prisma.$moderador_paginaPayload<ExtArgs>[]
      notificacao: Prisma.$notificacaoPayload<ExtArgs>[]
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs>[]
      pedido_pagina: Prisma.$pedido_paginaPayload<ExtArgs>[]
      perfil: Prisma.$perfilPayload<ExtArgs>[]
      post: Prisma.$postPayload<ExtArgs>[]
      resposta_ticket: Prisma.$resposta_ticketPayload<ExtArgs>[]
      seguidores_pagina: Prisma.$seguidores_paginaPayload<ExtArgs>[]
      ticket: Prisma.$ticketPayload<ExtArgs>[]
      morada: Prisma.$moradaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_utilizador: number
      id_morada: number | null
      nome: string
      password: string
      email: string
      data_nascimento: Date
      contacto: string | null
      tipo_utilizador: $Enums.tipo_utilizador
    }, ExtArgs["result"]["utilizador"]>
    composites: {}
  }

  type utilizadorGetPayload<S extends boolean | null | undefined | utilizadorDefaultArgs> = $Result.GetResult<Prisma.$utilizadorPayload, S>

  type utilizadorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<utilizadorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UtilizadorCountAggregateInputType | true
    }

  export interface utilizadorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['utilizador'], meta: { name: 'utilizador' } }
    /**
     * Find zero or one Utilizador that matches the filter.
     * @param {utilizadorFindUniqueArgs} args - Arguments to find a Utilizador
     * @example
     * // Get one Utilizador
     * const utilizador = await prisma.utilizador.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends utilizadorFindUniqueArgs>(args: SelectSubset<T, utilizadorFindUniqueArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Utilizador that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {utilizadorFindUniqueOrThrowArgs} args - Arguments to find a Utilizador
     * @example
     * // Get one Utilizador
     * const utilizador = await prisma.utilizador.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends utilizadorFindUniqueOrThrowArgs>(args: SelectSubset<T, utilizadorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Utilizador that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadorFindFirstArgs} args - Arguments to find a Utilizador
     * @example
     * // Get one Utilizador
     * const utilizador = await prisma.utilizador.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends utilizadorFindFirstArgs>(args?: SelectSubset<T, utilizadorFindFirstArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Utilizador that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadorFindFirstOrThrowArgs} args - Arguments to find a Utilizador
     * @example
     * // Get one Utilizador
     * const utilizador = await prisma.utilizador.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends utilizadorFindFirstOrThrowArgs>(args?: SelectSubset<T, utilizadorFindFirstOrThrowArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Utilizadors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Utilizadors
     * const utilizadors = await prisma.utilizador.findMany()
     * 
     * // Get first 10 Utilizadors
     * const utilizadors = await prisma.utilizador.findMany({ take: 10 })
     * 
     * // Only select the `id_utilizador`
     * const utilizadorWithId_utilizadorOnly = await prisma.utilizador.findMany({ select: { id_utilizador: true } })
     * 
     */
    findMany<T extends utilizadorFindManyArgs>(args?: SelectSubset<T, utilizadorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Utilizador.
     * @param {utilizadorCreateArgs} args - Arguments to create a Utilizador.
     * @example
     * // Create one Utilizador
     * const Utilizador = await prisma.utilizador.create({
     *   data: {
     *     // ... data to create a Utilizador
     *   }
     * })
     * 
     */
    create<T extends utilizadorCreateArgs>(args: SelectSubset<T, utilizadorCreateArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Utilizadors.
     * @param {utilizadorCreateManyArgs} args - Arguments to create many Utilizadors.
     * @example
     * // Create many Utilizadors
     * const utilizador = await prisma.utilizador.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends utilizadorCreateManyArgs>(args?: SelectSubset<T, utilizadorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Utilizadors and returns the data saved in the database.
     * @param {utilizadorCreateManyAndReturnArgs} args - Arguments to create many Utilizadors.
     * @example
     * // Create many Utilizadors
     * const utilizador = await prisma.utilizador.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Utilizadors and only return the `id_utilizador`
     * const utilizadorWithId_utilizadorOnly = await prisma.utilizador.createManyAndReturn({
     *   select: { id_utilizador: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends utilizadorCreateManyAndReturnArgs>(args?: SelectSubset<T, utilizadorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Utilizador.
     * @param {utilizadorDeleteArgs} args - Arguments to delete one Utilizador.
     * @example
     * // Delete one Utilizador
     * const Utilizador = await prisma.utilizador.delete({
     *   where: {
     *     // ... filter to delete one Utilizador
     *   }
     * })
     * 
     */
    delete<T extends utilizadorDeleteArgs>(args: SelectSubset<T, utilizadorDeleteArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Utilizador.
     * @param {utilizadorUpdateArgs} args - Arguments to update one Utilizador.
     * @example
     * // Update one Utilizador
     * const utilizador = await prisma.utilizador.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends utilizadorUpdateArgs>(args: SelectSubset<T, utilizadorUpdateArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Utilizadors.
     * @param {utilizadorDeleteManyArgs} args - Arguments to filter Utilizadors to delete.
     * @example
     * // Delete a few Utilizadors
     * const { count } = await prisma.utilizador.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends utilizadorDeleteManyArgs>(args?: SelectSubset<T, utilizadorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Utilizadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Utilizadors
     * const utilizador = await prisma.utilizador.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends utilizadorUpdateManyArgs>(args: SelectSubset<T, utilizadorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Utilizadors and returns the data updated in the database.
     * @param {utilizadorUpdateManyAndReturnArgs} args - Arguments to update many Utilizadors.
     * @example
     * // Update many Utilizadors
     * const utilizador = await prisma.utilizador.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Utilizadors and only return the `id_utilizador`
     * const utilizadorWithId_utilizadorOnly = await prisma.utilizador.updateManyAndReturn({
     *   select: { id_utilizador: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends utilizadorUpdateManyAndReturnArgs>(args: SelectSubset<T, utilizadorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Utilizador.
     * @param {utilizadorUpsertArgs} args - Arguments to update or create a Utilizador.
     * @example
     * // Update or create a Utilizador
     * const utilizador = await prisma.utilizador.upsert({
     *   create: {
     *     // ... data to create a Utilizador
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Utilizador we want to update
     *   }
     * })
     */
    upsert<T extends utilizadorUpsertArgs>(args: SelectSubset<T, utilizadorUpsertArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Utilizadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadorCountArgs} args - Arguments to filter Utilizadors to count.
     * @example
     * // Count the number of Utilizadors
     * const count = await prisma.utilizador.count({
     *   where: {
     *     // ... the filter for the Utilizadors we want to count
     *   }
     * })
    **/
    count<T extends utilizadorCountArgs>(
      args?: Subset<T, utilizadorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UtilizadorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Utilizador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UtilizadorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UtilizadorAggregateArgs>(args: Subset<T, UtilizadorAggregateArgs>): Prisma.PrismaPromise<GetUtilizadorAggregateType<T>>

    /**
     * Group by Utilizador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends utilizadorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: utilizadorGroupByArgs['orderBy'] }
        : { orderBy?: utilizadorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, utilizadorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUtilizadorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the utilizador model
   */
  readonly fields: utilizadorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for utilizador.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__utilizadorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comentario<T extends utilizador$comentarioArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$comentarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comentarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    moderador_pagina<T extends utilizador$moderador_paginaArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$moderador_paginaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$moderador_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificacao<T extends utilizador$notificacaoArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$notificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagina_freguesia<T extends utilizador$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$pagina_freguesiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedido_pagina<T extends utilizador$pedido_paginaArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$pedido_paginaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    perfil<T extends utilizador$perfilArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$perfilArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post<T extends utilizador$postArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    resposta_ticket<T extends utilizador$resposta_ticketArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$resposta_ticketArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$resposta_ticketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    seguidores_pagina<T extends utilizador$seguidores_paginaArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$seguidores_paginaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seguidores_paginaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticket<T extends utilizador$ticketArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$ticketArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    morada<T extends utilizador$moradaArgs<ExtArgs> = {}>(args?: Subset<T, utilizador$moradaArgs<ExtArgs>>): Prisma__moradaClient<$Result.GetResult<Prisma.$moradaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the utilizador model
   */
  interface utilizadorFieldRefs {
    readonly id_utilizador: FieldRef<"utilizador", 'Int'>
    readonly id_morada: FieldRef<"utilizador", 'Int'>
    readonly nome: FieldRef<"utilizador", 'String'>
    readonly password: FieldRef<"utilizador", 'String'>
    readonly email: FieldRef<"utilizador", 'String'>
    readonly data_nascimento: FieldRef<"utilizador", 'DateTime'>
    readonly contacto: FieldRef<"utilizador", 'String'>
    readonly tipo_utilizador: FieldRef<"utilizador", 'tipo_utilizador'>
  }
    

  // Custom InputTypes
  /**
   * utilizador findUnique
   */
  export type utilizadorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * Filter, which utilizador to fetch.
     */
    where: utilizadorWhereUniqueInput
  }

  /**
   * utilizador findUniqueOrThrow
   */
  export type utilizadorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * Filter, which utilizador to fetch.
     */
    where: utilizadorWhereUniqueInput
  }

  /**
   * utilizador findFirst
   */
  export type utilizadorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * Filter, which utilizador to fetch.
     */
    where?: utilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadors to fetch.
     */
    orderBy?: utilizadorOrderByWithRelationInput | utilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for utilizadors.
     */
    cursor?: utilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of utilizadors.
     */
    distinct?: UtilizadorScalarFieldEnum | UtilizadorScalarFieldEnum[]
  }

  /**
   * utilizador findFirstOrThrow
   */
  export type utilizadorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * Filter, which utilizador to fetch.
     */
    where?: utilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadors to fetch.
     */
    orderBy?: utilizadorOrderByWithRelationInput | utilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for utilizadors.
     */
    cursor?: utilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of utilizadors.
     */
    distinct?: UtilizadorScalarFieldEnum | UtilizadorScalarFieldEnum[]
  }

  /**
   * utilizador findMany
   */
  export type utilizadorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * Filter, which utilizadors to fetch.
     */
    where?: utilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadors to fetch.
     */
    orderBy?: utilizadorOrderByWithRelationInput | utilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing utilizadors.
     */
    cursor?: utilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadors.
     */
    skip?: number
    distinct?: UtilizadorScalarFieldEnum | UtilizadorScalarFieldEnum[]
  }

  /**
   * utilizador create
   */
  export type utilizadorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * The data needed to create a utilizador.
     */
    data: XOR<utilizadorCreateInput, utilizadorUncheckedCreateInput>
  }

  /**
   * utilizador createMany
   */
  export type utilizadorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many utilizadors.
     */
    data: utilizadorCreateManyInput | utilizadorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * utilizador createManyAndReturn
   */
  export type utilizadorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * The data used to create many utilizadors.
     */
    data: utilizadorCreateManyInput | utilizadorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * utilizador update
   */
  export type utilizadorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * The data needed to update a utilizador.
     */
    data: XOR<utilizadorUpdateInput, utilizadorUncheckedUpdateInput>
    /**
     * Choose, which utilizador to update.
     */
    where: utilizadorWhereUniqueInput
  }

  /**
   * utilizador updateMany
   */
  export type utilizadorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update utilizadors.
     */
    data: XOR<utilizadorUpdateManyMutationInput, utilizadorUncheckedUpdateManyInput>
    /**
     * Filter which utilizadors to update
     */
    where?: utilizadorWhereInput
    /**
     * Limit how many utilizadors to update.
     */
    limit?: number
  }

  /**
   * utilizador updateManyAndReturn
   */
  export type utilizadorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * The data used to update utilizadors.
     */
    data: XOR<utilizadorUpdateManyMutationInput, utilizadorUncheckedUpdateManyInput>
    /**
     * Filter which utilizadors to update
     */
    where?: utilizadorWhereInput
    /**
     * Limit how many utilizadors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * utilizador upsert
   */
  export type utilizadorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * The filter to search for the utilizador to update in case it exists.
     */
    where: utilizadorWhereUniqueInput
    /**
     * In case the utilizador found by the `where` argument doesn't exist, create a new utilizador with this data.
     */
    create: XOR<utilizadorCreateInput, utilizadorUncheckedCreateInput>
    /**
     * In case the utilizador was found with the provided `where` argument, update it with this data.
     */
    update: XOR<utilizadorUpdateInput, utilizadorUncheckedUpdateInput>
  }

  /**
   * utilizador delete
   */
  export type utilizadorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    /**
     * Filter which utilizador to delete.
     */
    where: utilizadorWhereUniqueInput
  }

  /**
   * utilizador deleteMany
   */
  export type utilizadorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which utilizadors to delete
     */
    where?: utilizadorWhereInput
    /**
     * Limit how many utilizadors to delete.
     */
    limit?: number
  }

  /**
   * utilizador.comentario
   */
  export type utilizador$comentarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comentario
     */
    select?: comentarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comentario
     */
    omit?: comentarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comentarioInclude<ExtArgs> | null
    where?: comentarioWhereInput
    orderBy?: comentarioOrderByWithRelationInput | comentarioOrderByWithRelationInput[]
    cursor?: comentarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * utilizador.moderador_pagina
   */
  export type utilizador$moderador_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the moderador_pagina
     */
    select?: moderador_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the moderador_pagina
     */
    omit?: moderador_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moderador_paginaInclude<ExtArgs> | null
    where?: moderador_paginaWhereInput
    orderBy?: moderador_paginaOrderByWithRelationInput | moderador_paginaOrderByWithRelationInput[]
    cursor?: moderador_paginaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Moderador_paginaScalarFieldEnum | Moderador_paginaScalarFieldEnum[]
  }

  /**
   * utilizador.notificacao
   */
  export type utilizador$notificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    where?: notificacaoWhereInput
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    cursor?: notificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * utilizador.pagina_freguesia
   */
  export type utilizador$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
    orderBy?: pagina_freguesiaOrderByWithRelationInput | pagina_freguesiaOrderByWithRelationInput[]
    cursor?: pagina_freguesiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pagina_freguesiaScalarFieldEnum | Pagina_freguesiaScalarFieldEnum[]
  }

  /**
   * utilizador.pedido_pagina
   */
  export type utilizador$pedido_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_pagina
     */
    select?: pedido_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_pagina
     */
    omit?: pedido_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_paginaInclude<ExtArgs> | null
    where?: pedido_paginaWhereInput
    orderBy?: pedido_paginaOrderByWithRelationInput | pedido_paginaOrderByWithRelationInput[]
    cursor?: pedido_paginaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pedido_paginaScalarFieldEnum | Pedido_paginaScalarFieldEnum[]
  }

  /**
   * utilizador.perfil
   */
  export type utilizador$perfilArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the perfil
     */
    omit?: perfilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilInclude<ExtArgs> | null
    where?: perfilWhereInput
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    cursor?: perfilWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }

  /**
   * utilizador.post
   */
  export type utilizador$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    cursor?: postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * utilizador.resposta_ticket
   */
  export type utilizador$resposta_ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the resposta_ticket
     */
    select?: resposta_ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the resposta_ticket
     */
    omit?: resposta_ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: resposta_ticketInclude<ExtArgs> | null
    where?: resposta_ticketWhereInput
    orderBy?: resposta_ticketOrderByWithRelationInput | resposta_ticketOrderByWithRelationInput[]
    cursor?: resposta_ticketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Resposta_ticketScalarFieldEnum | Resposta_ticketScalarFieldEnum[]
  }

  /**
   * utilizador.seguidores_pagina
   */
  export type utilizador$seguidores_paginaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seguidores_pagina
     */
    select?: seguidores_paginaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seguidores_pagina
     */
    omit?: seguidores_paginaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seguidores_paginaInclude<ExtArgs> | null
    where?: seguidores_paginaWhereInput
    orderBy?: seguidores_paginaOrderByWithRelationInput | seguidores_paginaOrderByWithRelationInput[]
    cursor?: seguidores_paginaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Seguidores_paginaScalarFieldEnum | Seguidores_paginaScalarFieldEnum[]
  }

  /**
   * utilizador.ticket
   */
  export type utilizador$ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    where?: ticketWhereInput
    orderBy?: ticketOrderByWithRelationInput | ticketOrderByWithRelationInput[]
    cursor?: ticketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * utilizador.morada
   */
  export type utilizador$moradaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the morada
     */
    select?: moradaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the morada
     */
    omit?: moradaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: moradaInclude<ExtArgs> | null
    where?: moradaWhereInput
  }

  /**
   * utilizador without action
   */
  export type utilizadorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
  }


  /**
   * Model notificacao
   */

  export type AggregateNotificacao = {
    _count: NotificacaoCountAggregateOutputType | null
    _avg: NotificacaoAvgAggregateOutputType | null
    _sum: NotificacaoSumAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  export type NotificacaoAvgAggregateOutputType = {
    id_notificacao: number | null
    id_utilizador: number | null
    id_pagina: number | null
    id_post: number | null
    id_ticket: number | null
  }

  export type NotificacaoSumAggregateOutputType = {
    id_notificacao: number | null
    id_utilizador: number | null
    id_pagina: number | null
    id_post: number | null
    id_ticket: number | null
  }

  export type NotificacaoMinAggregateOutputType = {
    id_notificacao: number | null
    id_utilizador: number | null
    id_pagina: number | null
    tipo_notificacao: $Enums.tipo_notificacao | null
    id_post: number | null
    id_ticket: number | null
    data: Date | null
    conteudo_notificacao: string | null
    estado_notificacao: $Enums.estado_notificacao | null
  }

  export type NotificacaoMaxAggregateOutputType = {
    id_notificacao: number | null
    id_utilizador: number | null
    id_pagina: number | null
    tipo_notificacao: $Enums.tipo_notificacao | null
    id_post: number | null
    id_ticket: number | null
    data: Date | null
    conteudo_notificacao: string | null
    estado_notificacao: $Enums.estado_notificacao | null
  }

  export type NotificacaoCountAggregateOutputType = {
    id_notificacao: number
    id_utilizador: number
    id_pagina: number
    tipo_notificacao: number
    id_post: number
    id_ticket: number
    data: number
    conteudo_notificacao: number
    estado_notificacao: number
    _all: number
  }


  export type NotificacaoAvgAggregateInputType = {
    id_notificacao?: true
    id_utilizador?: true
    id_pagina?: true
    id_post?: true
    id_ticket?: true
  }

  export type NotificacaoSumAggregateInputType = {
    id_notificacao?: true
    id_utilizador?: true
    id_pagina?: true
    id_post?: true
    id_ticket?: true
  }

  export type NotificacaoMinAggregateInputType = {
    id_notificacao?: true
    id_utilizador?: true
    id_pagina?: true
    tipo_notificacao?: true
    id_post?: true
    id_ticket?: true
    data?: true
    conteudo_notificacao?: true
    estado_notificacao?: true
  }

  export type NotificacaoMaxAggregateInputType = {
    id_notificacao?: true
    id_utilizador?: true
    id_pagina?: true
    tipo_notificacao?: true
    id_post?: true
    id_ticket?: true
    data?: true
    conteudo_notificacao?: true
    estado_notificacao?: true
  }

  export type NotificacaoCountAggregateInputType = {
    id_notificacao?: true
    id_utilizador?: true
    id_pagina?: true
    tipo_notificacao?: true
    id_post?: true
    id_ticket?: true
    data?: true
    conteudo_notificacao?: true
    estado_notificacao?: true
    _all?: true
  }

  export type NotificacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificacao to aggregate.
     */
    where?: notificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificacaos to fetch.
     */
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notificacaos
    **/
    _count?: true | NotificacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacaoMaxAggregateInputType
  }

  export type GetNotificacaoAggregateType<T extends NotificacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacao[P]>
      : GetScalarType<T[P], AggregateNotificacao[P]>
  }




  export type notificacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacaoWhereInput
    orderBy?: notificacaoOrderByWithAggregationInput | notificacaoOrderByWithAggregationInput[]
    by: NotificacaoScalarFieldEnum[] | NotificacaoScalarFieldEnum
    having?: notificacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacaoCountAggregateInputType | true
    _avg?: NotificacaoAvgAggregateInputType
    _sum?: NotificacaoSumAggregateInputType
    _min?: NotificacaoMinAggregateInputType
    _max?: NotificacaoMaxAggregateInputType
  }

  export type NotificacaoGroupByOutputType = {
    id_notificacao: number
    id_utilizador: number | null
    id_pagina: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post: number | null
    id_ticket: number | null
    data: Date | null
    conteudo_notificacao: string | null
    estado_notificacao: $Enums.estado_notificacao
    _count: NotificacaoCountAggregateOutputType | null
    _avg: NotificacaoAvgAggregateOutputType | null
    _sum: NotificacaoSumAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  type GetNotificacaoGroupByPayload<T extends notificacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
        }
      >
    >


  export type notificacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_notificacao?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    tipo_notificacao?: boolean
    id_post?: boolean
    id_ticket?: boolean
    data?: boolean
    conteudo_notificacao?: boolean
    estado_notificacao?: boolean
    pagina_freguesia?: boolean | notificacao$pagina_freguesiaArgs<ExtArgs>
    post?: boolean | notificacao$postArgs<ExtArgs>
    ticket?: boolean | notificacao$ticketArgs<ExtArgs>
    utilizador?: boolean | notificacao$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type notificacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_notificacao?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    tipo_notificacao?: boolean
    id_post?: boolean
    id_ticket?: boolean
    data?: boolean
    conteudo_notificacao?: boolean
    estado_notificacao?: boolean
    pagina_freguesia?: boolean | notificacao$pagina_freguesiaArgs<ExtArgs>
    post?: boolean | notificacao$postArgs<ExtArgs>
    ticket?: boolean | notificacao$ticketArgs<ExtArgs>
    utilizador?: boolean | notificacao$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type notificacaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_notificacao?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    tipo_notificacao?: boolean
    id_post?: boolean
    id_ticket?: boolean
    data?: boolean
    conteudo_notificacao?: boolean
    estado_notificacao?: boolean
    pagina_freguesia?: boolean | notificacao$pagina_freguesiaArgs<ExtArgs>
    post?: boolean | notificacao$postArgs<ExtArgs>
    ticket?: boolean | notificacao$ticketArgs<ExtArgs>
    utilizador?: boolean | notificacao$utilizadorArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type notificacaoSelectScalar = {
    id_notificacao?: boolean
    id_utilizador?: boolean
    id_pagina?: boolean
    tipo_notificacao?: boolean
    id_post?: boolean
    id_ticket?: boolean
    data?: boolean
    conteudo_notificacao?: boolean
    estado_notificacao?: boolean
  }

  export type notificacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_notificacao" | "id_utilizador" | "id_pagina" | "tipo_notificacao" | "id_post" | "id_ticket" | "data" | "conteudo_notificacao" | "estado_notificacao", ExtArgs["result"]["notificacao"]>
  export type notificacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | notificacao$pagina_freguesiaArgs<ExtArgs>
    post?: boolean | notificacao$postArgs<ExtArgs>
    ticket?: boolean | notificacao$ticketArgs<ExtArgs>
    utilizador?: boolean | notificacao$utilizadorArgs<ExtArgs>
  }
  export type notificacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | notificacao$pagina_freguesiaArgs<ExtArgs>
    post?: boolean | notificacao$postArgs<ExtArgs>
    ticket?: boolean | notificacao$ticketArgs<ExtArgs>
    utilizador?: boolean | notificacao$utilizadorArgs<ExtArgs>
  }
  export type notificacaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagina_freguesia?: boolean | notificacao$pagina_freguesiaArgs<ExtArgs>
    post?: boolean | notificacao$postArgs<ExtArgs>
    ticket?: boolean | notificacao$ticketArgs<ExtArgs>
    utilizador?: boolean | notificacao$utilizadorArgs<ExtArgs>
  }

  export type $notificacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notificacao"
    objects: {
      pagina_freguesia: Prisma.$pagina_freguesiaPayload<ExtArgs> | null
      post: Prisma.$postPayload<ExtArgs> | null
      ticket: Prisma.$ticketPayload<ExtArgs> | null
      utilizador: Prisma.$utilizadorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_notificacao: number
      id_utilizador: number | null
      id_pagina: number | null
      tipo_notificacao: $Enums.tipo_notificacao
      id_post: number | null
      id_ticket: number | null
      data: Date | null
      conteudo_notificacao: string | null
      estado_notificacao: $Enums.estado_notificacao
    }, ExtArgs["result"]["notificacao"]>
    composites: {}
  }

  type notificacaoGetPayload<S extends boolean | null | undefined | notificacaoDefaultArgs> = $Result.GetResult<Prisma.$notificacaoPayload, S>

  type notificacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificacaoCountAggregateInputType | true
    }

  export interface notificacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notificacao'], meta: { name: 'notificacao' } }
    /**
     * Find zero or one Notificacao that matches the filter.
     * @param {notificacaoFindUniqueArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificacaoFindUniqueArgs>(args: SelectSubset<T, notificacaoFindUniqueArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notificacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificacaoFindUniqueOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, notificacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacaoFindFirstArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificacaoFindFirstArgs>(args?: SelectSubset<T, notificacaoFindFirstArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacaoFindFirstOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, notificacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notificacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificacaos
     * const notificacaos = await prisma.notificacao.findMany()
     * 
     * // Get first 10 Notificacaos
     * const notificacaos = await prisma.notificacao.findMany({ take: 10 })
     * 
     * // Only select the `id_notificacao`
     * const notificacaoWithId_notificacaoOnly = await prisma.notificacao.findMany({ select: { id_notificacao: true } })
     * 
     */
    findMany<T extends notificacaoFindManyArgs>(args?: SelectSubset<T, notificacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notificacao.
     * @param {notificacaoCreateArgs} args - Arguments to create a Notificacao.
     * @example
     * // Create one Notificacao
     * const Notificacao = await prisma.notificacao.create({
     *   data: {
     *     // ... data to create a Notificacao
     *   }
     * })
     * 
     */
    create<T extends notificacaoCreateArgs>(args: SelectSubset<T, notificacaoCreateArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notificacaos.
     * @param {notificacaoCreateManyArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificacaoCreateManyArgs>(args?: SelectSubset<T, notificacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificacaos and returns the data saved in the database.
     * @param {notificacaoCreateManyAndReturnArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificacaos and only return the `id_notificacao`
     * const notificacaoWithId_notificacaoOnly = await prisma.notificacao.createManyAndReturn({
     *   select: { id_notificacao: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, notificacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notificacao.
     * @param {notificacaoDeleteArgs} args - Arguments to delete one Notificacao.
     * @example
     * // Delete one Notificacao
     * const Notificacao = await prisma.notificacao.delete({
     *   where: {
     *     // ... filter to delete one Notificacao
     *   }
     * })
     * 
     */
    delete<T extends notificacaoDeleteArgs>(args: SelectSubset<T, notificacaoDeleteArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notificacao.
     * @param {notificacaoUpdateArgs} args - Arguments to update one Notificacao.
     * @example
     * // Update one Notificacao
     * const notificacao = await prisma.notificacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificacaoUpdateArgs>(args: SelectSubset<T, notificacaoUpdateArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notificacaos.
     * @param {notificacaoDeleteManyArgs} args - Arguments to filter Notificacaos to delete.
     * @example
     * // Delete a few Notificacaos
     * const { count } = await prisma.notificacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificacaoDeleteManyArgs>(args?: SelectSubset<T, notificacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificacaos
     * const notificacao = await prisma.notificacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificacaoUpdateManyArgs>(args: SelectSubset<T, notificacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacaos and returns the data updated in the database.
     * @param {notificacaoUpdateManyAndReturnArgs} args - Arguments to update many Notificacaos.
     * @example
     * // Update many Notificacaos
     * const notificacao = await prisma.notificacao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notificacaos and only return the `id_notificacao`
     * const notificacaoWithId_notificacaoOnly = await prisma.notificacao.updateManyAndReturn({
     *   select: { id_notificacao: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificacaoUpdateManyAndReturnArgs>(args: SelectSubset<T, notificacaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notificacao.
     * @param {notificacaoUpsertArgs} args - Arguments to update or create a Notificacao.
     * @example
     * // Update or create a Notificacao
     * const notificacao = await prisma.notificacao.upsert({
     *   create: {
     *     // ... data to create a Notificacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificacao we want to update
     *   }
     * })
     */
    upsert<T extends notificacaoUpsertArgs>(args: SelectSubset<T, notificacaoUpsertArgs<ExtArgs>>): Prisma__notificacaoClient<$Result.GetResult<Prisma.$notificacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacaoCountArgs} args - Arguments to filter Notificacaos to count.
     * @example
     * // Count the number of Notificacaos
     * const count = await prisma.notificacao.count({
     *   where: {
     *     // ... the filter for the Notificacaos we want to count
     *   }
     * })
    **/
    count<T extends notificacaoCountArgs>(
      args?: Subset<T, notificacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacaoAggregateArgs>(args: Subset<T, NotificacaoAggregateArgs>): Prisma.PrismaPromise<GetNotificacaoAggregateType<T>>

    /**
     * Group by Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificacaoGroupByArgs['orderBy'] }
        : { orderBy?: notificacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notificacao model
   */
  readonly fields: notificacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notificacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pagina_freguesia<T extends notificacao$pagina_freguesiaArgs<ExtArgs> = {}>(args?: Subset<T, notificacao$pagina_freguesiaArgs<ExtArgs>>): Prisma__pagina_freguesiaClient<$Result.GetResult<Prisma.$pagina_freguesiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    post<T extends notificacao$postArgs<ExtArgs> = {}>(args?: Subset<T, notificacao$postArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ticket<T extends notificacao$ticketArgs<ExtArgs> = {}>(args?: Subset<T, notificacao$ticketArgs<ExtArgs>>): Prisma__ticketClient<$Result.GetResult<Prisma.$ticketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    utilizador<T extends notificacao$utilizadorArgs<ExtArgs> = {}>(args?: Subset<T, notificacao$utilizadorArgs<ExtArgs>>): Prisma__utilizadorClient<$Result.GetResult<Prisma.$utilizadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notificacao model
   */
  interface notificacaoFieldRefs {
    readonly id_notificacao: FieldRef<"notificacao", 'Int'>
    readonly id_utilizador: FieldRef<"notificacao", 'Int'>
    readonly id_pagina: FieldRef<"notificacao", 'Int'>
    readonly tipo_notificacao: FieldRef<"notificacao", 'tipo_notificacao'>
    readonly id_post: FieldRef<"notificacao", 'Int'>
    readonly id_ticket: FieldRef<"notificacao", 'Int'>
    readonly data: FieldRef<"notificacao", 'DateTime'>
    readonly conteudo_notificacao: FieldRef<"notificacao", 'String'>
    readonly estado_notificacao: FieldRef<"notificacao", 'estado_notificacao'>
  }
    

  // Custom InputTypes
  /**
   * notificacao findUnique
   */
  export type notificacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * Filter, which notificacao to fetch.
     */
    where: notificacaoWhereUniqueInput
  }

  /**
   * notificacao findUniqueOrThrow
   */
  export type notificacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * Filter, which notificacao to fetch.
     */
    where: notificacaoWhereUniqueInput
  }

  /**
   * notificacao findFirst
   */
  export type notificacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * Filter, which notificacao to fetch.
     */
    where?: notificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificacaos to fetch.
     */
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificacaos.
     */
    cursor?: notificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * notificacao findFirstOrThrow
   */
  export type notificacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * Filter, which notificacao to fetch.
     */
    where?: notificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificacaos to fetch.
     */
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificacaos.
     */
    cursor?: notificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * notificacao findMany
   */
  export type notificacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * Filter, which notificacaos to fetch.
     */
    where?: notificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificacaos to fetch.
     */
    orderBy?: notificacaoOrderByWithRelationInput | notificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notificacaos.
     */
    cursor?: notificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificacaos.
     */
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * notificacao create
   */
  export type notificacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a notificacao.
     */
    data: XOR<notificacaoCreateInput, notificacaoUncheckedCreateInput>
  }

  /**
   * notificacao createMany
   */
  export type notificacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notificacaos.
     */
    data: notificacaoCreateManyInput | notificacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notificacao createManyAndReturn
   */
  export type notificacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * The data used to create many notificacaos.
     */
    data: notificacaoCreateManyInput | notificacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * notificacao update
   */
  export type notificacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a notificacao.
     */
    data: XOR<notificacaoUpdateInput, notificacaoUncheckedUpdateInput>
    /**
     * Choose, which notificacao to update.
     */
    where: notificacaoWhereUniqueInput
  }

  /**
   * notificacao updateMany
   */
  export type notificacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notificacaos.
     */
    data: XOR<notificacaoUpdateManyMutationInput, notificacaoUncheckedUpdateManyInput>
    /**
     * Filter which notificacaos to update
     */
    where?: notificacaoWhereInput
    /**
     * Limit how many notificacaos to update.
     */
    limit?: number
  }

  /**
   * notificacao updateManyAndReturn
   */
  export type notificacaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * The data used to update notificacaos.
     */
    data: XOR<notificacaoUpdateManyMutationInput, notificacaoUncheckedUpdateManyInput>
    /**
     * Filter which notificacaos to update
     */
    where?: notificacaoWhereInput
    /**
     * Limit how many notificacaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * notificacao upsert
   */
  export type notificacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the notificacao to update in case it exists.
     */
    where: notificacaoWhereUniqueInput
    /**
     * In case the notificacao found by the `where` argument doesn't exist, create a new notificacao with this data.
     */
    create: XOR<notificacaoCreateInput, notificacaoUncheckedCreateInput>
    /**
     * In case the notificacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificacaoUpdateInput, notificacaoUncheckedUpdateInput>
  }

  /**
   * notificacao delete
   */
  export type notificacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
    /**
     * Filter which notificacao to delete.
     */
    where: notificacaoWhereUniqueInput
  }

  /**
   * notificacao deleteMany
   */
  export type notificacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificacaos to delete
     */
    where?: notificacaoWhereInput
    /**
     * Limit how many notificacaos to delete.
     */
    limit?: number
  }

  /**
   * notificacao.pagina_freguesia
   */
  export type notificacao$pagina_freguesiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagina_freguesia
     */
    select?: pagina_freguesiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagina_freguesia
     */
    omit?: pagina_freguesiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagina_freguesiaInclude<ExtArgs> | null
    where?: pagina_freguesiaWhereInput
  }

  /**
   * notificacao.post
   */
  export type notificacao$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
  }

  /**
   * notificacao.ticket
   */
  export type notificacao$ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket
     */
    select?: ticketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket
     */
    omit?: ticketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketInclude<ExtArgs> | null
    where?: ticketWhereInput
  }

  /**
   * notificacao.utilizador
   */
  export type notificacao$utilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizador
     */
    select?: utilizadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the utilizador
     */
    omit?: utilizadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadorInclude<ExtArgs> | null
    where?: utilizadorWhereInput
  }

  /**
   * notificacao without action
   */
  export type notificacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificacao
     */
    select?: notificacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificacao
     */
    omit?: notificacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacaoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ComentarioScalarFieldEnum: {
    id_comentario: 'id_comentario',
    id_post: 'id_post',
    id_utilizador: 'id_utilizador',
    conteudo_comentario: 'conteudo_comentario',
    data_comentario: 'data_comentario'
  };

  export type ComentarioScalarFieldEnum = (typeof ComentarioScalarFieldEnum)[keyof typeof ComentarioScalarFieldEnum]


  export const Moderador_paginaScalarFieldEnum: {
    id_moderador: 'id_moderador',
    id_pagina: 'id_pagina',
    id_utilizador: 'id_utilizador',
    funcao: 'funcao'
  };

  export type Moderador_paginaScalarFieldEnum = (typeof Moderador_paginaScalarFieldEnum)[keyof typeof Moderador_paginaScalarFieldEnum]


  export const MoradaScalarFieldEnum: {
    id_morada: 'id_morada',
    freguesia: 'freguesia',
    cidade: 'cidade',
    rua: 'rua',
    codigo_postal: 'codigo_postal'
  };

  export type MoradaScalarFieldEnum = (typeof MoradaScalarFieldEnum)[keyof typeof MoradaScalarFieldEnum]


  export const Pagina_freguesiaScalarFieldEnum: {
    id_pagina: 'id_pagina',
    id_morada: 'id_morada',
    id_utilizador: 'id_utilizador',
    nome_pagina: 'nome_pagina',
    descricao: 'descricao',
    foto_perfil: 'foto_perfil',
    foto_capa: 'foto_capa'
  };

  export type Pagina_freguesiaScalarFieldEnum = (typeof Pagina_freguesiaScalarFieldEnum)[keyof typeof Pagina_freguesiaScalarFieldEnum]


  export const Pedido_paginaScalarFieldEnum: {
    id_pedido: 'id_pedido',
    id_utilizador: 'id_utilizador',
    id_morada: 'id_morada',
    dados_comprovacao: 'dados_comprovacao',
    estado_pedido: 'estado_pedido',
    data_pedido: 'data_pedido'
  };

  export type Pedido_paginaScalarFieldEnum = (typeof Pedido_paginaScalarFieldEnum)[keyof typeof Pedido_paginaScalarFieldEnum]


  export const PerfilScalarFieldEnum: {
    id_perfil: 'id_perfil',
    id_utilizador: 'id_utilizador',
    foto_perfil: 'foto_perfil',
    foto_capa: 'foto_capa',
    biografia: 'biografia'
  };

  export type PerfilScalarFieldEnum = (typeof PerfilScalarFieldEnum)[keyof typeof PerfilScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id_post: 'id_post',
    id_utilizador: 'id_utilizador',
    id_pagina: 'id_pagina',
    descricao_post: 'descricao_post',
    media_post: 'media_post',
    estado_post: 'estado_post',
    aprovacoes: 'aprovacoes'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const Resposta_ticketScalarFieldEnum: {
    id_resposta: 'id_resposta',
    id_ticket: 'id_ticket',
    id_utilizador: 'id_utilizador',
    data_resposta: 'data_resposta',
    conteudo_resposta: 'conteudo_resposta',
    estado_resposta: 'estado_resposta'
  };

  export type Resposta_ticketScalarFieldEnum = (typeof Resposta_ticketScalarFieldEnum)[keyof typeof Resposta_ticketScalarFieldEnum]


  export const Seguidores_paginaScalarFieldEnum: {
    id_seguimento: 'id_seguimento',
    id_utilizador: 'id_utilizador',
    id_pagina: 'id_pagina',
    data_seguimento: 'data_seguimento'
  };

  export type Seguidores_paginaScalarFieldEnum = (typeof Seguidores_paginaScalarFieldEnum)[keyof typeof Seguidores_paginaScalarFieldEnum]


  export const TicketScalarFieldEnum: {
    id_ticket: 'id_ticket',
    id_utilizador: 'id_utilizador',
    id_pagina: 'id_pagina',
    data_criacao: 'data_criacao',
    descricao_problema: 'descricao_problema',
    estado_ticket: 'estado_ticket'
  };

  export type TicketScalarFieldEnum = (typeof TicketScalarFieldEnum)[keyof typeof TicketScalarFieldEnum]


  export const UtilizadorScalarFieldEnum: {
    id_utilizador: 'id_utilizador',
    id_morada: 'id_morada',
    nome: 'nome',
    password: 'password',
    email: 'email',
    data_nascimento: 'data_nascimento',
    contacto: 'contacto',
    tipo_utilizador: 'tipo_utilizador'
  };

  export type UtilizadorScalarFieldEnum = (typeof UtilizadorScalarFieldEnum)[keyof typeof UtilizadorScalarFieldEnum]


  export const NotificacaoScalarFieldEnum: {
    id_notificacao: 'id_notificacao',
    id_utilizador: 'id_utilizador',
    id_pagina: 'id_pagina',
    tipo_notificacao: 'tipo_notificacao',
    id_post: 'id_post',
    id_ticket: 'id_ticket',
    data: 'data',
    conteudo_notificacao: 'conteudo_notificacao',
    estado_notificacao: 'estado_notificacao'
  };

  export type NotificacaoScalarFieldEnum = (typeof NotificacaoScalarFieldEnum)[keyof typeof NotificacaoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'funcao_moderador'
   */
  export type Enumfuncao_moderadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'funcao_moderador'>
    


  /**
   * Reference to a field of type 'funcao_moderador[]'
   */
  export type ListEnumfuncao_moderadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'funcao_moderador[]'>
    


  /**
   * Reference to a field of type 'estado_pedido'
   */
  export type Enumestado_pedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_pedido'>
    


  /**
   * Reference to a field of type 'estado_pedido[]'
   */
  export type ListEnumestado_pedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_pedido[]'>
    


  /**
   * Reference to a field of type 'estado_post'
   */
  export type Enumestado_postFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_post'>
    


  /**
   * Reference to a field of type 'estado_post[]'
   */
  export type ListEnumestado_postFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_post[]'>
    


  /**
   * Reference to a field of type 'estado_resposta'
   */
  export type Enumestado_respostaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_resposta'>
    


  /**
   * Reference to a field of type 'estado_resposta[]'
   */
  export type ListEnumestado_respostaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_resposta[]'>
    


  /**
   * Reference to a field of type 'estado_ticket'
   */
  export type Enumestado_ticketFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_ticket'>
    


  /**
   * Reference to a field of type 'estado_ticket[]'
   */
  export type ListEnumestado_ticketFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_ticket[]'>
    


  /**
   * Reference to a field of type 'tipo_utilizador'
   */
  export type Enumtipo_utilizadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tipo_utilizador'>
    


  /**
   * Reference to a field of type 'tipo_utilizador[]'
   */
  export type ListEnumtipo_utilizadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tipo_utilizador[]'>
    


  /**
   * Reference to a field of type 'tipo_notificacao'
   */
  export type Enumtipo_notificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tipo_notificacao'>
    


  /**
   * Reference to a field of type 'tipo_notificacao[]'
   */
  export type ListEnumtipo_notificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tipo_notificacao[]'>
    


  /**
   * Reference to a field of type 'estado_notificacao'
   */
  export type Enumestado_notificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_notificacao'>
    


  /**
   * Reference to a field of type 'estado_notificacao[]'
   */
  export type ListEnumestado_notificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'estado_notificacao[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type comentarioWhereInput = {
    AND?: comentarioWhereInput | comentarioWhereInput[]
    OR?: comentarioWhereInput[]
    NOT?: comentarioWhereInput | comentarioWhereInput[]
    id_comentario?: IntFilter<"comentario"> | number
    id_post?: IntFilter<"comentario"> | number
    id_utilizador?: IntFilter<"comentario"> | number
    conteudo_comentario?: StringFilter<"comentario"> | string
    data_comentario?: DateTimeNullableFilter<"comentario"> | Date | string | null
    post?: XOR<PostNullableScalarRelationFilter, postWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type comentarioOrderByWithRelationInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
    conteudo_comentario?: SortOrder
    data_comentario?: SortOrderInput | SortOrder
    post?: postOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type comentarioWhereUniqueInput = Prisma.AtLeast<{
    id_comentario?: number
    AND?: comentarioWhereInput | comentarioWhereInput[]
    OR?: comentarioWhereInput[]
    NOT?: comentarioWhereInput | comentarioWhereInput[]
    id_post?: IntFilter<"comentario"> | number
    id_utilizador?: IntFilter<"comentario"> | number
    conteudo_comentario?: StringFilter<"comentario"> | string
    data_comentario?: DateTimeNullableFilter<"comentario"> | Date | string | null
    post?: XOR<PostNullableScalarRelationFilter, postWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_comentario">

  export type comentarioOrderByWithAggregationInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
    conteudo_comentario?: SortOrder
    data_comentario?: SortOrderInput | SortOrder
    _count?: comentarioCountOrderByAggregateInput
    _avg?: comentarioAvgOrderByAggregateInput
    _max?: comentarioMaxOrderByAggregateInput
    _min?: comentarioMinOrderByAggregateInput
    _sum?: comentarioSumOrderByAggregateInput
  }

  export type comentarioScalarWhereWithAggregatesInput = {
    AND?: comentarioScalarWhereWithAggregatesInput | comentarioScalarWhereWithAggregatesInput[]
    OR?: comentarioScalarWhereWithAggregatesInput[]
    NOT?: comentarioScalarWhereWithAggregatesInput | comentarioScalarWhereWithAggregatesInput[]
    id_comentario?: IntWithAggregatesFilter<"comentario"> | number
    id_post?: IntWithAggregatesFilter<"comentario"> | number
    id_utilizador?: IntWithAggregatesFilter<"comentario"> | number
    conteudo_comentario?: StringWithAggregatesFilter<"comentario"> | string
    data_comentario?: DateTimeNullableWithAggregatesFilter<"comentario"> | Date | string | null
  }

  export type moderador_paginaWhereInput = {
    AND?: moderador_paginaWhereInput | moderador_paginaWhereInput[]
    OR?: moderador_paginaWhereInput[]
    NOT?: moderador_paginaWhereInput | moderador_paginaWhereInput[]
    id_moderador?: IntFilter<"moderador_pagina"> | number
    id_pagina?: IntNullableFilter<"moderador_pagina"> | number | null
    id_utilizador?: IntNullableFilter<"moderador_pagina"> | number | null
    funcao?: Enumfuncao_moderadorFilter<"moderador_pagina"> | $Enums.funcao_moderador
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type moderador_paginaOrderByWithRelationInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrderInput | SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    funcao?: SortOrder
    pagina_freguesia?: pagina_freguesiaOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type moderador_paginaWhereUniqueInput = Prisma.AtLeast<{
    id_moderador?: number
    AND?: moderador_paginaWhereInput | moderador_paginaWhereInput[]
    OR?: moderador_paginaWhereInput[]
    NOT?: moderador_paginaWhereInput | moderador_paginaWhereInput[]
    id_pagina?: IntNullableFilter<"moderador_pagina"> | number | null
    id_utilizador?: IntNullableFilter<"moderador_pagina"> | number | null
    funcao?: Enumfuncao_moderadorFilter<"moderador_pagina"> | $Enums.funcao_moderador
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_moderador">

  export type moderador_paginaOrderByWithAggregationInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrderInput | SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    funcao?: SortOrder
    _count?: moderador_paginaCountOrderByAggregateInput
    _avg?: moderador_paginaAvgOrderByAggregateInput
    _max?: moderador_paginaMaxOrderByAggregateInput
    _min?: moderador_paginaMinOrderByAggregateInput
    _sum?: moderador_paginaSumOrderByAggregateInput
  }

  export type moderador_paginaScalarWhereWithAggregatesInput = {
    AND?: moderador_paginaScalarWhereWithAggregatesInput | moderador_paginaScalarWhereWithAggregatesInput[]
    OR?: moderador_paginaScalarWhereWithAggregatesInput[]
    NOT?: moderador_paginaScalarWhereWithAggregatesInput | moderador_paginaScalarWhereWithAggregatesInput[]
    id_moderador?: IntWithAggregatesFilter<"moderador_pagina"> | number
    id_pagina?: IntNullableWithAggregatesFilter<"moderador_pagina"> | number | null
    id_utilizador?: IntNullableWithAggregatesFilter<"moderador_pagina"> | number | null
    funcao?: Enumfuncao_moderadorWithAggregatesFilter<"moderador_pagina"> | $Enums.funcao_moderador
  }

  export type moradaWhereInput = {
    AND?: moradaWhereInput | moradaWhereInput[]
    OR?: moradaWhereInput[]
    NOT?: moradaWhereInput | moradaWhereInput[]
    id_morada?: IntFilter<"morada"> | number
    freguesia?: StringNullableFilter<"morada"> | string | null
    cidade?: StringFilter<"morada"> | string
    rua?: StringNullableFilter<"morada"> | string | null
    codigo_postal?: IntFilter<"morada"> | number
    pagina_freguesia?: Pagina_freguesiaListRelationFilter
    pedido_pagina?: Pedido_paginaListRelationFilter
    utilizador?: UtilizadorListRelationFilter
  }

  export type moradaOrderByWithRelationInput = {
    id_morada?: SortOrder
    freguesia?: SortOrderInput | SortOrder
    cidade?: SortOrder
    rua?: SortOrderInput | SortOrder
    codigo_postal?: SortOrder
    pagina_freguesia?: pagina_freguesiaOrderByRelationAggregateInput
    pedido_pagina?: pedido_paginaOrderByRelationAggregateInput
    utilizador?: utilizadorOrderByRelationAggregateInput
  }

  export type moradaWhereUniqueInput = Prisma.AtLeast<{
    id_morada?: number
    AND?: moradaWhereInput | moradaWhereInput[]
    OR?: moradaWhereInput[]
    NOT?: moradaWhereInput | moradaWhereInput[]
    freguesia?: StringNullableFilter<"morada"> | string | null
    cidade?: StringFilter<"morada"> | string
    rua?: StringNullableFilter<"morada"> | string | null
    codigo_postal?: IntFilter<"morada"> | number
    pagina_freguesia?: Pagina_freguesiaListRelationFilter
    pedido_pagina?: Pedido_paginaListRelationFilter
    utilizador?: UtilizadorListRelationFilter
  }, "id_morada">

  export type moradaOrderByWithAggregationInput = {
    id_morada?: SortOrder
    freguesia?: SortOrderInput | SortOrder
    cidade?: SortOrder
    rua?: SortOrderInput | SortOrder
    codigo_postal?: SortOrder
    _count?: moradaCountOrderByAggregateInput
    _avg?: moradaAvgOrderByAggregateInput
    _max?: moradaMaxOrderByAggregateInput
    _min?: moradaMinOrderByAggregateInput
    _sum?: moradaSumOrderByAggregateInput
  }

  export type moradaScalarWhereWithAggregatesInput = {
    AND?: moradaScalarWhereWithAggregatesInput | moradaScalarWhereWithAggregatesInput[]
    OR?: moradaScalarWhereWithAggregatesInput[]
    NOT?: moradaScalarWhereWithAggregatesInput | moradaScalarWhereWithAggregatesInput[]
    id_morada?: IntWithAggregatesFilter<"morada"> | number
    freguesia?: StringNullableWithAggregatesFilter<"morada"> | string | null
    cidade?: StringWithAggregatesFilter<"morada"> | string
    rua?: StringNullableWithAggregatesFilter<"morada"> | string | null
    codigo_postal?: IntWithAggregatesFilter<"morada"> | number
  }

  export type pagina_freguesiaWhereInput = {
    AND?: pagina_freguesiaWhereInput | pagina_freguesiaWhereInput[]
    OR?: pagina_freguesiaWhereInput[]
    NOT?: pagina_freguesiaWhereInput | pagina_freguesiaWhereInput[]
    id_pagina?: IntFilter<"pagina_freguesia"> | number
    id_morada?: IntFilter<"pagina_freguesia"> | number
    id_utilizador?: IntNullableFilter<"pagina_freguesia"> | number | null
    nome_pagina?: StringFilter<"pagina_freguesia"> | string
    descricao?: StringNullableFilter<"pagina_freguesia"> | string | null
    foto_perfil?: StringNullableFilter<"pagina_freguesia"> | string | null
    foto_capa?: StringNullableFilter<"pagina_freguesia"> | string | null
    moderador_pagina?: Moderador_paginaListRelationFilter
    notificacao?: NotificacaoListRelationFilter
    morada?: XOR<MoradaNullableScalarRelationFilter, moradaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
    post?: PostListRelationFilter
    seguidores_pagina?: Seguidores_paginaListRelationFilter
    ticket?: TicketListRelationFilter
  }

  export type pagina_freguesiaOrderByWithRelationInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    nome_pagina?: SortOrder
    descricao?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    foto_capa?: SortOrderInput | SortOrder
    moderador_pagina?: moderador_paginaOrderByRelationAggregateInput
    notificacao?: notificacaoOrderByRelationAggregateInput
    morada?: moradaOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
    post?: postOrderByRelationAggregateInput
    seguidores_pagina?: seguidores_paginaOrderByRelationAggregateInput
    ticket?: ticketOrderByRelationAggregateInput
  }

  export type pagina_freguesiaWhereUniqueInput = Prisma.AtLeast<{
    id_pagina?: number
    AND?: pagina_freguesiaWhereInput | pagina_freguesiaWhereInput[]
    OR?: pagina_freguesiaWhereInput[]
    NOT?: pagina_freguesiaWhereInput | pagina_freguesiaWhereInput[]
    id_morada?: IntFilter<"pagina_freguesia"> | number
    id_utilizador?: IntNullableFilter<"pagina_freguesia"> | number | null
    nome_pagina?: StringFilter<"pagina_freguesia"> | string
    descricao?: StringNullableFilter<"pagina_freguesia"> | string | null
    foto_perfil?: StringNullableFilter<"pagina_freguesia"> | string | null
    foto_capa?: StringNullableFilter<"pagina_freguesia"> | string | null
    moderador_pagina?: Moderador_paginaListRelationFilter
    notificacao?: NotificacaoListRelationFilter
    morada?: XOR<MoradaNullableScalarRelationFilter, moradaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
    post?: PostListRelationFilter
    seguidores_pagina?: Seguidores_paginaListRelationFilter
    ticket?: TicketListRelationFilter
  }, "id_pagina">

  export type pagina_freguesiaOrderByWithAggregationInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    nome_pagina?: SortOrder
    descricao?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    foto_capa?: SortOrderInput | SortOrder
    _count?: pagina_freguesiaCountOrderByAggregateInput
    _avg?: pagina_freguesiaAvgOrderByAggregateInput
    _max?: pagina_freguesiaMaxOrderByAggregateInput
    _min?: pagina_freguesiaMinOrderByAggregateInput
    _sum?: pagina_freguesiaSumOrderByAggregateInput
  }

  export type pagina_freguesiaScalarWhereWithAggregatesInput = {
    AND?: pagina_freguesiaScalarWhereWithAggregatesInput | pagina_freguesiaScalarWhereWithAggregatesInput[]
    OR?: pagina_freguesiaScalarWhereWithAggregatesInput[]
    NOT?: pagina_freguesiaScalarWhereWithAggregatesInput | pagina_freguesiaScalarWhereWithAggregatesInput[]
    id_pagina?: IntWithAggregatesFilter<"pagina_freguesia"> | number
    id_morada?: IntWithAggregatesFilter<"pagina_freguesia"> | number
    id_utilizador?: IntNullableWithAggregatesFilter<"pagina_freguesia"> | number | null
    nome_pagina?: StringWithAggregatesFilter<"pagina_freguesia"> | string
    descricao?: StringNullableWithAggregatesFilter<"pagina_freguesia"> | string | null
    foto_perfil?: StringNullableWithAggregatesFilter<"pagina_freguesia"> | string | null
    foto_capa?: StringNullableWithAggregatesFilter<"pagina_freguesia"> | string | null
  }

  export type pedido_paginaWhereInput = {
    AND?: pedido_paginaWhereInput | pedido_paginaWhereInput[]
    OR?: pedido_paginaWhereInput[]
    NOT?: pedido_paginaWhereInput | pedido_paginaWhereInput[]
    id_pedido?: IntFilter<"pedido_pagina"> | number
    id_utilizador?: IntFilter<"pedido_pagina"> | number
    id_morada?: IntFilter<"pedido_pagina"> | number
    dados_comprovacao?: StringFilter<"pedido_pagina"> | string
    estado_pedido?: Enumestado_pedidoFilter<"pedido_pagina"> | $Enums.estado_pedido
    data_pedido?: DateTimeNullableFilter<"pedido_pagina"> | Date | string | null
    morada?: XOR<MoradaNullableScalarRelationFilter, moradaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type pedido_paginaOrderByWithRelationInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    dados_comprovacao?: SortOrder
    estado_pedido?: SortOrder
    data_pedido?: SortOrderInput | SortOrder
    morada?: moradaOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type pedido_paginaWhereUniqueInput = Prisma.AtLeast<{
    id_pedido?: number
    AND?: pedido_paginaWhereInput | pedido_paginaWhereInput[]
    OR?: pedido_paginaWhereInput[]
    NOT?: pedido_paginaWhereInput | pedido_paginaWhereInput[]
    id_utilizador?: IntFilter<"pedido_pagina"> | number
    id_morada?: IntFilter<"pedido_pagina"> | number
    dados_comprovacao?: StringFilter<"pedido_pagina"> | string
    estado_pedido?: Enumestado_pedidoFilter<"pedido_pagina"> | $Enums.estado_pedido
    data_pedido?: DateTimeNullableFilter<"pedido_pagina"> | Date | string | null
    morada?: XOR<MoradaNullableScalarRelationFilter, moradaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_pedido">

  export type pedido_paginaOrderByWithAggregationInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    dados_comprovacao?: SortOrder
    estado_pedido?: SortOrder
    data_pedido?: SortOrderInput | SortOrder
    _count?: pedido_paginaCountOrderByAggregateInput
    _avg?: pedido_paginaAvgOrderByAggregateInput
    _max?: pedido_paginaMaxOrderByAggregateInput
    _min?: pedido_paginaMinOrderByAggregateInput
    _sum?: pedido_paginaSumOrderByAggregateInput
  }

  export type pedido_paginaScalarWhereWithAggregatesInput = {
    AND?: pedido_paginaScalarWhereWithAggregatesInput | pedido_paginaScalarWhereWithAggregatesInput[]
    OR?: pedido_paginaScalarWhereWithAggregatesInput[]
    NOT?: pedido_paginaScalarWhereWithAggregatesInput | pedido_paginaScalarWhereWithAggregatesInput[]
    id_pedido?: IntWithAggregatesFilter<"pedido_pagina"> | number
    id_utilizador?: IntWithAggregatesFilter<"pedido_pagina"> | number
    id_morada?: IntWithAggregatesFilter<"pedido_pagina"> | number
    dados_comprovacao?: StringWithAggregatesFilter<"pedido_pagina"> | string
    estado_pedido?: Enumestado_pedidoWithAggregatesFilter<"pedido_pagina"> | $Enums.estado_pedido
    data_pedido?: DateTimeNullableWithAggregatesFilter<"pedido_pagina"> | Date | string | null
  }

  export type perfilWhereInput = {
    AND?: perfilWhereInput | perfilWhereInput[]
    OR?: perfilWhereInput[]
    NOT?: perfilWhereInput | perfilWhereInput[]
    id_perfil?: IntFilter<"perfil"> | number
    id_utilizador?: IntFilter<"perfil"> | number
    foto_perfil?: StringNullableFilter<"perfil"> | string | null
    foto_capa?: StringNullableFilter<"perfil"> | string | null
    biografia?: StringNullableFilter<"perfil"> | string | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type perfilOrderByWithRelationInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    foto_capa?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type perfilWhereUniqueInput = Prisma.AtLeast<{
    id_perfil?: number
    AND?: perfilWhereInput | perfilWhereInput[]
    OR?: perfilWhereInput[]
    NOT?: perfilWhereInput | perfilWhereInput[]
    id_utilizador?: IntFilter<"perfil"> | number
    foto_perfil?: StringNullableFilter<"perfil"> | string | null
    foto_capa?: StringNullableFilter<"perfil"> | string | null
    biografia?: StringNullableFilter<"perfil"> | string | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_perfil">

  export type perfilOrderByWithAggregationInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    foto_capa?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    _count?: perfilCountOrderByAggregateInput
    _avg?: perfilAvgOrderByAggregateInput
    _max?: perfilMaxOrderByAggregateInput
    _min?: perfilMinOrderByAggregateInput
    _sum?: perfilSumOrderByAggregateInput
  }

  export type perfilScalarWhereWithAggregatesInput = {
    AND?: perfilScalarWhereWithAggregatesInput | perfilScalarWhereWithAggregatesInput[]
    OR?: perfilScalarWhereWithAggregatesInput[]
    NOT?: perfilScalarWhereWithAggregatesInput | perfilScalarWhereWithAggregatesInput[]
    id_perfil?: IntWithAggregatesFilter<"perfil"> | number
    id_utilizador?: IntWithAggregatesFilter<"perfil"> | number
    foto_perfil?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    foto_capa?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    biografia?: StringNullableWithAggregatesFilter<"perfil"> | string | null
  }

  export type postWhereInput = {
    AND?: postWhereInput | postWhereInput[]
    OR?: postWhereInput[]
    NOT?: postWhereInput | postWhereInput[]
    id_post?: IntFilter<"post"> | number
    id_utilizador?: IntFilter<"post"> | number
    id_pagina?: IntFilter<"post"> | number
    descricao_post?: StringNullableFilter<"post"> | string | null
    media_post?: StringNullableFilter<"post"> | string | null
    estado_post?: Enumestado_postFilter<"post"> | $Enums.estado_post
    aprovacoes?: IntNullableFilter<"post"> | number | null
    comentario?: ComentarioListRelationFilter
    notificacao?: NotificacaoListRelationFilter
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type postOrderByWithRelationInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    descricao_post?: SortOrderInput | SortOrder
    media_post?: SortOrderInput | SortOrder
    estado_post?: SortOrder
    aprovacoes?: SortOrderInput | SortOrder
    comentario?: comentarioOrderByRelationAggregateInput
    notificacao?: notificacaoOrderByRelationAggregateInput
    pagina_freguesia?: pagina_freguesiaOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type postWhereUniqueInput = Prisma.AtLeast<{
    id_post?: number
    AND?: postWhereInput | postWhereInput[]
    OR?: postWhereInput[]
    NOT?: postWhereInput | postWhereInput[]
    id_utilizador?: IntFilter<"post"> | number
    id_pagina?: IntFilter<"post"> | number
    descricao_post?: StringNullableFilter<"post"> | string | null
    media_post?: StringNullableFilter<"post"> | string | null
    estado_post?: Enumestado_postFilter<"post"> | $Enums.estado_post
    aprovacoes?: IntNullableFilter<"post"> | number | null
    comentario?: ComentarioListRelationFilter
    notificacao?: NotificacaoListRelationFilter
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_post">

  export type postOrderByWithAggregationInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    descricao_post?: SortOrderInput | SortOrder
    media_post?: SortOrderInput | SortOrder
    estado_post?: SortOrder
    aprovacoes?: SortOrderInput | SortOrder
    _count?: postCountOrderByAggregateInput
    _avg?: postAvgOrderByAggregateInput
    _max?: postMaxOrderByAggregateInput
    _min?: postMinOrderByAggregateInput
    _sum?: postSumOrderByAggregateInput
  }

  export type postScalarWhereWithAggregatesInput = {
    AND?: postScalarWhereWithAggregatesInput | postScalarWhereWithAggregatesInput[]
    OR?: postScalarWhereWithAggregatesInput[]
    NOT?: postScalarWhereWithAggregatesInput | postScalarWhereWithAggregatesInput[]
    id_post?: IntWithAggregatesFilter<"post"> | number
    id_utilizador?: IntWithAggregatesFilter<"post"> | number
    id_pagina?: IntWithAggregatesFilter<"post"> | number
    descricao_post?: StringNullableWithAggregatesFilter<"post"> | string | null
    media_post?: StringNullableWithAggregatesFilter<"post"> | string | null
    estado_post?: Enumestado_postWithAggregatesFilter<"post"> | $Enums.estado_post
    aprovacoes?: IntNullableWithAggregatesFilter<"post"> | number | null
  }

  export type resposta_ticketWhereInput = {
    AND?: resposta_ticketWhereInput | resposta_ticketWhereInput[]
    OR?: resposta_ticketWhereInput[]
    NOT?: resposta_ticketWhereInput | resposta_ticketWhereInput[]
    id_resposta?: IntFilter<"resposta_ticket"> | number
    id_ticket?: IntFilter<"resposta_ticket"> | number
    id_utilizador?: IntFilter<"resposta_ticket"> | number
    data_resposta?: DateTimeNullableFilter<"resposta_ticket"> | Date | string | null
    conteudo_resposta?: StringNullableFilter<"resposta_ticket"> | string | null
    estado_resposta?: Enumestado_respostaFilter<"resposta_ticket"> | $Enums.estado_resposta
    ticket?: XOR<TicketNullableScalarRelationFilter, ticketWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type resposta_ticketOrderByWithRelationInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    data_resposta?: SortOrderInput | SortOrder
    conteudo_resposta?: SortOrderInput | SortOrder
    estado_resposta?: SortOrder
    ticket?: ticketOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type resposta_ticketWhereUniqueInput = Prisma.AtLeast<{
    id_resposta?: number
    AND?: resposta_ticketWhereInput | resposta_ticketWhereInput[]
    OR?: resposta_ticketWhereInput[]
    NOT?: resposta_ticketWhereInput | resposta_ticketWhereInput[]
    id_ticket?: IntFilter<"resposta_ticket"> | number
    id_utilizador?: IntFilter<"resposta_ticket"> | number
    data_resposta?: DateTimeNullableFilter<"resposta_ticket"> | Date | string | null
    conteudo_resposta?: StringNullableFilter<"resposta_ticket"> | string | null
    estado_resposta?: Enumestado_respostaFilter<"resposta_ticket"> | $Enums.estado_resposta
    ticket?: XOR<TicketNullableScalarRelationFilter, ticketWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_resposta">

  export type resposta_ticketOrderByWithAggregationInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    data_resposta?: SortOrderInput | SortOrder
    conteudo_resposta?: SortOrderInput | SortOrder
    estado_resposta?: SortOrder
    _count?: resposta_ticketCountOrderByAggregateInput
    _avg?: resposta_ticketAvgOrderByAggregateInput
    _max?: resposta_ticketMaxOrderByAggregateInput
    _min?: resposta_ticketMinOrderByAggregateInput
    _sum?: resposta_ticketSumOrderByAggregateInput
  }

  export type resposta_ticketScalarWhereWithAggregatesInput = {
    AND?: resposta_ticketScalarWhereWithAggregatesInput | resposta_ticketScalarWhereWithAggregatesInput[]
    OR?: resposta_ticketScalarWhereWithAggregatesInput[]
    NOT?: resposta_ticketScalarWhereWithAggregatesInput | resposta_ticketScalarWhereWithAggregatesInput[]
    id_resposta?: IntWithAggregatesFilter<"resposta_ticket"> | number
    id_ticket?: IntWithAggregatesFilter<"resposta_ticket"> | number
    id_utilizador?: IntWithAggregatesFilter<"resposta_ticket"> | number
    data_resposta?: DateTimeNullableWithAggregatesFilter<"resposta_ticket"> | Date | string | null
    conteudo_resposta?: StringNullableWithAggregatesFilter<"resposta_ticket"> | string | null
    estado_resposta?: Enumestado_respostaWithAggregatesFilter<"resposta_ticket"> | $Enums.estado_resposta
  }

  export type seguidores_paginaWhereInput = {
    AND?: seguidores_paginaWhereInput | seguidores_paginaWhereInput[]
    OR?: seguidores_paginaWhereInput[]
    NOT?: seguidores_paginaWhereInput | seguidores_paginaWhereInput[]
    id_seguimento?: IntFilter<"seguidores_pagina"> | number
    id_utilizador?: IntFilter<"seguidores_pagina"> | number
    id_pagina?: IntFilter<"seguidores_pagina"> | number
    data_seguimento?: DateTimeNullableFilter<"seguidores_pagina"> | Date | string | null
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type seguidores_paginaOrderByWithRelationInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_seguimento?: SortOrderInput | SortOrder
    pagina_freguesia?: pagina_freguesiaOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type seguidores_paginaWhereUniqueInput = Prisma.AtLeast<{
    id_seguimento?: number
    AND?: seguidores_paginaWhereInput | seguidores_paginaWhereInput[]
    OR?: seguidores_paginaWhereInput[]
    NOT?: seguidores_paginaWhereInput | seguidores_paginaWhereInput[]
    id_utilizador?: IntFilter<"seguidores_pagina"> | number
    id_pagina?: IntFilter<"seguidores_pagina"> | number
    data_seguimento?: DateTimeNullableFilter<"seguidores_pagina"> | Date | string | null
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_seguimento">

  export type seguidores_paginaOrderByWithAggregationInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_seguimento?: SortOrderInput | SortOrder
    _count?: seguidores_paginaCountOrderByAggregateInput
    _avg?: seguidores_paginaAvgOrderByAggregateInput
    _max?: seguidores_paginaMaxOrderByAggregateInput
    _min?: seguidores_paginaMinOrderByAggregateInput
    _sum?: seguidores_paginaSumOrderByAggregateInput
  }

  export type seguidores_paginaScalarWhereWithAggregatesInput = {
    AND?: seguidores_paginaScalarWhereWithAggregatesInput | seguidores_paginaScalarWhereWithAggregatesInput[]
    OR?: seguidores_paginaScalarWhereWithAggregatesInput[]
    NOT?: seguidores_paginaScalarWhereWithAggregatesInput | seguidores_paginaScalarWhereWithAggregatesInput[]
    id_seguimento?: IntWithAggregatesFilter<"seguidores_pagina"> | number
    id_utilizador?: IntWithAggregatesFilter<"seguidores_pagina"> | number
    id_pagina?: IntWithAggregatesFilter<"seguidores_pagina"> | number
    data_seguimento?: DateTimeNullableWithAggregatesFilter<"seguidores_pagina"> | Date | string | null
  }

  export type ticketWhereInput = {
    AND?: ticketWhereInput | ticketWhereInput[]
    OR?: ticketWhereInput[]
    NOT?: ticketWhereInput | ticketWhereInput[]
    id_ticket?: IntFilter<"ticket"> | number
    id_utilizador?: IntFilter<"ticket"> | number
    id_pagina?: IntFilter<"ticket"> | number
    data_criacao?: DateTimeNullableFilter<"ticket"> | Date | string | null
    descricao_problema?: StringNullableFilter<"ticket"> | string | null
    estado_ticket?: Enumestado_ticketFilter<"ticket"> | $Enums.estado_ticket
    notificacao?: NotificacaoListRelationFilter
    resposta_ticket?: Resposta_ticketListRelationFilter
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type ticketOrderByWithRelationInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_criacao?: SortOrderInput | SortOrder
    descricao_problema?: SortOrderInput | SortOrder
    estado_ticket?: SortOrder
    notificacao?: notificacaoOrderByRelationAggregateInput
    resposta_ticket?: resposta_ticketOrderByRelationAggregateInput
    pagina_freguesia?: pagina_freguesiaOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type ticketWhereUniqueInput = Prisma.AtLeast<{
    id_ticket?: number
    AND?: ticketWhereInput | ticketWhereInput[]
    OR?: ticketWhereInput[]
    NOT?: ticketWhereInput | ticketWhereInput[]
    id_utilizador?: IntFilter<"ticket"> | number
    id_pagina?: IntFilter<"ticket"> | number
    data_criacao?: DateTimeNullableFilter<"ticket"> | Date | string | null
    descricao_problema?: StringNullableFilter<"ticket"> | string | null
    estado_ticket?: Enumestado_ticketFilter<"ticket"> | $Enums.estado_ticket
    notificacao?: NotificacaoListRelationFilter
    resposta_ticket?: Resposta_ticketListRelationFilter
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_ticket">

  export type ticketOrderByWithAggregationInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_criacao?: SortOrderInput | SortOrder
    descricao_problema?: SortOrderInput | SortOrder
    estado_ticket?: SortOrder
    _count?: ticketCountOrderByAggregateInput
    _avg?: ticketAvgOrderByAggregateInput
    _max?: ticketMaxOrderByAggregateInput
    _min?: ticketMinOrderByAggregateInput
    _sum?: ticketSumOrderByAggregateInput
  }

  export type ticketScalarWhereWithAggregatesInput = {
    AND?: ticketScalarWhereWithAggregatesInput | ticketScalarWhereWithAggregatesInput[]
    OR?: ticketScalarWhereWithAggregatesInput[]
    NOT?: ticketScalarWhereWithAggregatesInput | ticketScalarWhereWithAggregatesInput[]
    id_ticket?: IntWithAggregatesFilter<"ticket"> | number
    id_utilizador?: IntWithAggregatesFilter<"ticket"> | number
    id_pagina?: IntWithAggregatesFilter<"ticket"> | number
    data_criacao?: DateTimeNullableWithAggregatesFilter<"ticket"> | Date | string | null
    descricao_problema?: StringNullableWithAggregatesFilter<"ticket"> | string | null
    estado_ticket?: Enumestado_ticketWithAggregatesFilter<"ticket"> | $Enums.estado_ticket
  }

  export type utilizadorWhereInput = {
    AND?: utilizadorWhereInput | utilizadorWhereInput[]
    OR?: utilizadorWhereInput[]
    NOT?: utilizadorWhereInput | utilizadorWhereInput[]
    id_utilizador?: IntFilter<"utilizador"> | number
    id_morada?: IntNullableFilter<"utilizador"> | number | null
    nome?: StringFilter<"utilizador"> | string
    password?: StringFilter<"utilizador"> | string
    email?: StringFilter<"utilizador"> | string
    data_nascimento?: DateTimeFilter<"utilizador"> | Date | string
    contacto?: StringNullableFilter<"utilizador"> | string | null
    tipo_utilizador?: Enumtipo_utilizadorFilter<"utilizador"> | $Enums.tipo_utilizador
    comentario?: ComentarioListRelationFilter
    moderador_pagina?: Moderador_paginaListRelationFilter
    notificacao?: NotificacaoListRelationFilter
    pagina_freguesia?: Pagina_freguesiaListRelationFilter
    pedido_pagina?: Pedido_paginaListRelationFilter
    perfil?: PerfilListRelationFilter
    post?: PostListRelationFilter
    resposta_ticket?: Resposta_ticketListRelationFilter
    seguidores_pagina?: Seguidores_paginaListRelationFilter
    ticket?: TicketListRelationFilter
    morada?: XOR<MoradaNullableScalarRelationFilter, moradaWhereInput> | null
  }

  export type utilizadorOrderByWithRelationInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrderInput | SortOrder
    nome?: SortOrder
    password?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    contacto?: SortOrderInput | SortOrder
    tipo_utilizador?: SortOrder
    comentario?: comentarioOrderByRelationAggregateInput
    moderador_pagina?: moderador_paginaOrderByRelationAggregateInput
    notificacao?: notificacaoOrderByRelationAggregateInput
    pagina_freguesia?: pagina_freguesiaOrderByRelationAggregateInput
    pedido_pagina?: pedido_paginaOrderByRelationAggregateInput
    perfil?: perfilOrderByRelationAggregateInput
    post?: postOrderByRelationAggregateInput
    resposta_ticket?: resposta_ticketOrderByRelationAggregateInput
    seguidores_pagina?: seguidores_paginaOrderByRelationAggregateInput
    ticket?: ticketOrderByRelationAggregateInput
    morada?: moradaOrderByWithRelationInput
  }

  export type utilizadorWhereUniqueInput = Prisma.AtLeast<{
    id_utilizador?: number
    email?: string
    AND?: utilizadorWhereInput | utilizadorWhereInput[]
    OR?: utilizadorWhereInput[]
    NOT?: utilizadorWhereInput | utilizadorWhereInput[]
    id_morada?: IntNullableFilter<"utilizador"> | number | null
    nome?: StringFilter<"utilizador"> | string
    password?: StringFilter<"utilizador"> | string
    data_nascimento?: DateTimeFilter<"utilizador"> | Date | string
    contacto?: StringNullableFilter<"utilizador"> | string | null
    tipo_utilizador?: Enumtipo_utilizadorFilter<"utilizador"> | $Enums.tipo_utilizador
    comentario?: ComentarioListRelationFilter
    moderador_pagina?: Moderador_paginaListRelationFilter
    notificacao?: NotificacaoListRelationFilter
    pagina_freguesia?: Pagina_freguesiaListRelationFilter
    pedido_pagina?: Pedido_paginaListRelationFilter
    perfil?: PerfilListRelationFilter
    post?: PostListRelationFilter
    resposta_ticket?: Resposta_ticketListRelationFilter
    seguidores_pagina?: Seguidores_paginaListRelationFilter
    ticket?: TicketListRelationFilter
    morada?: XOR<MoradaNullableScalarRelationFilter, moradaWhereInput> | null
  }, "id_utilizador" | "email">

  export type utilizadorOrderByWithAggregationInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrderInput | SortOrder
    nome?: SortOrder
    password?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    contacto?: SortOrderInput | SortOrder
    tipo_utilizador?: SortOrder
    _count?: utilizadorCountOrderByAggregateInput
    _avg?: utilizadorAvgOrderByAggregateInput
    _max?: utilizadorMaxOrderByAggregateInput
    _min?: utilizadorMinOrderByAggregateInput
    _sum?: utilizadorSumOrderByAggregateInput
  }

  export type utilizadorScalarWhereWithAggregatesInput = {
    AND?: utilizadorScalarWhereWithAggregatesInput | utilizadorScalarWhereWithAggregatesInput[]
    OR?: utilizadorScalarWhereWithAggregatesInput[]
    NOT?: utilizadorScalarWhereWithAggregatesInput | utilizadorScalarWhereWithAggregatesInput[]
    id_utilizador?: IntWithAggregatesFilter<"utilizador"> | number
    id_morada?: IntNullableWithAggregatesFilter<"utilizador"> | number | null
    nome?: StringWithAggregatesFilter<"utilizador"> | string
    password?: StringWithAggregatesFilter<"utilizador"> | string
    email?: StringWithAggregatesFilter<"utilizador"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"utilizador"> | Date | string
    contacto?: StringNullableWithAggregatesFilter<"utilizador"> | string | null
    tipo_utilizador?: Enumtipo_utilizadorWithAggregatesFilter<"utilizador"> | $Enums.tipo_utilizador
  }

  export type notificacaoWhereInput = {
    AND?: notificacaoWhereInput | notificacaoWhereInput[]
    OR?: notificacaoWhereInput[]
    NOT?: notificacaoWhereInput | notificacaoWhereInput[]
    id_notificacao?: IntFilter<"notificacao"> | number
    id_utilizador?: IntNullableFilter<"notificacao"> | number | null
    id_pagina?: IntNullableFilter<"notificacao"> | number | null
    tipo_notificacao?: Enumtipo_notificacaoFilter<"notificacao"> | $Enums.tipo_notificacao
    id_post?: IntNullableFilter<"notificacao"> | number | null
    id_ticket?: IntNullableFilter<"notificacao"> | number | null
    data?: DateTimeNullableFilter<"notificacao"> | Date | string | null
    conteudo_notificacao?: StringNullableFilter<"notificacao"> | string | null
    estado_notificacao?: Enumestado_notificacaoFilter<"notificacao"> | $Enums.estado_notificacao
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    post?: XOR<PostNullableScalarRelationFilter, postWhereInput> | null
    ticket?: XOR<TicketNullableScalarRelationFilter, ticketWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }

  export type notificacaoOrderByWithRelationInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    id_pagina?: SortOrderInput | SortOrder
    tipo_notificacao?: SortOrder
    id_post?: SortOrderInput | SortOrder
    id_ticket?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    conteudo_notificacao?: SortOrderInput | SortOrder
    estado_notificacao?: SortOrder
    pagina_freguesia?: pagina_freguesiaOrderByWithRelationInput
    post?: postOrderByWithRelationInput
    ticket?: ticketOrderByWithRelationInput
    utilizador?: utilizadorOrderByWithRelationInput
  }

  export type notificacaoWhereUniqueInput = Prisma.AtLeast<{
    id_notificacao?: number
    AND?: notificacaoWhereInput | notificacaoWhereInput[]
    OR?: notificacaoWhereInput[]
    NOT?: notificacaoWhereInput | notificacaoWhereInput[]
    id_utilizador?: IntNullableFilter<"notificacao"> | number | null
    id_pagina?: IntNullableFilter<"notificacao"> | number | null
    tipo_notificacao?: Enumtipo_notificacaoFilter<"notificacao"> | $Enums.tipo_notificacao
    id_post?: IntNullableFilter<"notificacao"> | number | null
    id_ticket?: IntNullableFilter<"notificacao"> | number | null
    data?: DateTimeNullableFilter<"notificacao"> | Date | string | null
    conteudo_notificacao?: StringNullableFilter<"notificacao"> | string | null
    estado_notificacao?: Enumestado_notificacaoFilter<"notificacao"> | $Enums.estado_notificacao
    pagina_freguesia?: XOR<Pagina_freguesiaNullableScalarRelationFilter, pagina_freguesiaWhereInput> | null
    post?: XOR<PostNullableScalarRelationFilter, postWhereInput> | null
    ticket?: XOR<TicketNullableScalarRelationFilter, ticketWhereInput> | null
    utilizador?: XOR<UtilizadorNullableScalarRelationFilter, utilizadorWhereInput> | null
  }, "id_notificacao">

  export type notificacaoOrderByWithAggregationInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    id_pagina?: SortOrderInput | SortOrder
    tipo_notificacao?: SortOrder
    id_post?: SortOrderInput | SortOrder
    id_ticket?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    conteudo_notificacao?: SortOrderInput | SortOrder
    estado_notificacao?: SortOrder
    _count?: notificacaoCountOrderByAggregateInput
    _avg?: notificacaoAvgOrderByAggregateInput
    _max?: notificacaoMaxOrderByAggregateInput
    _min?: notificacaoMinOrderByAggregateInput
    _sum?: notificacaoSumOrderByAggregateInput
  }

  export type notificacaoScalarWhereWithAggregatesInput = {
    AND?: notificacaoScalarWhereWithAggregatesInput | notificacaoScalarWhereWithAggregatesInput[]
    OR?: notificacaoScalarWhereWithAggregatesInput[]
    NOT?: notificacaoScalarWhereWithAggregatesInput | notificacaoScalarWhereWithAggregatesInput[]
    id_notificacao?: IntWithAggregatesFilter<"notificacao"> | number
    id_utilizador?: IntNullableWithAggregatesFilter<"notificacao"> | number | null
    id_pagina?: IntNullableWithAggregatesFilter<"notificacao"> | number | null
    tipo_notificacao?: Enumtipo_notificacaoWithAggregatesFilter<"notificacao"> | $Enums.tipo_notificacao
    id_post?: IntNullableWithAggregatesFilter<"notificacao"> | number | null
    id_ticket?: IntNullableWithAggregatesFilter<"notificacao"> | number | null
    data?: DateTimeNullableWithAggregatesFilter<"notificacao"> | Date | string | null
    conteudo_notificacao?: StringNullableWithAggregatesFilter<"notificacao"> | string | null
    estado_notificacao?: Enumestado_notificacaoWithAggregatesFilter<"notificacao"> | $Enums.estado_notificacao
  }

  export type comentarioCreateInput = {
    conteudo_comentario: string
    data_comentario?: Date | string | null
    post?: postCreateNestedOneWithoutComentarioInput
    utilizador?: utilizadorCreateNestedOneWithoutComentarioInput
  }

  export type comentarioUncheckedCreateInput = {
    id_comentario?: number
    id_post: number
    id_utilizador: number
    conteudo_comentario: string
    data_comentario?: Date | string | null
  }

  export type comentarioUpdateInput = {
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: postUpdateOneWithoutComentarioNestedInput
    utilizador?: utilizadorUpdateOneWithoutComentarioNestedInput
  }

  export type comentarioUncheckedUpdateInput = {
    id_comentario?: IntFieldUpdateOperationsInput | number
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comentarioCreateManyInput = {
    id_comentario?: number
    id_post: number
    id_utilizador: number
    conteudo_comentario: string
    data_comentario?: Date | string | null
  }

  export type comentarioUpdateManyMutationInput = {
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comentarioUncheckedUpdateManyInput = {
    id_comentario?: IntFieldUpdateOperationsInput | number
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type moderador_paginaCreateInput = {
    funcao: $Enums.funcao_moderador
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutModerador_paginaInput
    utilizador?: utilizadorCreateNestedOneWithoutModerador_paginaInput
  }

  export type moderador_paginaUncheckedCreateInput = {
    id_moderador?: number
    id_pagina?: number | null
    id_utilizador?: number | null
    funcao: $Enums.funcao_moderador
  }

  export type moderador_paginaUpdateInput = {
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutModerador_paginaNestedInput
    utilizador?: utilizadorUpdateOneWithoutModerador_paginaNestedInput
  }

  export type moderador_paginaUncheckedUpdateInput = {
    id_moderador?: IntFieldUpdateOperationsInput | number
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type moderador_paginaCreateManyInput = {
    id_moderador?: number
    id_pagina?: number | null
    id_utilizador?: number | null
    funcao: $Enums.funcao_moderador
  }

  export type moderador_paginaUpdateManyMutationInput = {
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type moderador_paginaUncheckedUpdateManyInput = {
    id_moderador?: IntFieldUpdateOperationsInput | number
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type moradaCreateInput = {
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutMoradaInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutMoradaInput
    utilizador?: utilizadorCreateNestedManyWithoutMoradaInput
  }

  export type moradaUncheckedCreateInput = {
    id_morada?: number
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutMoradaInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutMoradaInput
    utilizador?: utilizadorUncheckedCreateNestedManyWithoutMoradaInput
  }

  export type moradaUpdateInput = {
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutMoradaNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutMoradaNestedInput
    utilizador?: utilizadorUpdateManyWithoutMoradaNestedInput
  }

  export type moradaUncheckedUpdateInput = {
    id_morada?: IntFieldUpdateOperationsInput | number
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutMoradaNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutMoradaNestedInput
    utilizador?: utilizadorUncheckedUpdateManyWithoutMoradaNestedInput
  }

  export type moradaCreateManyInput = {
    id_morada?: number
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
  }

  export type moradaUpdateManyMutationInput = {
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
  }

  export type moradaUncheckedUpdateManyInput = {
    id_morada?: IntFieldUpdateOperationsInput | number
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
  }

  export type pagina_freguesiaCreateInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUpdateInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaCreateManyInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
  }

  export type pagina_freguesiaUpdateManyMutationInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pagina_freguesiaUncheckedUpdateManyInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pedido_paginaCreateInput = {
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
    morada?: moradaCreateNestedOneWithoutPedido_paginaInput
    utilizador?: utilizadorCreateNestedOneWithoutPedido_paginaInput
  }

  export type pedido_paginaUncheckedCreateInput = {
    id_pedido?: number
    id_utilizador: number
    id_morada: number
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
  }

  export type pedido_paginaUpdateInput = {
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    morada?: moradaUpdateOneWithoutPedido_paginaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPedido_paginaNestedInput
  }

  export type pedido_paginaUncheckedUpdateInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pedido_paginaCreateManyInput = {
    id_pedido?: number
    id_utilizador: number
    id_morada: number
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
  }

  export type pedido_paginaUpdateManyMutationInput = {
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pedido_paginaUncheckedUpdateManyInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type perfilCreateInput = {
    foto_perfil?: string | null
    foto_capa?: string | null
    biografia?: string | null
    utilizador?: utilizadorCreateNestedOneWithoutPerfilInput
  }

  export type perfilUncheckedCreateInput = {
    id_perfil?: number
    id_utilizador: number
    foto_perfil?: string | null
    foto_capa?: string | null
    biografia?: string | null
  }

  export type perfilUpdateInput = {
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    utilizador?: utilizadorUpdateOneWithoutPerfilNestedInput
  }

  export type perfilUncheckedUpdateInput = {
    id_perfil?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type perfilCreateManyInput = {
    id_perfil?: number
    id_utilizador: number
    foto_perfil?: string | null
    foto_capa?: string | null
    biografia?: string | null
  }

  export type perfilUpdateManyMutationInput = {
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type perfilUncheckedUpdateManyInput = {
    id_perfil?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type postCreateInput = {
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioCreateNestedManyWithoutPostInput
    notificacao?: notificacaoCreateNestedManyWithoutPostInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutPostInput
    utilizador?: utilizadorCreateNestedOneWithoutPostInput
  }

  export type postUncheckedCreateInput = {
    id_post?: number
    id_utilizador: number
    id_pagina: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioUncheckedCreateNestedManyWithoutPostInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPostInput
  }

  export type postUpdateInput = {
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUpdateManyWithoutPostNestedInput
    notificacao?: notificacaoUpdateManyWithoutPostNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutPostNestedInput
    utilizador?: utilizadorUpdateOneWithoutPostNestedInput
  }

  export type postUncheckedUpdateInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUncheckedUpdateManyWithoutPostNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postCreateManyInput = {
    id_post?: number
    id_utilizador: number
    id_pagina: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
  }

  export type postUpdateManyMutationInput = {
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type postUncheckedUpdateManyInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type resposta_ticketCreateInput = {
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
    ticket?: ticketCreateNestedOneWithoutResposta_ticketInput
    utilizador?: utilizadorCreateNestedOneWithoutResposta_ticketInput
  }

  export type resposta_ticketUncheckedCreateInput = {
    id_resposta?: number
    id_ticket: number
    id_utilizador: number
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
  }

  export type resposta_ticketUpdateInput = {
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
    ticket?: ticketUpdateOneWithoutResposta_ticketNestedInput
    utilizador?: utilizadorUpdateOneWithoutResposta_ticketNestedInput
  }

  export type resposta_ticketUncheckedUpdateInput = {
    id_resposta?: IntFieldUpdateOperationsInput | number
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type resposta_ticketCreateManyInput = {
    id_resposta?: number
    id_ticket: number
    id_utilizador: number
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
  }

  export type resposta_ticketUpdateManyMutationInput = {
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type resposta_ticketUncheckedUpdateManyInput = {
    id_resposta?: IntFieldUpdateOperationsInput | number
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type seguidores_paginaCreateInput = {
    data_seguimento?: Date | string | null
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutSeguidores_paginaInput
    utilizador?: utilizadorCreateNestedOneWithoutSeguidores_paginaInput
  }

  export type seguidores_paginaUncheckedCreateInput = {
    id_seguimento?: number
    id_utilizador: number
    id_pagina: number
    data_seguimento?: Date | string | null
  }

  export type seguidores_paginaUpdateInput = {
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutSeguidores_paginaNestedInput
    utilizador?: utilizadorUpdateOneWithoutSeguidores_paginaNestedInput
  }

  export type seguidores_paginaUncheckedUpdateInput = {
    id_seguimento?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type seguidores_paginaCreateManyInput = {
    id_seguimento?: number
    id_utilizador: number
    id_pagina: number
    data_seguimento?: Date | string | null
  }

  export type seguidores_paginaUpdateManyMutationInput = {
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type seguidores_paginaUncheckedUpdateManyInput = {
    id_seguimento?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ticketCreateInput = {
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoCreateNestedManyWithoutTicketInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutTicketInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutTicketInput
    utilizador?: utilizadorCreateNestedOneWithoutTicketInput
  }

  export type ticketUncheckedCreateInput = {
    id_ticket?: number
    id_utilizador: number
    id_pagina: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutTicketInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutTicketInput
  }

  export type ticketUpdateInput = {
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUpdateManyWithoutTicketNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutTicketNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutTicketNestedInput
    utilizador?: utilizadorUpdateOneWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUncheckedUpdateManyWithoutTicketNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type ticketCreateManyInput = {
    id_ticket?: number
    id_utilizador: number
    id_pagina: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
  }

  export type ticketUpdateManyMutationInput = {
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
  }

  export type ticketUncheckedUpdateManyInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
  }

  export type utilizadorCreateInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type utilizadorCreateManyInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
  }

  export type utilizadorUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
  }

  export type utilizadorUncheckedUpdateManyInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
  }

  export type notificacaoCreateInput = {
    tipo_notificacao: $Enums.tipo_notificacao
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutNotificacaoInput
    post?: postCreateNestedOneWithoutNotificacaoInput
    ticket?: ticketCreateNestedOneWithoutNotificacaoInput
    utilizador?: utilizadorCreateNestedOneWithoutNotificacaoInput
  }

  export type notificacaoUncheckedCreateInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type notificacaoUpdateInput = {
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutNotificacaoNestedInput
    post?: postUpdateOneWithoutNotificacaoNestedInput
    ticket?: ticketUpdateOneWithoutNotificacaoNestedInput
    utilizador?: utilizadorUpdateOneWithoutNotificacaoNestedInput
  }

  export type notificacaoUncheckedUpdateInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoCreateManyInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type notificacaoUpdateManyMutationInput = {
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoUncheckedUpdateManyInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type PostNullableScalarRelationFilter = {
    is?: postWhereInput | null
    isNot?: postWhereInput | null
  }

  export type UtilizadorNullableScalarRelationFilter = {
    is?: utilizadorWhereInput | null
    isNot?: utilizadorWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type comentarioCountOrderByAggregateInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
    conteudo_comentario?: SortOrder
    data_comentario?: SortOrder
  }

  export type comentarioAvgOrderByAggregateInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
  }

  export type comentarioMaxOrderByAggregateInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
    conteudo_comentario?: SortOrder
    data_comentario?: SortOrder
  }

  export type comentarioMinOrderByAggregateInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
    conteudo_comentario?: SortOrder
    data_comentario?: SortOrder
  }

  export type comentarioSumOrderByAggregateInput = {
    id_comentario?: SortOrder
    id_post?: SortOrder
    id_utilizador?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Enumfuncao_moderadorFilter<$PrismaModel = never> = {
    equals?: $Enums.funcao_moderador | Enumfuncao_moderadorFieldRefInput<$PrismaModel>
    in?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    not?: NestedEnumfuncao_moderadorFilter<$PrismaModel> | $Enums.funcao_moderador
  }

  export type Pagina_freguesiaNullableScalarRelationFilter = {
    is?: pagina_freguesiaWhereInput | null
    isNot?: pagina_freguesiaWhereInput | null
  }

  export type moderador_paginaCountOrderByAggregateInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrder
    id_utilizador?: SortOrder
    funcao?: SortOrder
  }

  export type moderador_paginaAvgOrderByAggregateInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type moderador_paginaMaxOrderByAggregateInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrder
    id_utilizador?: SortOrder
    funcao?: SortOrder
  }

  export type moderador_paginaMinOrderByAggregateInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrder
    id_utilizador?: SortOrder
    funcao?: SortOrder
  }

  export type moderador_paginaSumOrderByAggregateInput = {
    id_moderador?: SortOrder
    id_pagina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Enumfuncao_moderadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.funcao_moderador | Enumfuncao_moderadorFieldRefInput<$PrismaModel>
    in?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    not?: NestedEnumfuncao_moderadorWithAggregatesFilter<$PrismaModel> | $Enums.funcao_moderador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfuncao_moderadorFilter<$PrismaModel>
    _max?: NestedEnumfuncao_moderadorFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Pagina_freguesiaListRelationFilter = {
    every?: pagina_freguesiaWhereInput
    some?: pagina_freguesiaWhereInput
    none?: pagina_freguesiaWhereInput
  }

  export type Pedido_paginaListRelationFilter = {
    every?: pedido_paginaWhereInput
    some?: pedido_paginaWhereInput
    none?: pedido_paginaWhereInput
  }

  export type UtilizadorListRelationFilter = {
    every?: utilizadorWhereInput
    some?: utilizadorWhereInput
    none?: utilizadorWhereInput
  }

  export type pagina_freguesiaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pedido_paginaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type utilizadorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type moradaCountOrderByAggregateInput = {
    id_morada?: SortOrder
    freguesia?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    codigo_postal?: SortOrder
  }

  export type moradaAvgOrderByAggregateInput = {
    id_morada?: SortOrder
    codigo_postal?: SortOrder
  }

  export type moradaMaxOrderByAggregateInput = {
    id_morada?: SortOrder
    freguesia?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    codigo_postal?: SortOrder
  }

  export type moradaMinOrderByAggregateInput = {
    id_morada?: SortOrder
    freguesia?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    codigo_postal?: SortOrder
  }

  export type moradaSumOrderByAggregateInput = {
    id_morada?: SortOrder
    codigo_postal?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Moderador_paginaListRelationFilter = {
    every?: moderador_paginaWhereInput
    some?: moderador_paginaWhereInput
    none?: moderador_paginaWhereInput
  }

  export type NotificacaoListRelationFilter = {
    every?: notificacaoWhereInput
    some?: notificacaoWhereInput
    none?: notificacaoWhereInput
  }

  export type MoradaNullableScalarRelationFilter = {
    is?: moradaWhereInput | null
    isNot?: moradaWhereInput | null
  }

  export type PostListRelationFilter = {
    every?: postWhereInput
    some?: postWhereInput
    none?: postWhereInput
  }

  export type Seguidores_paginaListRelationFilter = {
    every?: seguidores_paginaWhereInput
    some?: seguidores_paginaWhereInput
    none?: seguidores_paginaWhereInput
  }

  export type TicketListRelationFilter = {
    every?: ticketWhereInput
    some?: ticketWhereInput
    none?: ticketWhereInput
  }

  export type moderador_paginaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type postOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type seguidores_paginaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ticketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pagina_freguesiaCountOrderByAggregateInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrder
    nome_pagina?: SortOrder
    descricao?: SortOrder
    foto_perfil?: SortOrder
    foto_capa?: SortOrder
  }

  export type pagina_freguesiaAvgOrderByAggregateInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrder
  }

  export type pagina_freguesiaMaxOrderByAggregateInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrder
    nome_pagina?: SortOrder
    descricao?: SortOrder
    foto_perfil?: SortOrder
    foto_capa?: SortOrder
  }

  export type pagina_freguesiaMinOrderByAggregateInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrder
    nome_pagina?: SortOrder
    descricao?: SortOrder
    foto_perfil?: SortOrder
    foto_capa?: SortOrder
  }

  export type pagina_freguesiaSumOrderByAggregateInput = {
    id_pagina?: SortOrder
    id_morada?: SortOrder
    id_utilizador?: SortOrder
  }

  export type Enumestado_pedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_pedido | Enumestado_pedidoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_pedidoFilter<$PrismaModel> | $Enums.estado_pedido
  }

  export type pedido_paginaCountOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    dados_comprovacao?: SortOrder
    estado_pedido?: SortOrder
    data_pedido?: SortOrder
  }

  export type pedido_paginaAvgOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
  }

  export type pedido_paginaMaxOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    dados_comprovacao?: SortOrder
    estado_pedido?: SortOrder
    data_pedido?: SortOrder
  }

  export type pedido_paginaMinOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    dados_comprovacao?: SortOrder
    estado_pedido?: SortOrder
    data_pedido?: SortOrder
  }

  export type pedido_paginaSumOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_utilizador?: SortOrder
    id_morada?: SortOrder
  }

  export type Enumestado_pedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_pedido | Enumestado_pedidoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_pedidoWithAggregatesFilter<$PrismaModel> | $Enums.estado_pedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_pedidoFilter<$PrismaModel>
    _max?: NestedEnumestado_pedidoFilter<$PrismaModel>
  }

  export type perfilCountOrderByAggregateInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
    foto_perfil?: SortOrder
    foto_capa?: SortOrder
    biografia?: SortOrder
  }

  export type perfilAvgOrderByAggregateInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
  }

  export type perfilMaxOrderByAggregateInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
    foto_perfil?: SortOrder
    foto_capa?: SortOrder
    biografia?: SortOrder
  }

  export type perfilMinOrderByAggregateInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
    foto_perfil?: SortOrder
    foto_capa?: SortOrder
    biografia?: SortOrder
  }

  export type perfilSumOrderByAggregateInput = {
    id_perfil?: SortOrder
    id_utilizador?: SortOrder
  }

  export type Enumestado_postFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_post | Enumestado_postFieldRefInput<$PrismaModel>
    in?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_postFilter<$PrismaModel> | $Enums.estado_post
  }

  export type ComentarioListRelationFilter = {
    every?: comentarioWhereInput
    some?: comentarioWhereInput
    none?: comentarioWhereInput
  }

  export type comentarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type postCountOrderByAggregateInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    descricao_post?: SortOrder
    media_post?: SortOrder
    estado_post?: SortOrder
    aprovacoes?: SortOrder
  }

  export type postAvgOrderByAggregateInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    aprovacoes?: SortOrder
  }

  export type postMaxOrderByAggregateInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    descricao_post?: SortOrder
    media_post?: SortOrder
    estado_post?: SortOrder
    aprovacoes?: SortOrder
  }

  export type postMinOrderByAggregateInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    descricao_post?: SortOrder
    media_post?: SortOrder
    estado_post?: SortOrder
    aprovacoes?: SortOrder
  }

  export type postSumOrderByAggregateInput = {
    id_post?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    aprovacoes?: SortOrder
  }

  export type Enumestado_postWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_post | Enumestado_postFieldRefInput<$PrismaModel>
    in?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_postWithAggregatesFilter<$PrismaModel> | $Enums.estado_post
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_postFilter<$PrismaModel>
    _max?: NestedEnumestado_postFilter<$PrismaModel>
  }

  export type Enumestado_respostaFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_resposta | Enumestado_respostaFieldRefInput<$PrismaModel>
    in?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_respostaFilter<$PrismaModel> | $Enums.estado_resposta
  }

  export type TicketNullableScalarRelationFilter = {
    is?: ticketWhereInput | null
    isNot?: ticketWhereInput | null
  }

  export type resposta_ticketCountOrderByAggregateInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    data_resposta?: SortOrder
    conteudo_resposta?: SortOrder
    estado_resposta?: SortOrder
  }

  export type resposta_ticketAvgOrderByAggregateInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
  }

  export type resposta_ticketMaxOrderByAggregateInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    data_resposta?: SortOrder
    conteudo_resposta?: SortOrder
    estado_resposta?: SortOrder
  }

  export type resposta_ticketMinOrderByAggregateInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    data_resposta?: SortOrder
    conteudo_resposta?: SortOrder
    estado_resposta?: SortOrder
  }

  export type resposta_ticketSumOrderByAggregateInput = {
    id_resposta?: SortOrder
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
  }

  export type Enumestado_respostaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_resposta | Enumestado_respostaFieldRefInput<$PrismaModel>
    in?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_respostaWithAggregatesFilter<$PrismaModel> | $Enums.estado_resposta
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_respostaFilter<$PrismaModel>
    _max?: NestedEnumestado_respostaFilter<$PrismaModel>
  }

  export type seguidores_paginaCountOrderByAggregateInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_seguimento?: SortOrder
  }

  export type seguidores_paginaAvgOrderByAggregateInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
  }

  export type seguidores_paginaMaxOrderByAggregateInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_seguimento?: SortOrder
  }

  export type seguidores_paginaMinOrderByAggregateInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_seguimento?: SortOrder
  }

  export type seguidores_paginaSumOrderByAggregateInput = {
    id_seguimento?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
  }

  export type Enumestado_ticketFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_ticket | Enumestado_ticketFieldRefInput<$PrismaModel>
    in?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_ticketFilter<$PrismaModel> | $Enums.estado_ticket
  }

  export type Resposta_ticketListRelationFilter = {
    every?: resposta_ticketWhereInput
    some?: resposta_ticketWhereInput
    none?: resposta_ticketWhereInput
  }

  export type resposta_ticketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ticketCountOrderByAggregateInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_criacao?: SortOrder
    descricao_problema?: SortOrder
    estado_ticket?: SortOrder
  }

  export type ticketAvgOrderByAggregateInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
  }

  export type ticketMaxOrderByAggregateInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_criacao?: SortOrder
    descricao_problema?: SortOrder
    estado_ticket?: SortOrder
  }

  export type ticketMinOrderByAggregateInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    data_criacao?: SortOrder
    descricao_problema?: SortOrder
    estado_ticket?: SortOrder
  }

  export type ticketSumOrderByAggregateInput = {
    id_ticket?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
  }

  export type Enumestado_ticketWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_ticket | Enumestado_ticketFieldRefInput<$PrismaModel>
    in?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_ticketWithAggregatesFilter<$PrismaModel> | $Enums.estado_ticket
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_ticketFilter<$PrismaModel>
    _max?: NestedEnumestado_ticketFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Enumtipo_utilizadorFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_utilizador | Enumtipo_utilizadorFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_utilizadorFilter<$PrismaModel> | $Enums.tipo_utilizador
  }

  export type PerfilListRelationFilter = {
    every?: perfilWhereInput
    some?: perfilWhereInput
    none?: perfilWhereInput
  }

  export type perfilOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type utilizadorCountOrderByAggregateInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    nome?: SortOrder
    password?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    contacto?: SortOrder
    tipo_utilizador?: SortOrder
  }

  export type utilizadorAvgOrderByAggregateInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrder
  }

  export type utilizadorMaxOrderByAggregateInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    nome?: SortOrder
    password?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    contacto?: SortOrder
    tipo_utilizador?: SortOrder
  }

  export type utilizadorMinOrderByAggregateInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrder
    nome?: SortOrder
    password?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    contacto?: SortOrder
    tipo_utilizador?: SortOrder
  }

  export type utilizadorSumOrderByAggregateInput = {
    id_utilizador?: SortOrder
    id_morada?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Enumtipo_utilizadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_utilizador | Enumtipo_utilizadorFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_utilizadorWithAggregatesFilter<$PrismaModel> | $Enums.tipo_utilizador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtipo_utilizadorFilter<$PrismaModel>
    _max?: NestedEnumtipo_utilizadorFilter<$PrismaModel>
  }

  export type Enumtipo_notificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_notificacao | Enumtipo_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_notificacaoFilter<$PrismaModel> | $Enums.tipo_notificacao
  }

  export type Enumestado_notificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_notificacao | Enumestado_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_notificacaoFilter<$PrismaModel> | $Enums.estado_notificacao
  }

  export type notificacaoCountOrderByAggregateInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    tipo_notificacao?: SortOrder
    id_post?: SortOrder
    id_ticket?: SortOrder
    data?: SortOrder
    conteudo_notificacao?: SortOrder
    estado_notificacao?: SortOrder
  }

  export type notificacaoAvgOrderByAggregateInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    id_post?: SortOrder
    id_ticket?: SortOrder
  }

  export type notificacaoMaxOrderByAggregateInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    tipo_notificacao?: SortOrder
    id_post?: SortOrder
    id_ticket?: SortOrder
    data?: SortOrder
    conteudo_notificacao?: SortOrder
    estado_notificacao?: SortOrder
  }

  export type notificacaoMinOrderByAggregateInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    tipo_notificacao?: SortOrder
    id_post?: SortOrder
    id_ticket?: SortOrder
    data?: SortOrder
    conteudo_notificacao?: SortOrder
    estado_notificacao?: SortOrder
  }

  export type notificacaoSumOrderByAggregateInput = {
    id_notificacao?: SortOrder
    id_utilizador?: SortOrder
    id_pagina?: SortOrder
    id_post?: SortOrder
    id_ticket?: SortOrder
  }

  export type Enumtipo_notificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_notificacao | Enumtipo_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_notificacaoWithAggregatesFilter<$PrismaModel> | $Enums.tipo_notificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtipo_notificacaoFilter<$PrismaModel>
    _max?: NestedEnumtipo_notificacaoFilter<$PrismaModel>
  }

  export type Enumestado_notificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_notificacao | Enumestado_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_notificacaoWithAggregatesFilter<$PrismaModel> | $Enums.estado_notificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_notificacaoFilter<$PrismaModel>
    _max?: NestedEnumestado_notificacaoFilter<$PrismaModel>
  }

  export type postCreateNestedOneWithoutComentarioInput = {
    create?: XOR<postCreateWithoutComentarioInput, postUncheckedCreateWithoutComentarioInput>
    connectOrCreate?: postCreateOrConnectWithoutComentarioInput
    connect?: postWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutComentarioInput = {
    create?: XOR<utilizadorCreateWithoutComentarioInput, utilizadorUncheckedCreateWithoutComentarioInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutComentarioInput
    connect?: utilizadorWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type postUpdateOneWithoutComentarioNestedInput = {
    create?: XOR<postCreateWithoutComentarioInput, postUncheckedCreateWithoutComentarioInput>
    connectOrCreate?: postCreateOrConnectWithoutComentarioInput
    upsert?: postUpsertWithoutComentarioInput
    disconnect?: postWhereInput | boolean
    delete?: postWhereInput | boolean
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutComentarioInput, postUpdateWithoutComentarioInput>, postUncheckedUpdateWithoutComentarioInput>
  }

  export type utilizadorUpdateOneWithoutComentarioNestedInput = {
    create?: XOR<utilizadorCreateWithoutComentarioInput, utilizadorUncheckedCreateWithoutComentarioInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutComentarioInput
    upsert?: utilizadorUpsertWithoutComentarioInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutComentarioInput, utilizadorUpdateWithoutComentarioInput>, utilizadorUncheckedUpdateWithoutComentarioInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type pagina_freguesiaCreateNestedOneWithoutModerador_paginaInput = {
    create?: XOR<pagina_freguesiaCreateWithoutModerador_paginaInput, pagina_freguesiaUncheckedCreateWithoutModerador_paginaInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutModerador_paginaInput
    connect?: pagina_freguesiaWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutModerador_paginaInput = {
    create?: XOR<utilizadorCreateWithoutModerador_paginaInput, utilizadorUncheckedCreateWithoutModerador_paginaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutModerador_paginaInput
    connect?: utilizadorWhereUniqueInput
  }

  export type Enumfuncao_moderadorFieldUpdateOperationsInput = {
    set?: $Enums.funcao_moderador
  }

  export type pagina_freguesiaUpdateOneWithoutModerador_paginaNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutModerador_paginaInput, pagina_freguesiaUncheckedCreateWithoutModerador_paginaInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutModerador_paginaInput
    upsert?: pagina_freguesiaUpsertWithoutModerador_paginaInput
    disconnect?: pagina_freguesiaWhereInput | boolean
    delete?: pagina_freguesiaWhereInput | boolean
    connect?: pagina_freguesiaWhereUniqueInput
    update?: XOR<XOR<pagina_freguesiaUpdateToOneWithWhereWithoutModerador_paginaInput, pagina_freguesiaUpdateWithoutModerador_paginaInput>, pagina_freguesiaUncheckedUpdateWithoutModerador_paginaInput>
  }

  export type utilizadorUpdateOneWithoutModerador_paginaNestedInput = {
    create?: XOR<utilizadorCreateWithoutModerador_paginaInput, utilizadorUncheckedCreateWithoutModerador_paginaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutModerador_paginaInput
    upsert?: utilizadorUpsertWithoutModerador_paginaInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutModerador_paginaInput, utilizadorUpdateWithoutModerador_paginaInput>, utilizadorUncheckedUpdateWithoutModerador_paginaInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type pagina_freguesiaCreateNestedManyWithoutMoradaInput = {
    create?: XOR<pagina_freguesiaCreateWithoutMoradaInput, pagina_freguesiaUncheckedCreateWithoutMoradaInput> | pagina_freguesiaCreateWithoutMoradaInput[] | pagina_freguesiaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutMoradaInput | pagina_freguesiaCreateOrConnectWithoutMoradaInput[]
    createMany?: pagina_freguesiaCreateManyMoradaInputEnvelope
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
  }

  export type pedido_paginaCreateNestedManyWithoutMoradaInput = {
    create?: XOR<pedido_paginaCreateWithoutMoradaInput, pedido_paginaUncheckedCreateWithoutMoradaInput> | pedido_paginaCreateWithoutMoradaInput[] | pedido_paginaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutMoradaInput | pedido_paginaCreateOrConnectWithoutMoradaInput[]
    createMany?: pedido_paginaCreateManyMoradaInputEnvelope
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
  }

  export type utilizadorCreateNestedManyWithoutMoradaInput = {
    create?: XOR<utilizadorCreateWithoutMoradaInput, utilizadorUncheckedCreateWithoutMoradaInput> | utilizadorCreateWithoutMoradaInput[] | utilizadorUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: utilizadorCreateOrConnectWithoutMoradaInput | utilizadorCreateOrConnectWithoutMoradaInput[]
    createMany?: utilizadorCreateManyMoradaInputEnvelope
    connect?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
  }

  export type pagina_freguesiaUncheckedCreateNestedManyWithoutMoradaInput = {
    create?: XOR<pagina_freguesiaCreateWithoutMoradaInput, pagina_freguesiaUncheckedCreateWithoutMoradaInput> | pagina_freguesiaCreateWithoutMoradaInput[] | pagina_freguesiaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutMoradaInput | pagina_freguesiaCreateOrConnectWithoutMoradaInput[]
    createMany?: pagina_freguesiaCreateManyMoradaInputEnvelope
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
  }

  export type pedido_paginaUncheckedCreateNestedManyWithoutMoradaInput = {
    create?: XOR<pedido_paginaCreateWithoutMoradaInput, pedido_paginaUncheckedCreateWithoutMoradaInput> | pedido_paginaCreateWithoutMoradaInput[] | pedido_paginaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutMoradaInput | pedido_paginaCreateOrConnectWithoutMoradaInput[]
    createMany?: pedido_paginaCreateManyMoradaInputEnvelope
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
  }

  export type utilizadorUncheckedCreateNestedManyWithoutMoradaInput = {
    create?: XOR<utilizadorCreateWithoutMoradaInput, utilizadorUncheckedCreateWithoutMoradaInput> | utilizadorCreateWithoutMoradaInput[] | utilizadorUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: utilizadorCreateOrConnectWithoutMoradaInput | utilizadorCreateOrConnectWithoutMoradaInput[]
    createMany?: utilizadorCreateManyMoradaInputEnvelope
    connect?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type pagina_freguesiaUpdateManyWithoutMoradaNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutMoradaInput, pagina_freguesiaUncheckedCreateWithoutMoradaInput> | pagina_freguesiaCreateWithoutMoradaInput[] | pagina_freguesiaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutMoradaInput | pagina_freguesiaCreateOrConnectWithoutMoradaInput[]
    upsert?: pagina_freguesiaUpsertWithWhereUniqueWithoutMoradaInput | pagina_freguesiaUpsertWithWhereUniqueWithoutMoradaInput[]
    createMany?: pagina_freguesiaCreateManyMoradaInputEnvelope
    set?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    disconnect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    delete?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    update?: pagina_freguesiaUpdateWithWhereUniqueWithoutMoradaInput | pagina_freguesiaUpdateWithWhereUniqueWithoutMoradaInput[]
    updateMany?: pagina_freguesiaUpdateManyWithWhereWithoutMoradaInput | pagina_freguesiaUpdateManyWithWhereWithoutMoradaInput[]
    deleteMany?: pagina_freguesiaScalarWhereInput | pagina_freguesiaScalarWhereInput[]
  }

  export type pedido_paginaUpdateManyWithoutMoradaNestedInput = {
    create?: XOR<pedido_paginaCreateWithoutMoradaInput, pedido_paginaUncheckedCreateWithoutMoradaInput> | pedido_paginaCreateWithoutMoradaInput[] | pedido_paginaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutMoradaInput | pedido_paginaCreateOrConnectWithoutMoradaInput[]
    upsert?: pedido_paginaUpsertWithWhereUniqueWithoutMoradaInput | pedido_paginaUpsertWithWhereUniqueWithoutMoradaInput[]
    createMany?: pedido_paginaCreateManyMoradaInputEnvelope
    set?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    disconnect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    delete?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    update?: pedido_paginaUpdateWithWhereUniqueWithoutMoradaInput | pedido_paginaUpdateWithWhereUniqueWithoutMoradaInput[]
    updateMany?: pedido_paginaUpdateManyWithWhereWithoutMoradaInput | pedido_paginaUpdateManyWithWhereWithoutMoradaInput[]
    deleteMany?: pedido_paginaScalarWhereInput | pedido_paginaScalarWhereInput[]
  }

  export type utilizadorUpdateManyWithoutMoradaNestedInput = {
    create?: XOR<utilizadorCreateWithoutMoradaInput, utilizadorUncheckedCreateWithoutMoradaInput> | utilizadorCreateWithoutMoradaInput[] | utilizadorUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: utilizadorCreateOrConnectWithoutMoradaInput | utilizadorCreateOrConnectWithoutMoradaInput[]
    upsert?: utilizadorUpsertWithWhereUniqueWithoutMoradaInput | utilizadorUpsertWithWhereUniqueWithoutMoradaInput[]
    createMany?: utilizadorCreateManyMoradaInputEnvelope
    set?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    disconnect?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    delete?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    connect?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    update?: utilizadorUpdateWithWhereUniqueWithoutMoradaInput | utilizadorUpdateWithWhereUniqueWithoutMoradaInput[]
    updateMany?: utilizadorUpdateManyWithWhereWithoutMoradaInput | utilizadorUpdateManyWithWhereWithoutMoradaInput[]
    deleteMany?: utilizadorScalarWhereInput | utilizadorScalarWhereInput[]
  }

  export type pagina_freguesiaUncheckedUpdateManyWithoutMoradaNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutMoradaInput, pagina_freguesiaUncheckedCreateWithoutMoradaInput> | pagina_freguesiaCreateWithoutMoradaInput[] | pagina_freguesiaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutMoradaInput | pagina_freguesiaCreateOrConnectWithoutMoradaInput[]
    upsert?: pagina_freguesiaUpsertWithWhereUniqueWithoutMoradaInput | pagina_freguesiaUpsertWithWhereUniqueWithoutMoradaInput[]
    createMany?: pagina_freguesiaCreateManyMoradaInputEnvelope
    set?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    disconnect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    delete?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    update?: pagina_freguesiaUpdateWithWhereUniqueWithoutMoradaInput | pagina_freguesiaUpdateWithWhereUniqueWithoutMoradaInput[]
    updateMany?: pagina_freguesiaUpdateManyWithWhereWithoutMoradaInput | pagina_freguesiaUpdateManyWithWhereWithoutMoradaInput[]
    deleteMany?: pagina_freguesiaScalarWhereInput | pagina_freguesiaScalarWhereInput[]
  }

  export type pedido_paginaUncheckedUpdateManyWithoutMoradaNestedInput = {
    create?: XOR<pedido_paginaCreateWithoutMoradaInput, pedido_paginaUncheckedCreateWithoutMoradaInput> | pedido_paginaCreateWithoutMoradaInput[] | pedido_paginaUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutMoradaInput | pedido_paginaCreateOrConnectWithoutMoradaInput[]
    upsert?: pedido_paginaUpsertWithWhereUniqueWithoutMoradaInput | pedido_paginaUpsertWithWhereUniqueWithoutMoradaInput[]
    createMany?: pedido_paginaCreateManyMoradaInputEnvelope
    set?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    disconnect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    delete?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    update?: pedido_paginaUpdateWithWhereUniqueWithoutMoradaInput | pedido_paginaUpdateWithWhereUniqueWithoutMoradaInput[]
    updateMany?: pedido_paginaUpdateManyWithWhereWithoutMoradaInput | pedido_paginaUpdateManyWithWhereWithoutMoradaInput[]
    deleteMany?: pedido_paginaScalarWhereInput | pedido_paginaScalarWhereInput[]
  }

  export type utilizadorUncheckedUpdateManyWithoutMoradaNestedInput = {
    create?: XOR<utilizadorCreateWithoutMoradaInput, utilizadorUncheckedCreateWithoutMoradaInput> | utilizadorCreateWithoutMoradaInput[] | utilizadorUncheckedCreateWithoutMoradaInput[]
    connectOrCreate?: utilizadorCreateOrConnectWithoutMoradaInput | utilizadorCreateOrConnectWithoutMoradaInput[]
    upsert?: utilizadorUpsertWithWhereUniqueWithoutMoradaInput | utilizadorUpsertWithWhereUniqueWithoutMoradaInput[]
    createMany?: utilizadorCreateManyMoradaInputEnvelope
    set?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    disconnect?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    delete?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    connect?: utilizadorWhereUniqueInput | utilizadorWhereUniqueInput[]
    update?: utilizadorUpdateWithWhereUniqueWithoutMoradaInput | utilizadorUpdateWithWhereUniqueWithoutMoradaInput[]
    updateMany?: utilizadorUpdateManyWithWhereWithoutMoradaInput | utilizadorUpdateManyWithWhereWithoutMoradaInput[]
    deleteMany?: utilizadorScalarWhereInput | utilizadorScalarWhereInput[]
  }

  export type moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<moderador_paginaCreateWithoutPagina_freguesiaInput, moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput> | moderador_paginaCreateWithoutPagina_freguesiaInput[] | moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput | moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: moderador_paginaCreateManyPagina_freguesiaInputEnvelope
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
  }

  export type notificacaoCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<notificacaoCreateWithoutPagina_freguesiaInput, notificacaoUncheckedCreateWithoutPagina_freguesiaInput> | notificacaoCreateWithoutPagina_freguesiaInput[] | notificacaoUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPagina_freguesiaInput | notificacaoCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: notificacaoCreateManyPagina_freguesiaInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type moradaCreateNestedOneWithoutPagina_freguesiaInput = {
    create?: XOR<moradaCreateWithoutPagina_freguesiaInput, moradaUncheckedCreateWithoutPagina_freguesiaInput>
    connectOrCreate?: moradaCreateOrConnectWithoutPagina_freguesiaInput
    connect?: moradaWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutPagina_freguesiaInput = {
    create?: XOR<utilizadorCreateWithoutPagina_freguesiaInput, utilizadorUncheckedCreateWithoutPagina_freguesiaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPagina_freguesiaInput
    connect?: utilizadorWhereUniqueInput
  }

  export type postCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<postCreateWithoutPagina_freguesiaInput, postUncheckedCreateWithoutPagina_freguesiaInput> | postCreateWithoutPagina_freguesiaInput[] | postUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: postCreateOrConnectWithoutPagina_freguesiaInput | postCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: postCreateManyPagina_freguesiaInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<seguidores_paginaCreateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput> | seguidores_paginaCreateWithoutPagina_freguesiaInput[] | seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput | seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: seguidores_paginaCreateManyPagina_freguesiaInputEnvelope
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
  }

  export type ticketCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<ticketCreateWithoutPagina_freguesiaInput, ticketUncheckedCreateWithoutPagina_freguesiaInput> | ticketCreateWithoutPagina_freguesiaInput[] | ticketUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutPagina_freguesiaInput | ticketCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: ticketCreateManyPagina_freguesiaInputEnvelope
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
  }

  export type moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<moderador_paginaCreateWithoutPagina_freguesiaInput, moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput> | moderador_paginaCreateWithoutPagina_freguesiaInput[] | moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput | moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: moderador_paginaCreateManyPagina_freguesiaInputEnvelope
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
  }

  export type notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<notificacaoCreateWithoutPagina_freguesiaInput, notificacaoUncheckedCreateWithoutPagina_freguesiaInput> | notificacaoCreateWithoutPagina_freguesiaInput[] | notificacaoUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPagina_freguesiaInput | notificacaoCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: notificacaoCreateManyPagina_freguesiaInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type postUncheckedCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<postCreateWithoutPagina_freguesiaInput, postUncheckedCreateWithoutPagina_freguesiaInput> | postCreateWithoutPagina_freguesiaInput[] | postUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: postCreateOrConnectWithoutPagina_freguesiaInput | postCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: postCreateManyPagina_freguesiaInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<seguidores_paginaCreateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput> | seguidores_paginaCreateWithoutPagina_freguesiaInput[] | seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput | seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: seguidores_paginaCreateManyPagina_freguesiaInputEnvelope
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
  }

  export type ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput = {
    create?: XOR<ticketCreateWithoutPagina_freguesiaInput, ticketUncheckedCreateWithoutPagina_freguesiaInput> | ticketCreateWithoutPagina_freguesiaInput[] | ticketUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutPagina_freguesiaInput | ticketCreateOrConnectWithoutPagina_freguesiaInput[]
    createMany?: ticketCreateManyPagina_freguesiaInputEnvelope
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
  }

  export type moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<moderador_paginaCreateWithoutPagina_freguesiaInput, moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput> | moderador_paginaCreateWithoutPagina_freguesiaInput[] | moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput | moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: moderador_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput | moderador_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: moderador_paginaCreateManyPagina_freguesiaInputEnvelope
    set?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    disconnect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    delete?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    update?: moderador_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput | moderador_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: moderador_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput | moderador_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: moderador_paginaScalarWhereInput | moderador_paginaScalarWhereInput[]
  }

  export type notificacaoUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<notificacaoCreateWithoutPagina_freguesiaInput, notificacaoUncheckedCreateWithoutPagina_freguesiaInput> | notificacaoCreateWithoutPagina_freguesiaInput[] | notificacaoUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPagina_freguesiaInput | notificacaoCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutPagina_freguesiaInput | notificacaoUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: notificacaoCreateManyPagina_freguesiaInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutPagina_freguesiaInput | notificacaoUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutPagina_freguesiaInput | notificacaoUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type moradaUpdateOneWithoutPagina_freguesiaNestedInput = {
    create?: XOR<moradaCreateWithoutPagina_freguesiaInput, moradaUncheckedCreateWithoutPagina_freguesiaInput>
    connectOrCreate?: moradaCreateOrConnectWithoutPagina_freguesiaInput
    upsert?: moradaUpsertWithoutPagina_freguesiaInput
    disconnect?: moradaWhereInput | boolean
    delete?: moradaWhereInput | boolean
    connect?: moradaWhereUniqueInput
    update?: XOR<XOR<moradaUpdateToOneWithWhereWithoutPagina_freguesiaInput, moradaUpdateWithoutPagina_freguesiaInput>, moradaUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type utilizadorUpdateOneWithoutPagina_freguesiaNestedInput = {
    create?: XOR<utilizadorCreateWithoutPagina_freguesiaInput, utilizadorUncheckedCreateWithoutPagina_freguesiaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPagina_freguesiaInput
    upsert?: utilizadorUpsertWithoutPagina_freguesiaInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutPagina_freguesiaInput, utilizadorUpdateWithoutPagina_freguesiaInput>, utilizadorUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type postUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<postCreateWithoutPagina_freguesiaInput, postUncheckedCreateWithoutPagina_freguesiaInput> | postCreateWithoutPagina_freguesiaInput[] | postUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: postCreateOrConnectWithoutPagina_freguesiaInput | postCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: postUpsertWithWhereUniqueWithoutPagina_freguesiaInput | postUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: postCreateManyPagina_freguesiaInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutPagina_freguesiaInput | postUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: postUpdateManyWithWhereWithoutPagina_freguesiaInput | postUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<seguidores_paginaCreateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput> | seguidores_paginaCreateWithoutPagina_freguesiaInput[] | seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput | seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: seguidores_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput | seguidores_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: seguidores_paginaCreateManyPagina_freguesiaInputEnvelope
    set?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    disconnect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    delete?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    update?: seguidores_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput | seguidores_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: seguidores_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput | seguidores_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: seguidores_paginaScalarWhereInput | seguidores_paginaScalarWhereInput[]
  }

  export type ticketUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<ticketCreateWithoutPagina_freguesiaInput, ticketUncheckedCreateWithoutPagina_freguesiaInput> | ticketCreateWithoutPagina_freguesiaInput[] | ticketUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutPagina_freguesiaInput | ticketCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: ticketUpsertWithWhereUniqueWithoutPagina_freguesiaInput | ticketUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: ticketCreateManyPagina_freguesiaInputEnvelope
    set?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    disconnect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    delete?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    update?: ticketUpdateWithWhereUniqueWithoutPagina_freguesiaInput | ticketUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: ticketUpdateManyWithWhereWithoutPagina_freguesiaInput | ticketUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: ticketScalarWhereInput | ticketScalarWhereInput[]
  }

  export type moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<moderador_paginaCreateWithoutPagina_freguesiaInput, moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput> | moderador_paginaCreateWithoutPagina_freguesiaInput[] | moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput | moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: moderador_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput | moderador_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: moderador_paginaCreateManyPagina_freguesiaInputEnvelope
    set?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    disconnect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    delete?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    update?: moderador_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput | moderador_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: moderador_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput | moderador_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: moderador_paginaScalarWhereInput | moderador_paginaScalarWhereInput[]
  }

  export type notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<notificacaoCreateWithoutPagina_freguesiaInput, notificacaoUncheckedCreateWithoutPagina_freguesiaInput> | notificacaoCreateWithoutPagina_freguesiaInput[] | notificacaoUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPagina_freguesiaInput | notificacaoCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutPagina_freguesiaInput | notificacaoUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: notificacaoCreateManyPagina_freguesiaInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutPagina_freguesiaInput | notificacaoUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutPagina_freguesiaInput | notificacaoUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<postCreateWithoutPagina_freguesiaInput, postUncheckedCreateWithoutPagina_freguesiaInput> | postCreateWithoutPagina_freguesiaInput[] | postUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: postCreateOrConnectWithoutPagina_freguesiaInput | postCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: postUpsertWithWhereUniqueWithoutPagina_freguesiaInput | postUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: postCreateManyPagina_freguesiaInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutPagina_freguesiaInput | postUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: postUpdateManyWithWhereWithoutPagina_freguesiaInput | postUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<seguidores_paginaCreateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput> | seguidores_paginaCreateWithoutPagina_freguesiaInput[] | seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput | seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: seguidores_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput | seguidores_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: seguidores_paginaCreateManyPagina_freguesiaInputEnvelope
    set?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    disconnect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    delete?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    update?: seguidores_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput | seguidores_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: seguidores_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput | seguidores_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: seguidores_paginaScalarWhereInput | seguidores_paginaScalarWhereInput[]
  }

  export type ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput = {
    create?: XOR<ticketCreateWithoutPagina_freguesiaInput, ticketUncheckedCreateWithoutPagina_freguesiaInput> | ticketCreateWithoutPagina_freguesiaInput[] | ticketUncheckedCreateWithoutPagina_freguesiaInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutPagina_freguesiaInput | ticketCreateOrConnectWithoutPagina_freguesiaInput[]
    upsert?: ticketUpsertWithWhereUniqueWithoutPagina_freguesiaInput | ticketUpsertWithWhereUniqueWithoutPagina_freguesiaInput[]
    createMany?: ticketCreateManyPagina_freguesiaInputEnvelope
    set?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    disconnect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    delete?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    update?: ticketUpdateWithWhereUniqueWithoutPagina_freguesiaInput | ticketUpdateWithWhereUniqueWithoutPagina_freguesiaInput[]
    updateMany?: ticketUpdateManyWithWhereWithoutPagina_freguesiaInput | ticketUpdateManyWithWhereWithoutPagina_freguesiaInput[]
    deleteMany?: ticketScalarWhereInput | ticketScalarWhereInput[]
  }

  export type moradaCreateNestedOneWithoutPedido_paginaInput = {
    create?: XOR<moradaCreateWithoutPedido_paginaInput, moradaUncheckedCreateWithoutPedido_paginaInput>
    connectOrCreate?: moradaCreateOrConnectWithoutPedido_paginaInput
    connect?: moradaWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutPedido_paginaInput = {
    create?: XOR<utilizadorCreateWithoutPedido_paginaInput, utilizadorUncheckedCreateWithoutPedido_paginaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPedido_paginaInput
    connect?: utilizadorWhereUniqueInput
  }

  export type Enumestado_pedidoFieldUpdateOperationsInput = {
    set?: $Enums.estado_pedido
  }

  export type moradaUpdateOneWithoutPedido_paginaNestedInput = {
    create?: XOR<moradaCreateWithoutPedido_paginaInput, moradaUncheckedCreateWithoutPedido_paginaInput>
    connectOrCreate?: moradaCreateOrConnectWithoutPedido_paginaInput
    upsert?: moradaUpsertWithoutPedido_paginaInput
    disconnect?: moradaWhereInput | boolean
    delete?: moradaWhereInput | boolean
    connect?: moradaWhereUniqueInput
    update?: XOR<XOR<moradaUpdateToOneWithWhereWithoutPedido_paginaInput, moradaUpdateWithoutPedido_paginaInput>, moradaUncheckedUpdateWithoutPedido_paginaInput>
  }

  export type utilizadorUpdateOneWithoutPedido_paginaNestedInput = {
    create?: XOR<utilizadorCreateWithoutPedido_paginaInput, utilizadorUncheckedCreateWithoutPedido_paginaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPedido_paginaInput
    upsert?: utilizadorUpsertWithoutPedido_paginaInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutPedido_paginaInput, utilizadorUpdateWithoutPedido_paginaInput>, utilizadorUncheckedUpdateWithoutPedido_paginaInput>
  }

  export type utilizadorCreateNestedOneWithoutPerfilInput = {
    create?: XOR<utilizadorCreateWithoutPerfilInput, utilizadorUncheckedCreateWithoutPerfilInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPerfilInput
    connect?: utilizadorWhereUniqueInput
  }

  export type utilizadorUpdateOneWithoutPerfilNestedInput = {
    create?: XOR<utilizadorCreateWithoutPerfilInput, utilizadorUncheckedCreateWithoutPerfilInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPerfilInput
    upsert?: utilizadorUpsertWithoutPerfilInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutPerfilInput, utilizadorUpdateWithoutPerfilInput>, utilizadorUncheckedUpdateWithoutPerfilInput>
  }

  export type comentarioCreateNestedManyWithoutPostInput = {
    create?: XOR<comentarioCreateWithoutPostInput, comentarioUncheckedCreateWithoutPostInput> | comentarioCreateWithoutPostInput[] | comentarioUncheckedCreateWithoutPostInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutPostInput | comentarioCreateOrConnectWithoutPostInput[]
    createMany?: comentarioCreateManyPostInputEnvelope
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
  }

  export type notificacaoCreateNestedManyWithoutPostInput = {
    create?: XOR<notificacaoCreateWithoutPostInput, notificacaoUncheckedCreateWithoutPostInput> | notificacaoCreateWithoutPostInput[] | notificacaoUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPostInput | notificacaoCreateOrConnectWithoutPostInput[]
    createMany?: notificacaoCreateManyPostInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type pagina_freguesiaCreateNestedOneWithoutPostInput = {
    create?: XOR<pagina_freguesiaCreateWithoutPostInput, pagina_freguesiaUncheckedCreateWithoutPostInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutPostInput
    connect?: pagina_freguesiaWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutPostInput = {
    create?: XOR<utilizadorCreateWithoutPostInput, utilizadorUncheckedCreateWithoutPostInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPostInput
    connect?: utilizadorWhereUniqueInput
  }

  export type comentarioUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<comentarioCreateWithoutPostInput, comentarioUncheckedCreateWithoutPostInput> | comentarioCreateWithoutPostInput[] | comentarioUncheckedCreateWithoutPostInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutPostInput | comentarioCreateOrConnectWithoutPostInput[]
    createMany?: comentarioCreateManyPostInputEnvelope
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
  }

  export type notificacaoUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<notificacaoCreateWithoutPostInput, notificacaoUncheckedCreateWithoutPostInput> | notificacaoCreateWithoutPostInput[] | notificacaoUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPostInput | notificacaoCreateOrConnectWithoutPostInput[]
    createMany?: notificacaoCreateManyPostInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type Enumestado_postFieldUpdateOperationsInput = {
    set?: $Enums.estado_post
  }

  export type comentarioUpdateManyWithoutPostNestedInput = {
    create?: XOR<comentarioCreateWithoutPostInput, comentarioUncheckedCreateWithoutPostInput> | comentarioCreateWithoutPostInput[] | comentarioUncheckedCreateWithoutPostInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutPostInput | comentarioCreateOrConnectWithoutPostInput[]
    upsert?: comentarioUpsertWithWhereUniqueWithoutPostInput | comentarioUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: comentarioCreateManyPostInputEnvelope
    set?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    disconnect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    delete?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    update?: comentarioUpdateWithWhereUniqueWithoutPostInput | comentarioUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: comentarioUpdateManyWithWhereWithoutPostInput | comentarioUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: comentarioScalarWhereInput | comentarioScalarWhereInput[]
  }

  export type notificacaoUpdateManyWithoutPostNestedInput = {
    create?: XOR<notificacaoCreateWithoutPostInput, notificacaoUncheckedCreateWithoutPostInput> | notificacaoCreateWithoutPostInput[] | notificacaoUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPostInput | notificacaoCreateOrConnectWithoutPostInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutPostInput | notificacaoUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: notificacaoCreateManyPostInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutPostInput | notificacaoUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutPostInput | notificacaoUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type pagina_freguesiaUpdateOneWithoutPostNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutPostInput, pagina_freguesiaUncheckedCreateWithoutPostInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutPostInput
    upsert?: pagina_freguesiaUpsertWithoutPostInput
    disconnect?: pagina_freguesiaWhereInput | boolean
    delete?: pagina_freguesiaWhereInput | boolean
    connect?: pagina_freguesiaWhereUniqueInput
    update?: XOR<XOR<pagina_freguesiaUpdateToOneWithWhereWithoutPostInput, pagina_freguesiaUpdateWithoutPostInput>, pagina_freguesiaUncheckedUpdateWithoutPostInput>
  }

  export type utilizadorUpdateOneWithoutPostNestedInput = {
    create?: XOR<utilizadorCreateWithoutPostInput, utilizadorUncheckedCreateWithoutPostInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutPostInput
    upsert?: utilizadorUpsertWithoutPostInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutPostInput, utilizadorUpdateWithoutPostInput>, utilizadorUncheckedUpdateWithoutPostInput>
  }

  export type comentarioUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<comentarioCreateWithoutPostInput, comentarioUncheckedCreateWithoutPostInput> | comentarioCreateWithoutPostInput[] | comentarioUncheckedCreateWithoutPostInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutPostInput | comentarioCreateOrConnectWithoutPostInput[]
    upsert?: comentarioUpsertWithWhereUniqueWithoutPostInput | comentarioUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: comentarioCreateManyPostInputEnvelope
    set?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    disconnect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    delete?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    update?: comentarioUpdateWithWhereUniqueWithoutPostInput | comentarioUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: comentarioUpdateManyWithWhereWithoutPostInput | comentarioUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: comentarioScalarWhereInput | comentarioScalarWhereInput[]
  }

  export type notificacaoUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<notificacaoCreateWithoutPostInput, notificacaoUncheckedCreateWithoutPostInput> | notificacaoCreateWithoutPostInput[] | notificacaoUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutPostInput | notificacaoCreateOrConnectWithoutPostInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutPostInput | notificacaoUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: notificacaoCreateManyPostInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutPostInput | notificacaoUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutPostInput | notificacaoUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type ticketCreateNestedOneWithoutResposta_ticketInput = {
    create?: XOR<ticketCreateWithoutResposta_ticketInput, ticketUncheckedCreateWithoutResposta_ticketInput>
    connectOrCreate?: ticketCreateOrConnectWithoutResposta_ticketInput
    connect?: ticketWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutResposta_ticketInput = {
    create?: XOR<utilizadorCreateWithoutResposta_ticketInput, utilizadorUncheckedCreateWithoutResposta_ticketInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutResposta_ticketInput
    connect?: utilizadorWhereUniqueInput
  }

  export type Enumestado_respostaFieldUpdateOperationsInput = {
    set?: $Enums.estado_resposta
  }

  export type ticketUpdateOneWithoutResposta_ticketNestedInput = {
    create?: XOR<ticketCreateWithoutResposta_ticketInput, ticketUncheckedCreateWithoutResposta_ticketInput>
    connectOrCreate?: ticketCreateOrConnectWithoutResposta_ticketInput
    upsert?: ticketUpsertWithoutResposta_ticketInput
    disconnect?: ticketWhereInput | boolean
    delete?: ticketWhereInput | boolean
    connect?: ticketWhereUniqueInput
    update?: XOR<XOR<ticketUpdateToOneWithWhereWithoutResposta_ticketInput, ticketUpdateWithoutResposta_ticketInput>, ticketUncheckedUpdateWithoutResposta_ticketInput>
  }

  export type utilizadorUpdateOneWithoutResposta_ticketNestedInput = {
    create?: XOR<utilizadorCreateWithoutResposta_ticketInput, utilizadorUncheckedCreateWithoutResposta_ticketInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutResposta_ticketInput
    upsert?: utilizadorUpsertWithoutResposta_ticketInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutResposta_ticketInput, utilizadorUpdateWithoutResposta_ticketInput>, utilizadorUncheckedUpdateWithoutResposta_ticketInput>
  }

  export type pagina_freguesiaCreateNestedOneWithoutSeguidores_paginaInput = {
    create?: XOR<pagina_freguesiaCreateWithoutSeguidores_paginaInput, pagina_freguesiaUncheckedCreateWithoutSeguidores_paginaInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutSeguidores_paginaInput
    connect?: pagina_freguesiaWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutSeguidores_paginaInput = {
    create?: XOR<utilizadorCreateWithoutSeguidores_paginaInput, utilizadorUncheckedCreateWithoutSeguidores_paginaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutSeguidores_paginaInput
    connect?: utilizadorWhereUniqueInput
  }

  export type pagina_freguesiaUpdateOneWithoutSeguidores_paginaNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutSeguidores_paginaInput, pagina_freguesiaUncheckedCreateWithoutSeguidores_paginaInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutSeguidores_paginaInput
    upsert?: pagina_freguesiaUpsertWithoutSeguidores_paginaInput
    disconnect?: pagina_freguesiaWhereInput | boolean
    delete?: pagina_freguesiaWhereInput | boolean
    connect?: pagina_freguesiaWhereUniqueInput
    update?: XOR<XOR<pagina_freguesiaUpdateToOneWithWhereWithoutSeguidores_paginaInput, pagina_freguesiaUpdateWithoutSeguidores_paginaInput>, pagina_freguesiaUncheckedUpdateWithoutSeguidores_paginaInput>
  }

  export type utilizadorUpdateOneWithoutSeguidores_paginaNestedInput = {
    create?: XOR<utilizadorCreateWithoutSeguidores_paginaInput, utilizadorUncheckedCreateWithoutSeguidores_paginaInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutSeguidores_paginaInput
    upsert?: utilizadorUpsertWithoutSeguidores_paginaInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutSeguidores_paginaInput, utilizadorUpdateWithoutSeguidores_paginaInput>, utilizadorUncheckedUpdateWithoutSeguidores_paginaInput>
  }

  export type notificacaoCreateNestedManyWithoutTicketInput = {
    create?: XOR<notificacaoCreateWithoutTicketInput, notificacaoUncheckedCreateWithoutTicketInput> | notificacaoCreateWithoutTicketInput[] | notificacaoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutTicketInput | notificacaoCreateOrConnectWithoutTicketInput[]
    createMany?: notificacaoCreateManyTicketInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type resposta_ticketCreateNestedManyWithoutTicketInput = {
    create?: XOR<resposta_ticketCreateWithoutTicketInput, resposta_ticketUncheckedCreateWithoutTicketInput> | resposta_ticketCreateWithoutTicketInput[] | resposta_ticketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutTicketInput | resposta_ticketCreateOrConnectWithoutTicketInput[]
    createMany?: resposta_ticketCreateManyTicketInputEnvelope
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
  }

  export type pagina_freguesiaCreateNestedOneWithoutTicketInput = {
    create?: XOR<pagina_freguesiaCreateWithoutTicketInput, pagina_freguesiaUncheckedCreateWithoutTicketInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutTicketInput
    connect?: pagina_freguesiaWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutTicketInput = {
    create?: XOR<utilizadorCreateWithoutTicketInput, utilizadorUncheckedCreateWithoutTicketInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutTicketInput
    connect?: utilizadorWhereUniqueInput
  }

  export type notificacaoUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<notificacaoCreateWithoutTicketInput, notificacaoUncheckedCreateWithoutTicketInput> | notificacaoCreateWithoutTicketInput[] | notificacaoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutTicketInput | notificacaoCreateOrConnectWithoutTicketInput[]
    createMany?: notificacaoCreateManyTicketInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type resposta_ticketUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<resposta_ticketCreateWithoutTicketInput, resposta_ticketUncheckedCreateWithoutTicketInput> | resposta_ticketCreateWithoutTicketInput[] | resposta_ticketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutTicketInput | resposta_ticketCreateOrConnectWithoutTicketInput[]
    createMany?: resposta_ticketCreateManyTicketInputEnvelope
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
  }

  export type Enumestado_ticketFieldUpdateOperationsInput = {
    set?: $Enums.estado_ticket
  }

  export type notificacaoUpdateManyWithoutTicketNestedInput = {
    create?: XOR<notificacaoCreateWithoutTicketInput, notificacaoUncheckedCreateWithoutTicketInput> | notificacaoCreateWithoutTicketInput[] | notificacaoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutTicketInput | notificacaoCreateOrConnectWithoutTicketInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutTicketInput | notificacaoUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: notificacaoCreateManyTicketInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutTicketInput | notificacaoUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutTicketInput | notificacaoUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type resposta_ticketUpdateManyWithoutTicketNestedInput = {
    create?: XOR<resposta_ticketCreateWithoutTicketInput, resposta_ticketUncheckedCreateWithoutTicketInput> | resposta_ticketCreateWithoutTicketInput[] | resposta_ticketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutTicketInput | resposta_ticketCreateOrConnectWithoutTicketInput[]
    upsert?: resposta_ticketUpsertWithWhereUniqueWithoutTicketInput | resposta_ticketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: resposta_ticketCreateManyTicketInputEnvelope
    set?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    disconnect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    delete?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    update?: resposta_ticketUpdateWithWhereUniqueWithoutTicketInput | resposta_ticketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: resposta_ticketUpdateManyWithWhereWithoutTicketInput | resposta_ticketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: resposta_ticketScalarWhereInput | resposta_ticketScalarWhereInput[]
  }

  export type pagina_freguesiaUpdateOneWithoutTicketNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutTicketInput, pagina_freguesiaUncheckedCreateWithoutTicketInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutTicketInput
    upsert?: pagina_freguesiaUpsertWithoutTicketInput
    disconnect?: pagina_freguesiaWhereInput | boolean
    delete?: pagina_freguesiaWhereInput | boolean
    connect?: pagina_freguesiaWhereUniqueInput
    update?: XOR<XOR<pagina_freguesiaUpdateToOneWithWhereWithoutTicketInput, pagina_freguesiaUpdateWithoutTicketInput>, pagina_freguesiaUncheckedUpdateWithoutTicketInput>
  }

  export type utilizadorUpdateOneWithoutTicketNestedInput = {
    create?: XOR<utilizadorCreateWithoutTicketInput, utilizadorUncheckedCreateWithoutTicketInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutTicketInput
    upsert?: utilizadorUpsertWithoutTicketInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutTicketInput, utilizadorUpdateWithoutTicketInput>, utilizadorUncheckedUpdateWithoutTicketInput>
  }

  export type notificacaoUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<notificacaoCreateWithoutTicketInput, notificacaoUncheckedCreateWithoutTicketInput> | notificacaoCreateWithoutTicketInput[] | notificacaoUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutTicketInput | notificacaoCreateOrConnectWithoutTicketInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutTicketInput | notificacaoUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: notificacaoCreateManyTicketInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutTicketInput | notificacaoUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutTicketInput | notificacaoUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type resposta_ticketUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<resposta_ticketCreateWithoutTicketInput, resposta_ticketUncheckedCreateWithoutTicketInput> | resposta_ticketCreateWithoutTicketInput[] | resposta_ticketUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutTicketInput | resposta_ticketCreateOrConnectWithoutTicketInput[]
    upsert?: resposta_ticketUpsertWithWhereUniqueWithoutTicketInput | resposta_ticketUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: resposta_ticketCreateManyTicketInputEnvelope
    set?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    disconnect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    delete?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    update?: resposta_ticketUpdateWithWhereUniqueWithoutTicketInput | resposta_ticketUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: resposta_ticketUpdateManyWithWhereWithoutTicketInput | resposta_ticketUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: resposta_ticketScalarWhereInput | resposta_ticketScalarWhereInput[]
  }

  export type comentarioCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<comentarioCreateWithoutUtilizadorInput, comentarioUncheckedCreateWithoutUtilizadorInput> | comentarioCreateWithoutUtilizadorInput[] | comentarioUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutUtilizadorInput | comentarioCreateOrConnectWithoutUtilizadorInput[]
    createMany?: comentarioCreateManyUtilizadorInputEnvelope
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
  }

  export type moderador_paginaCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<moderador_paginaCreateWithoutUtilizadorInput, moderador_paginaUncheckedCreateWithoutUtilizadorInput> | moderador_paginaCreateWithoutUtilizadorInput[] | moderador_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutUtilizadorInput | moderador_paginaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: moderador_paginaCreateManyUtilizadorInputEnvelope
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
  }

  export type notificacaoCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<notificacaoCreateWithoutUtilizadorInput, notificacaoUncheckedCreateWithoutUtilizadorInput> | notificacaoCreateWithoutUtilizadorInput[] | notificacaoUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutUtilizadorInput | notificacaoCreateOrConnectWithoutUtilizadorInput[]
    createMany?: notificacaoCreateManyUtilizadorInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type pagina_freguesiaCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<pagina_freguesiaCreateWithoutUtilizadorInput, pagina_freguesiaUncheckedCreateWithoutUtilizadorInput> | pagina_freguesiaCreateWithoutUtilizadorInput[] | pagina_freguesiaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutUtilizadorInput | pagina_freguesiaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: pagina_freguesiaCreateManyUtilizadorInputEnvelope
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
  }

  export type pedido_paginaCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<pedido_paginaCreateWithoutUtilizadorInput, pedido_paginaUncheckedCreateWithoutUtilizadorInput> | pedido_paginaCreateWithoutUtilizadorInput[] | pedido_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutUtilizadorInput | pedido_paginaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: pedido_paginaCreateManyUtilizadorInputEnvelope
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
  }

  export type perfilCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<perfilCreateWithoutUtilizadorInput, perfilUncheckedCreateWithoutUtilizadorInput> | perfilCreateWithoutUtilizadorInput[] | perfilUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: perfilCreateOrConnectWithoutUtilizadorInput | perfilCreateOrConnectWithoutUtilizadorInput[]
    createMany?: perfilCreateManyUtilizadorInputEnvelope
    connect?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
  }

  export type postCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<postCreateWithoutUtilizadorInput, postUncheckedCreateWithoutUtilizadorInput> | postCreateWithoutUtilizadorInput[] | postUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: postCreateOrConnectWithoutUtilizadorInput | postCreateOrConnectWithoutUtilizadorInput[]
    createMany?: postCreateManyUtilizadorInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type resposta_ticketCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<resposta_ticketCreateWithoutUtilizadorInput, resposta_ticketUncheckedCreateWithoutUtilizadorInput> | resposta_ticketCreateWithoutUtilizadorInput[] | resposta_ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutUtilizadorInput | resposta_ticketCreateOrConnectWithoutUtilizadorInput[]
    createMany?: resposta_ticketCreateManyUtilizadorInputEnvelope
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
  }

  export type seguidores_paginaCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<seguidores_paginaCreateWithoutUtilizadorInput, seguidores_paginaUncheckedCreateWithoutUtilizadorInput> | seguidores_paginaCreateWithoutUtilizadorInput[] | seguidores_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutUtilizadorInput | seguidores_paginaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: seguidores_paginaCreateManyUtilizadorInputEnvelope
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
  }

  export type ticketCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<ticketCreateWithoutUtilizadorInput, ticketUncheckedCreateWithoutUtilizadorInput> | ticketCreateWithoutUtilizadorInput[] | ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutUtilizadorInput | ticketCreateOrConnectWithoutUtilizadorInput[]
    createMany?: ticketCreateManyUtilizadorInputEnvelope
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
  }

  export type moradaCreateNestedOneWithoutUtilizadorInput = {
    create?: XOR<moradaCreateWithoutUtilizadorInput, moradaUncheckedCreateWithoutUtilizadorInput>
    connectOrCreate?: moradaCreateOrConnectWithoutUtilizadorInput
    connect?: moradaWhereUniqueInput
  }

  export type comentarioUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<comentarioCreateWithoutUtilizadorInput, comentarioUncheckedCreateWithoutUtilizadorInput> | comentarioCreateWithoutUtilizadorInput[] | comentarioUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutUtilizadorInput | comentarioCreateOrConnectWithoutUtilizadorInput[]
    createMany?: comentarioCreateManyUtilizadorInputEnvelope
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
  }

  export type moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<moderador_paginaCreateWithoutUtilizadorInput, moderador_paginaUncheckedCreateWithoutUtilizadorInput> | moderador_paginaCreateWithoutUtilizadorInput[] | moderador_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutUtilizadorInput | moderador_paginaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: moderador_paginaCreateManyUtilizadorInputEnvelope
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
  }

  export type notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<notificacaoCreateWithoutUtilizadorInput, notificacaoUncheckedCreateWithoutUtilizadorInput> | notificacaoCreateWithoutUtilizadorInput[] | notificacaoUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutUtilizadorInput | notificacaoCreateOrConnectWithoutUtilizadorInput[]
    createMany?: notificacaoCreateManyUtilizadorInputEnvelope
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
  }

  export type pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<pagina_freguesiaCreateWithoutUtilizadorInput, pagina_freguesiaUncheckedCreateWithoutUtilizadorInput> | pagina_freguesiaCreateWithoutUtilizadorInput[] | pagina_freguesiaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutUtilizadorInput | pagina_freguesiaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: pagina_freguesiaCreateManyUtilizadorInputEnvelope
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
  }

  export type pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<pedido_paginaCreateWithoutUtilizadorInput, pedido_paginaUncheckedCreateWithoutUtilizadorInput> | pedido_paginaCreateWithoutUtilizadorInput[] | pedido_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutUtilizadorInput | pedido_paginaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: pedido_paginaCreateManyUtilizadorInputEnvelope
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
  }

  export type perfilUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<perfilCreateWithoutUtilizadorInput, perfilUncheckedCreateWithoutUtilizadorInput> | perfilCreateWithoutUtilizadorInput[] | perfilUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: perfilCreateOrConnectWithoutUtilizadorInput | perfilCreateOrConnectWithoutUtilizadorInput[]
    createMany?: perfilCreateManyUtilizadorInputEnvelope
    connect?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
  }

  export type postUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<postCreateWithoutUtilizadorInput, postUncheckedCreateWithoutUtilizadorInput> | postCreateWithoutUtilizadorInput[] | postUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: postCreateOrConnectWithoutUtilizadorInput | postCreateOrConnectWithoutUtilizadorInput[]
    createMany?: postCreateManyUtilizadorInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<resposta_ticketCreateWithoutUtilizadorInput, resposta_ticketUncheckedCreateWithoutUtilizadorInput> | resposta_ticketCreateWithoutUtilizadorInput[] | resposta_ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutUtilizadorInput | resposta_ticketCreateOrConnectWithoutUtilizadorInput[]
    createMany?: resposta_ticketCreateManyUtilizadorInputEnvelope
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
  }

  export type seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<seguidores_paginaCreateWithoutUtilizadorInput, seguidores_paginaUncheckedCreateWithoutUtilizadorInput> | seguidores_paginaCreateWithoutUtilizadorInput[] | seguidores_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutUtilizadorInput | seguidores_paginaCreateOrConnectWithoutUtilizadorInput[]
    createMany?: seguidores_paginaCreateManyUtilizadorInputEnvelope
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
  }

  export type ticketUncheckedCreateNestedManyWithoutUtilizadorInput = {
    create?: XOR<ticketCreateWithoutUtilizadorInput, ticketUncheckedCreateWithoutUtilizadorInput> | ticketCreateWithoutUtilizadorInput[] | ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutUtilizadorInput | ticketCreateOrConnectWithoutUtilizadorInput[]
    createMany?: ticketCreateManyUtilizadorInputEnvelope
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type Enumtipo_utilizadorFieldUpdateOperationsInput = {
    set?: $Enums.tipo_utilizador
  }

  export type comentarioUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<comentarioCreateWithoutUtilizadorInput, comentarioUncheckedCreateWithoutUtilizadorInput> | comentarioCreateWithoutUtilizadorInput[] | comentarioUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutUtilizadorInput | comentarioCreateOrConnectWithoutUtilizadorInput[]
    upsert?: comentarioUpsertWithWhereUniqueWithoutUtilizadorInput | comentarioUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: comentarioCreateManyUtilizadorInputEnvelope
    set?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    disconnect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    delete?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    update?: comentarioUpdateWithWhereUniqueWithoutUtilizadorInput | comentarioUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: comentarioUpdateManyWithWhereWithoutUtilizadorInput | comentarioUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: comentarioScalarWhereInput | comentarioScalarWhereInput[]
  }

  export type moderador_paginaUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<moderador_paginaCreateWithoutUtilizadorInput, moderador_paginaUncheckedCreateWithoutUtilizadorInput> | moderador_paginaCreateWithoutUtilizadorInput[] | moderador_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutUtilizadorInput | moderador_paginaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: moderador_paginaUpsertWithWhereUniqueWithoutUtilizadorInput | moderador_paginaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: moderador_paginaCreateManyUtilizadorInputEnvelope
    set?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    disconnect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    delete?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    update?: moderador_paginaUpdateWithWhereUniqueWithoutUtilizadorInput | moderador_paginaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: moderador_paginaUpdateManyWithWhereWithoutUtilizadorInput | moderador_paginaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: moderador_paginaScalarWhereInput | moderador_paginaScalarWhereInput[]
  }

  export type notificacaoUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<notificacaoCreateWithoutUtilizadorInput, notificacaoUncheckedCreateWithoutUtilizadorInput> | notificacaoCreateWithoutUtilizadorInput[] | notificacaoUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutUtilizadorInput | notificacaoCreateOrConnectWithoutUtilizadorInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutUtilizadorInput | notificacaoUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: notificacaoCreateManyUtilizadorInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutUtilizadorInput | notificacaoUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutUtilizadorInput | notificacaoUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutUtilizadorInput, pagina_freguesiaUncheckedCreateWithoutUtilizadorInput> | pagina_freguesiaCreateWithoutUtilizadorInput[] | pagina_freguesiaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutUtilizadorInput | pagina_freguesiaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: pagina_freguesiaUpsertWithWhereUniqueWithoutUtilizadorInput | pagina_freguesiaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: pagina_freguesiaCreateManyUtilizadorInputEnvelope
    set?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    disconnect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    delete?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    update?: pagina_freguesiaUpdateWithWhereUniqueWithoutUtilizadorInput | pagina_freguesiaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: pagina_freguesiaUpdateManyWithWhereWithoutUtilizadorInput | pagina_freguesiaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: pagina_freguesiaScalarWhereInput | pagina_freguesiaScalarWhereInput[]
  }

  export type pedido_paginaUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<pedido_paginaCreateWithoutUtilizadorInput, pedido_paginaUncheckedCreateWithoutUtilizadorInput> | pedido_paginaCreateWithoutUtilizadorInput[] | pedido_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutUtilizadorInput | pedido_paginaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: pedido_paginaUpsertWithWhereUniqueWithoutUtilizadorInput | pedido_paginaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: pedido_paginaCreateManyUtilizadorInputEnvelope
    set?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    disconnect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    delete?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    update?: pedido_paginaUpdateWithWhereUniqueWithoutUtilizadorInput | pedido_paginaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: pedido_paginaUpdateManyWithWhereWithoutUtilizadorInput | pedido_paginaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: pedido_paginaScalarWhereInput | pedido_paginaScalarWhereInput[]
  }

  export type perfilUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<perfilCreateWithoutUtilizadorInput, perfilUncheckedCreateWithoutUtilizadorInput> | perfilCreateWithoutUtilizadorInput[] | perfilUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: perfilCreateOrConnectWithoutUtilizadorInput | perfilCreateOrConnectWithoutUtilizadorInput[]
    upsert?: perfilUpsertWithWhereUniqueWithoutUtilizadorInput | perfilUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: perfilCreateManyUtilizadorInputEnvelope
    set?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    disconnect?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    delete?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    connect?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    update?: perfilUpdateWithWhereUniqueWithoutUtilizadorInput | perfilUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: perfilUpdateManyWithWhereWithoutUtilizadorInput | perfilUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: perfilScalarWhereInput | perfilScalarWhereInput[]
  }

  export type postUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<postCreateWithoutUtilizadorInput, postUncheckedCreateWithoutUtilizadorInput> | postCreateWithoutUtilizadorInput[] | postUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: postCreateOrConnectWithoutUtilizadorInput | postCreateOrConnectWithoutUtilizadorInput[]
    upsert?: postUpsertWithWhereUniqueWithoutUtilizadorInput | postUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: postCreateManyUtilizadorInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutUtilizadorInput | postUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: postUpdateManyWithWhereWithoutUtilizadorInput | postUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type resposta_ticketUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<resposta_ticketCreateWithoutUtilizadorInput, resposta_ticketUncheckedCreateWithoutUtilizadorInput> | resposta_ticketCreateWithoutUtilizadorInput[] | resposta_ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutUtilizadorInput | resposta_ticketCreateOrConnectWithoutUtilizadorInput[]
    upsert?: resposta_ticketUpsertWithWhereUniqueWithoutUtilizadorInput | resposta_ticketUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: resposta_ticketCreateManyUtilizadorInputEnvelope
    set?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    disconnect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    delete?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    update?: resposta_ticketUpdateWithWhereUniqueWithoutUtilizadorInput | resposta_ticketUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: resposta_ticketUpdateManyWithWhereWithoutUtilizadorInput | resposta_ticketUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: resposta_ticketScalarWhereInput | resposta_ticketScalarWhereInput[]
  }

  export type seguidores_paginaUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<seguidores_paginaCreateWithoutUtilizadorInput, seguidores_paginaUncheckedCreateWithoutUtilizadorInput> | seguidores_paginaCreateWithoutUtilizadorInput[] | seguidores_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutUtilizadorInput | seguidores_paginaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: seguidores_paginaUpsertWithWhereUniqueWithoutUtilizadorInput | seguidores_paginaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: seguidores_paginaCreateManyUtilizadorInputEnvelope
    set?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    disconnect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    delete?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    update?: seguidores_paginaUpdateWithWhereUniqueWithoutUtilizadorInput | seguidores_paginaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: seguidores_paginaUpdateManyWithWhereWithoutUtilizadorInput | seguidores_paginaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: seguidores_paginaScalarWhereInput | seguidores_paginaScalarWhereInput[]
  }

  export type ticketUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<ticketCreateWithoutUtilizadorInput, ticketUncheckedCreateWithoutUtilizadorInput> | ticketCreateWithoutUtilizadorInput[] | ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutUtilizadorInput | ticketCreateOrConnectWithoutUtilizadorInput[]
    upsert?: ticketUpsertWithWhereUniqueWithoutUtilizadorInput | ticketUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: ticketCreateManyUtilizadorInputEnvelope
    set?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    disconnect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    delete?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    update?: ticketUpdateWithWhereUniqueWithoutUtilizadorInput | ticketUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: ticketUpdateManyWithWhereWithoutUtilizadorInput | ticketUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: ticketScalarWhereInput | ticketScalarWhereInput[]
  }

  export type moradaUpdateOneWithoutUtilizadorNestedInput = {
    create?: XOR<moradaCreateWithoutUtilizadorInput, moradaUncheckedCreateWithoutUtilizadorInput>
    connectOrCreate?: moradaCreateOrConnectWithoutUtilizadorInput
    upsert?: moradaUpsertWithoutUtilizadorInput
    disconnect?: moradaWhereInput | boolean
    delete?: moradaWhereInput | boolean
    connect?: moradaWhereUniqueInput
    update?: XOR<XOR<moradaUpdateToOneWithWhereWithoutUtilizadorInput, moradaUpdateWithoutUtilizadorInput>, moradaUncheckedUpdateWithoutUtilizadorInput>
  }

  export type comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<comentarioCreateWithoutUtilizadorInput, comentarioUncheckedCreateWithoutUtilizadorInput> | comentarioCreateWithoutUtilizadorInput[] | comentarioUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: comentarioCreateOrConnectWithoutUtilizadorInput | comentarioCreateOrConnectWithoutUtilizadorInput[]
    upsert?: comentarioUpsertWithWhereUniqueWithoutUtilizadorInput | comentarioUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: comentarioCreateManyUtilizadorInputEnvelope
    set?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    disconnect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    delete?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    connect?: comentarioWhereUniqueInput | comentarioWhereUniqueInput[]
    update?: comentarioUpdateWithWhereUniqueWithoutUtilizadorInput | comentarioUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: comentarioUpdateManyWithWhereWithoutUtilizadorInput | comentarioUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: comentarioScalarWhereInput | comentarioScalarWhereInput[]
  }

  export type moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<moderador_paginaCreateWithoutUtilizadorInput, moderador_paginaUncheckedCreateWithoutUtilizadorInput> | moderador_paginaCreateWithoutUtilizadorInput[] | moderador_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: moderador_paginaCreateOrConnectWithoutUtilizadorInput | moderador_paginaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: moderador_paginaUpsertWithWhereUniqueWithoutUtilizadorInput | moderador_paginaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: moderador_paginaCreateManyUtilizadorInputEnvelope
    set?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    disconnect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    delete?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    connect?: moderador_paginaWhereUniqueInput | moderador_paginaWhereUniqueInput[]
    update?: moderador_paginaUpdateWithWhereUniqueWithoutUtilizadorInput | moderador_paginaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: moderador_paginaUpdateManyWithWhereWithoutUtilizadorInput | moderador_paginaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: moderador_paginaScalarWhereInput | moderador_paginaScalarWhereInput[]
  }

  export type notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<notificacaoCreateWithoutUtilizadorInput, notificacaoUncheckedCreateWithoutUtilizadorInput> | notificacaoCreateWithoutUtilizadorInput[] | notificacaoUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: notificacaoCreateOrConnectWithoutUtilizadorInput | notificacaoCreateOrConnectWithoutUtilizadorInput[]
    upsert?: notificacaoUpsertWithWhereUniqueWithoutUtilizadorInput | notificacaoUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: notificacaoCreateManyUtilizadorInputEnvelope
    set?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    disconnect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    delete?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    connect?: notificacaoWhereUniqueInput | notificacaoWhereUniqueInput[]
    update?: notificacaoUpdateWithWhereUniqueWithoutUtilizadorInput | notificacaoUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: notificacaoUpdateManyWithWhereWithoutUtilizadorInput | notificacaoUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
  }

  export type pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutUtilizadorInput, pagina_freguesiaUncheckedCreateWithoutUtilizadorInput> | pagina_freguesiaCreateWithoutUtilizadorInput[] | pagina_freguesiaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutUtilizadorInput | pagina_freguesiaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: pagina_freguesiaUpsertWithWhereUniqueWithoutUtilizadorInput | pagina_freguesiaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: pagina_freguesiaCreateManyUtilizadorInputEnvelope
    set?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    disconnect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    delete?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    connect?: pagina_freguesiaWhereUniqueInput | pagina_freguesiaWhereUniqueInput[]
    update?: pagina_freguesiaUpdateWithWhereUniqueWithoutUtilizadorInput | pagina_freguesiaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: pagina_freguesiaUpdateManyWithWhereWithoutUtilizadorInput | pagina_freguesiaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: pagina_freguesiaScalarWhereInput | pagina_freguesiaScalarWhereInput[]
  }

  export type pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<pedido_paginaCreateWithoutUtilizadorInput, pedido_paginaUncheckedCreateWithoutUtilizadorInput> | pedido_paginaCreateWithoutUtilizadorInput[] | pedido_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: pedido_paginaCreateOrConnectWithoutUtilizadorInput | pedido_paginaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: pedido_paginaUpsertWithWhereUniqueWithoutUtilizadorInput | pedido_paginaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: pedido_paginaCreateManyUtilizadorInputEnvelope
    set?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    disconnect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    delete?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    connect?: pedido_paginaWhereUniqueInput | pedido_paginaWhereUniqueInput[]
    update?: pedido_paginaUpdateWithWhereUniqueWithoutUtilizadorInput | pedido_paginaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: pedido_paginaUpdateManyWithWhereWithoutUtilizadorInput | pedido_paginaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: pedido_paginaScalarWhereInput | pedido_paginaScalarWhereInput[]
  }

  export type perfilUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<perfilCreateWithoutUtilizadorInput, perfilUncheckedCreateWithoutUtilizadorInput> | perfilCreateWithoutUtilizadorInput[] | perfilUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: perfilCreateOrConnectWithoutUtilizadorInput | perfilCreateOrConnectWithoutUtilizadorInput[]
    upsert?: perfilUpsertWithWhereUniqueWithoutUtilizadorInput | perfilUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: perfilCreateManyUtilizadorInputEnvelope
    set?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    disconnect?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    delete?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    connect?: perfilWhereUniqueInput | perfilWhereUniqueInput[]
    update?: perfilUpdateWithWhereUniqueWithoutUtilizadorInput | perfilUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: perfilUpdateManyWithWhereWithoutUtilizadorInput | perfilUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: perfilScalarWhereInput | perfilScalarWhereInput[]
  }

  export type postUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<postCreateWithoutUtilizadorInput, postUncheckedCreateWithoutUtilizadorInput> | postCreateWithoutUtilizadorInput[] | postUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: postCreateOrConnectWithoutUtilizadorInput | postCreateOrConnectWithoutUtilizadorInput[]
    upsert?: postUpsertWithWhereUniqueWithoutUtilizadorInput | postUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: postCreateManyUtilizadorInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutUtilizadorInput | postUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: postUpdateManyWithWhereWithoutUtilizadorInput | postUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<resposta_ticketCreateWithoutUtilizadorInput, resposta_ticketUncheckedCreateWithoutUtilizadorInput> | resposta_ticketCreateWithoutUtilizadorInput[] | resposta_ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: resposta_ticketCreateOrConnectWithoutUtilizadorInput | resposta_ticketCreateOrConnectWithoutUtilizadorInput[]
    upsert?: resposta_ticketUpsertWithWhereUniqueWithoutUtilizadorInput | resposta_ticketUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: resposta_ticketCreateManyUtilizadorInputEnvelope
    set?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    disconnect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    delete?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    connect?: resposta_ticketWhereUniqueInput | resposta_ticketWhereUniqueInput[]
    update?: resposta_ticketUpdateWithWhereUniqueWithoutUtilizadorInput | resposta_ticketUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: resposta_ticketUpdateManyWithWhereWithoutUtilizadorInput | resposta_ticketUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: resposta_ticketScalarWhereInput | resposta_ticketScalarWhereInput[]
  }

  export type seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<seguidores_paginaCreateWithoutUtilizadorInput, seguidores_paginaUncheckedCreateWithoutUtilizadorInput> | seguidores_paginaCreateWithoutUtilizadorInput[] | seguidores_paginaUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: seguidores_paginaCreateOrConnectWithoutUtilizadorInput | seguidores_paginaCreateOrConnectWithoutUtilizadorInput[]
    upsert?: seguidores_paginaUpsertWithWhereUniqueWithoutUtilizadorInput | seguidores_paginaUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: seguidores_paginaCreateManyUtilizadorInputEnvelope
    set?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    disconnect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    delete?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    connect?: seguidores_paginaWhereUniqueInput | seguidores_paginaWhereUniqueInput[]
    update?: seguidores_paginaUpdateWithWhereUniqueWithoutUtilizadorInput | seguidores_paginaUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: seguidores_paginaUpdateManyWithWhereWithoutUtilizadorInput | seguidores_paginaUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: seguidores_paginaScalarWhereInput | seguidores_paginaScalarWhereInput[]
  }

  export type ticketUncheckedUpdateManyWithoutUtilizadorNestedInput = {
    create?: XOR<ticketCreateWithoutUtilizadorInput, ticketUncheckedCreateWithoutUtilizadorInput> | ticketCreateWithoutUtilizadorInput[] | ticketUncheckedCreateWithoutUtilizadorInput[]
    connectOrCreate?: ticketCreateOrConnectWithoutUtilizadorInput | ticketCreateOrConnectWithoutUtilizadorInput[]
    upsert?: ticketUpsertWithWhereUniqueWithoutUtilizadorInput | ticketUpsertWithWhereUniqueWithoutUtilizadorInput[]
    createMany?: ticketCreateManyUtilizadorInputEnvelope
    set?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    disconnect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    delete?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    connect?: ticketWhereUniqueInput | ticketWhereUniqueInput[]
    update?: ticketUpdateWithWhereUniqueWithoutUtilizadorInput | ticketUpdateWithWhereUniqueWithoutUtilizadorInput[]
    updateMany?: ticketUpdateManyWithWhereWithoutUtilizadorInput | ticketUpdateManyWithWhereWithoutUtilizadorInput[]
    deleteMany?: ticketScalarWhereInput | ticketScalarWhereInput[]
  }

  export type pagina_freguesiaCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<pagina_freguesiaCreateWithoutNotificacaoInput, pagina_freguesiaUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutNotificacaoInput
    connect?: pagina_freguesiaWhereUniqueInput
  }

  export type postCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<postCreateWithoutNotificacaoInput, postUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: postCreateOrConnectWithoutNotificacaoInput
    connect?: postWhereUniqueInput
  }

  export type ticketCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<ticketCreateWithoutNotificacaoInput, ticketUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: ticketCreateOrConnectWithoutNotificacaoInput
    connect?: ticketWhereUniqueInput
  }

  export type utilizadorCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<utilizadorCreateWithoutNotificacaoInput, utilizadorUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutNotificacaoInput
    connect?: utilizadorWhereUniqueInput
  }

  export type Enumtipo_notificacaoFieldUpdateOperationsInput = {
    set?: $Enums.tipo_notificacao
  }

  export type Enumestado_notificacaoFieldUpdateOperationsInput = {
    set?: $Enums.estado_notificacao
  }

  export type pagina_freguesiaUpdateOneWithoutNotificacaoNestedInput = {
    create?: XOR<pagina_freguesiaCreateWithoutNotificacaoInput, pagina_freguesiaUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: pagina_freguesiaCreateOrConnectWithoutNotificacaoInput
    upsert?: pagina_freguesiaUpsertWithoutNotificacaoInput
    disconnect?: pagina_freguesiaWhereInput | boolean
    delete?: pagina_freguesiaWhereInput | boolean
    connect?: pagina_freguesiaWhereUniqueInput
    update?: XOR<XOR<pagina_freguesiaUpdateToOneWithWhereWithoutNotificacaoInput, pagina_freguesiaUpdateWithoutNotificacaoInput>, pagina_freguesiaUncheckedUpdateWithoutNotificacaoInput>
  }

  export type postUpdateOneWithoutNotificacaoNestedInput = {
    create?: XOR<postCreateWithoutNotificacaoInput, postUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: postCreateOrConnectWithoutNotificacaoInput
    upsert?: postUpsertWithoutNotificacaoInput
    disconnect?: postWhereInput | boolean
    delete?: postWhereInput | boolean
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutNotificacaoInput, postUpdateWithoutNotificacaoInput>, postUncheckedUpdateWithoutNotificacaoInput>
  }

  export type ticketUpdateOneWithoutNotificacaoNestedInput = {
    create?: XOR<ticketCreateWithoutNotificacaoInput, ticketUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: ticketCreateOrConnectWithoutNotificacaoInput
    upsert?: ticketUpsertWithoutNotificacaoInput
    disconnect?: ticketWhereInput | boolean
    delete?: ticketWhereInput | boolean
    connect?: ticketWhereUniqueInput
    update?: XOR<XOR<ticketUpdateToOneWithWhereWithoutNotificacaoInput, ticketUpdateWithoutNotificacaoInput>, ticketUncheckedUpdateWithoutNotificacaoInput>
  }

  export type utilizadorUpdateOneWithoutNotificacaoNestedInput = {
    create?: XOR<utilizadorCreateWithoutNotificacaoInput, utilizadorUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: utilizadorCreateOrConnectWithoutNotificacaoInput
    upsert?: utilizadorUpsertWithoutNotificacaoInput
    disconnect?: utilizadorWhereInput | boolean
    delete?: utilizadorWhereInput | boolean
    connect?: utilizadorWhereUniqueInput
    update?: XOR<XOR<utilizadorUpdateToOneWithWhereWithoutNotificacaoInput, utilizadorUpdateWithoutNotificacaoInput>, utilizadorUncheckedUpdateWithoutNotificacaoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumfuncao_moderadorFilter<$PrismaModel = never> = {
    equals?: $Enums.funcao_moderador | Enumfuncao_moderadorFieldRefInput<$PrismaModel>
    in?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    not?: NestedEnumfuncao_moderadorFilter<$PrismaModel> | $Enums.funcao_moderador
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumfuncao_moderadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.funcao_moderador | Enumfuncao_moderadorFieldRefInput<$PrismaModel>
    in?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.funcao_moderador[] | ListEnumfuncao_moderadorFieldRefInput<$PrismaModel>
    not?: NestedEnumfuncao_moderadorWithAggregatesFilter<$PrismaModel> | $Enums.funcao_moderador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfuncao_moderadorFilter<$PrismaModel>
    _max?: NestedEnumfuncao_moderadorFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumestado_pedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_pedido | Enumestado_pedidoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_pedidoFilter<$PrismaModel> | $Enums.estado_pedido
  }

  export type NestedEnumestado_pedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_pedido | Enumestado_pedidoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_pedido[] | ListEnumestado_pedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_pedidoWithAggregatesFilter<$PrismaModel> | $Enums.estado_pedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_pedidoFilter<$PrismaModel>
    _max?: NestedEnumestado_pedidoFilter<$PrismaModel>
  }

  export type NestedEnumestado_postFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_post | Enumestado_postFieldRefInput<$PrismaModel>
    in?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_postFilter<$PrismaModel> | $Enums.estado_post
  }

  export type NestedEnumestado_postWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_post | Enumestado_postFieldRefInput<$PrismaModel>
    in?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_post[] | ListEnumestado_postFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_postWithAggregatesFilter<$PrismaModel> | $Enums.estado_post
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_postFilter<$PrismaModel>
    _max?: NestedEnumestado_postFilter<$PrismaModel>
  }

  export type NestedEnumestado_respostaFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_resposta | Enumestado_respostaFieldRefInput<$PrismaModel>
    in?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_respostaFilter<$PrismaModel> | $Enums.estado_resposta
  }

  export type NestedEnumestado_respostaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_resposta | Enumestado_respostaFieldRefInput<$PrismaModel>
    in?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_resposta[] | ListEnumestado_respostaFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_respostaWithAggregatesFilter<$PrismaModel> | $Enums.estado_resposta
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_respostaFilter<$PrismaModel>
    _max?: NestedEnumestado_respostaFilter<$PrismaModel>
  }

  export type NestedEnumestado_ticketFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_ticket | Enumestado_ticketFieldRefInput<$PrismaModel>
    in?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_ticketFilter<$PrismaModel> | $Enums.estado_ticket
  }

  export type NestedEnumestado_ticketWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_ticket | Enumestado_ticketFieldRefInput<$PrismaModel>
    in?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_ticket[] | ListEnumestado_ticketFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_ticketWithAggregatesFilter<$PrismaModel> | $Enums.estado_ticket
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_ticketFilter<$PrismaModel>
    _max?: NestedEnumestado_ticketFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumtipo_utilizadorFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_utilizador | Enumtipo_utilizadorFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_utilizadorFilter<$PrismaModel> | $Enums.tipo_utilizador
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumtipo_utilizadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_utilizador | Enumtipo_utilizadorFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_utilizador[] | ListEnumtipo_utilizadorFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_utilizadorWithAggregatesFilter<$PrismaModel> | $Enums.tipo_utilizador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtipo_utilizadorFilter<$PrismaModel>
    _max?: NestedEnumtipo_utilizadorFilter<$PrismaModel>
  }

  export type NestedEnumtipo_notificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_notificacao | Enumtipo_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_notificacaoFilter<$PrismaModel> | $Enums.tipo_notificacao
  }

  export type NestedEnumestado_notificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_notificacao | Enumestado_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_notificacaoFilter<$PrismaModel> | $Enums.estado_notificacao
  }

  export type NestedEnumtipo_notificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tipo_notificacao | Enumtipo_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.tipo_notificacao[] | ListEnumtipo_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumtipo_notificacaoWithAggregatesFilter<$PrismaModel> | $Enums.tipo_notificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtipo_notificacaoFilter<$PrismaModel>
    _max?: NestedEnumtipo_notificacaoFilter<$PrismaModel>
  }

  export type NestedEnumestado_notificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.estado_notificacao | Enumestado_notificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.estado_notificacao[] | ListEnumestado_notificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumestado_notificacaoWithAggregatesFilter<$PrismaModel> | $Enums.estado_notificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumestado_notificacaoFilter<$PrismaModel>
    _max?: NestedEnumestado_notificacaoFilter<$PrismaModel>
  }

  export type postCreateWithoutComentarioInput = {
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    notificacao?: notificacaoCreateNestedManyWithoutPostInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutPostInput
    utilizador?: utilizadorCreateNestedOneWithoutPostInput
  }

  export type postUncheckedCreateWithoutComentarioInput = {
    id_post?: number
    id_utilizador: number
    id_pagina: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutComentarioInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutComentarioInput, postUncheckedCreateWithoutComentarioInput>
  }

  export type utilizadorCreateWithoutComentarioInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutComentarioInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutComentarioInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutComentarioInput, utilizadorUncheckedCreateWithoutComentarioInput>
  }

  export type postUpsertWithoutComentarioInput = {
    update: XOR<postUpdateWithoutComentarioInput, postUncheckedUpdateWithoutComentarioInput>
    create: XOR<postCreateWithoutComentarioInput, postUncheckedCreateWithoutComentarioInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutComentarioInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutComentarioInput, postUncheckedUpdateWithoutComentarioInput>
  }

  export type postUpdateWithoutComentarioInput = {
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    notificacao?: notificacaoUpdateManyWithoutPostNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutPostNestedInput
    utilizador?: utilizadorUpdateOneWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutComentarioInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    notificacao?: notificacaoUncheckedUpdateManyWithoutPostNestedInput
  }

  export type utilizadorUpsertWithoutComentarioInput = {
    update: XOR<utilizadorUpdateWithoutComentarioInput, utilizadorUncheckedUpdateWithoutComentarioInput>
    create: XOR<utilizadorCreateWithoutComentarioInput, utilizadorUncheckedCreateWithoutComentarioInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutComentarioInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutComentarioInput, utilizadorUncheckedUpdateWithoutComentarioInput>
  }

  export type utilizadorUpdateWithoutComentarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutComentarioInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type pagina_freguesiaCreateWithoutModerador_paginaInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutModerador_paginaInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutModerador_paginaInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutModerador_paginaInput, pagina_freguesiaUncheckedCreateWithoutModerador_paginaInput>
  }

  export type utilizadorCreateWithoutModerador_paginaInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutModerador_paginaInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutModerador_paginaInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutModerador_paginaInput, utilizadorUncheckedCreateWithoutModerador_paginaInput>
  }

  export type pagina_freguesiaUpsertWithoutModerador_paginaInput = {
    update: XOR<pagina_freguesiaUpdateWithoutModerador_paginaInput, pagina_freguesiaUncheckedUpdateWithoutModerador_paginaInput>
    create: XOR<pagina_freguesiaCreateWithoutModerador_paginaInput, pagina_freguesiaUncheckedCreateWithoutModerador_paginaInput>
    where?: pagina_freguesiaWhereInput
  }

  export type pagina_freguesiaUpdateToOneWithWhereWithoutModerador_paginaInput = {
    where?: pagina_freguesiaWhereInput
    data: XOR<pagina_freguesiaUpdateWithoutModerador_paginaInput, pagina_freguesiaUncheckedUpdateWithoutModerador_paginaInput>
  }

  export type pagina_freguesiaUpdateWithoutModerador_paginaInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutModerador_paginaInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type utilizadorUpsertWithoutModerador_paginaInput = {
    update: XOR<utilizadorUpdateWithoutModerador_paginaInput, utilizadorUncheckedUpdateWithoutModerador_paginaInput>
    create: XOR<utilizadorCreateWithoutModerador_paginaInput, utilizadorUncheckedCreateWithoutModerador_paginaInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutModerador_paginaInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutModerador_paginaInput, utilizadorUncheckedUpdateWithoutModerador_paginaInput>
  }

  export type utilizadorUpdateWithoutModerador_paginaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutModerador_paginaInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type pagina_freguesiaCreateWithoutMoradaInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutMoradaInput = {
    id_pagina?: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutMoradaInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutMoradaInput, pagina_freguesiaUncheckedCreateWithoutMoradaInput>
  }

  export type pagina_freguesiaCreateManyMoradaInputEnvelope = {
    data: pagina_freguesiaCreateManyMoradaInput | pagina_freguesiaCreateManyMoradaInput[]
    skipDuplicates?: boolean
  }

  export type pedido_paginaCreateWithoutMoradaInput = {
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
    utilizador?: utilizadorCreateNestedOneWithoutPedido_paginaInput
  }

  export type pedido_paginaUncheckedCreateWithoutMoradaInput = {
    id_pedido?: number
    id_utilizador: number
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
  }

  export type pedido_paginaCreateOrConnectWithoutMoradaInput = {
    where: pedido_paginaWhereUniqueInput
    create: XOR<pedido_paginaCreateWithoutMoradaInput, pedido_paginaUncheckedCreateWithoutMoradaInput>
  }

  export type pedido_paginaCreateManyMoradaInputEnvelope = {
    data: pedido_paginaCreateManyMoradaInput | pedido_paginaCreateManyMoradaInput[]
    skipDuplicates?: boolean
  }

  export type utilizadorCreateWithoutMoradaInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutMoradaInput = {
    id_utilizador?: number
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutMoradaInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutMoradaInput, utilizadorUncheckedCreateWithoutMoradaInput>
  }

  export type utilizadorCreateManyMoradaInputEnvelope = {
    data: utilizadorCreateManyMoradaInput | utilizadorCreateManyMoradaInput[]
    skipDuplicates?: boolean
  }

  export type pagina_freguesiaUpsertWithWhereUniqueWithoutMoradaInput = {
    where: pagina_freguesiaWhereUniqueInput
    update: XOR<pagina_freguesiaUpdateWithoutMoradaInput, pagina_freguesiaUncheckedUpdateWithoutMoradaInput>
    create: XOR<pagina_freguesiaCreateWithoutMoradaInput, pagina_freguesiaUncheckedCreateWithoutMoradaInput>
  }

  export type pagina_freguesiaUpdateWithWhereUniqueWithoutMoradaInput = {
    where: pagina_freguesiaWhereUniqueInput
    data: XOR<pagina_freguesiaUpdateWithoutMoradaInput, pagina_freguesiaUncheckedUpdateWithoutMoradaInput>
  }

  export type pagina_freguesiaUpdateManyWithWhereWithoutMoradaInput = {
    where: pagina_freguesiaScalarWhereInput
    data: XOR<pagina_freguesiaUpdateManyMutationInput, pagina_freguesiaUncheckedUpdateManyWithoutMoradaInput>
  }

  export type pagina_freguesiaScalarWhereInput = {
    AND?: pagina_freguesiaScalarWhereInput | pagina_freguesiaScalarWhereInput[]
    OR?: pagina_freguesiaScalarWhereInput[]
    NOT?: pagina_freguesiaScalarWhereInput | pagina_freguesiaScalarWhereInput[]
    id_pagina?: IntFilter<"pagina_freguesia"> | number
    id_morada?: IntFilter<"pagina_freguesia"> | number
    id_utilizador?: IntNullableFilter<"pagina_freguesia"> | number | null
    nome_pagina?: StringFilter<"pagina_freguesia"> | string
    descricao?: StringNullableFilter<"pagina_freguesia"> | string | null
    foto_perfil?: StringNullableFilter<"pagina_freguesia"> | string | null
    foto_capa?: StringNullableFilter<"pagina_freguesia"> | string | null
  }

  export type pedido_paginaUpsertWithWhereUniqueWithoutMoradaInput = {
    where: pedido_paginaWhereUniqueInput
    update: XOR<pedido_paginaUpdateWithoutMoradaInput, pedido_paginaUncheckedUpdateWithoutMoradaInput>
    create: XOR<pedido_paginaCreateWithoutMoradaInput, pedido_paginaUncheckedCreateWithoutMoradaInput>
  }

  export type pedido_paginaUpdateWithWhereUniqueWithoutMoradaInput = {
    where: pedido_paginaWhereUniqueInput
    data: XOR<pedido_paginaUpdateWithoutMoradaInput, pedido_paginaUncheckedUpdateWithoutMoradaInput>
  }

  export type pedido_paginaUpdateManyWithWhereWithoutMoradaInput = {
    where: pedido_paginaScalarWhereInput
    data: XOR<pedido_paginaUpdateManyMutationInput, pedido_paginaUncheckedUpdateManyWithoutMoradaInput>
  }

  export type pedido_paginaScalarWhereInput = {
    AND?: pedido_paginaScalarWhereInput | pedido_paginaScalarWhereInput[]
    OR?: pedido_paginaScalarWhereInput[]
    NOT?: pedido_paginaScalarWhereInput | pedido_paginaScalarWhereInput[]
    id_pedido?: IntFilter<"pedido_pagina"> | number
    id_utilizador?: IntFilter<"pedido_pagina"> | number
    id_morada?: IntFilter<"pedido_pagina"> | number
    dados_comprovacao?: StringFilter<"pedido_pagina"> | string
    estado_pedido?: Enumestado_pedidoFilter<"pedido_pagina"> | $Enums.estado_pedido
    data_pedido?: DateTimeNullableFilter<"pedido_pagina"> | Date | string | null
  }

  export type utilizadorUpsertWithWhereUniqueWithoutMoradaInput = {
    where: utilizadorWhereUniqueInput
    update: XOR<utilizadorUpdateWithoutMoradaInput, utilizadorUncheckedUpdateWithoutMoradaInput>
    create: XOR<utilizadorCreateWithoutMoradaInput, utilizadorUncheckedCreateWithoutMoradaInput>
  }

  export type utilizadorUpdateWithWhereUniqueWithoutMoradaInput = {
    where: utilizadorWhereUniqueInput
    data: XOR<utilizadorUpdateWithoutMoradaInput, utilizadorUncheckedUpdateWithoutMoradaInput>
  }

  export type utilizadorUpdateManyWithWhereWithoutMoradaInput = {
    where: utilizadorScalarWhereInput
    data: XOR<utilizadorUpdateManyMutationInput, utilizadorUncheckedUpdateManyWithoutMoradaInput>
  }

  export type utilizadorScalarWhereInput = {
    AND?: utilizadorScalarWhereInput | utilizadorScalarWhereInput[]
    OR?: utilizadorScalarWhereInput[]
    NOT?: utilizadorScalarWhereInput | utilizadorScalarWhereInput[]
    id_utilizador?: IntFilter<"utilizador"> | number
    id_morada?: IntNullableFilter<"utilizador"> | number | null
    nome?: StringFilter<"utilizador"> | string
    password?: StringFilter<"utilizador"> | string
    email?: StringFilter<"utilizador"> | string
    data_nascimento?: DateTimeFilter<"utilizador"> | Date | string
    contacto?: StringNullableFilter<"utilizador"> | string | null
    tipo_utilizador?: Enumtipo_utilizadorFilter<"utilizador"> | $Enums.tipo_utilizador
  }

  export type moderador_paginaCreateWithoutPagina_freguesiaInput = {
    funcao: $Enums.funcao_moderador
    utilizador?: utilizadorCreateNestedOneWithoutModerador_paginaInput
  }

  export type moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput = {
    id_moderador?: number
    id_utilizador?: number | null
    funcao: $Enums.funcao_moderador
  }

  export type moderador_paginaCreateOrConnectWithoutPagina_freguesiaInput = {
    where: moderador_paginaWhereUniqueInput
    create: XOR<moderador_paginaCreateWithoutPagina_freguesiaInput, moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type moderador_paginaCreateManyPagina_freguesiaInputEnvelope = {
    data: moderador_paginaCreateManyPagina_freguesiaInput | moderador_paginaCreateManyPagina_freguesiaInput[]
    skipDuplicates?: boolean
  }

  export type notificacaoCreateWithoutPagina_freguesiaInput = {
    tipo_notificacao: $Enums.tipo_notificacao
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
    post?: postCreateNestedOneWithoutNotificacaoInput
    ticket?: ticketCreateNestedOneWithoutNotificacaoInput
    utilizador?: utilizadorCreateNestedOneWithoutNotificacaoInput
  }

  export type notificacaoUncheckedCreateWithoutPagina_freguesiaInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type notificacaoCreateOrConnectWithoutPagina_freguesiaInput = {
    where: notificacaoWhereUniqueInput
    create: XOR<notificacaoCreateWithoutPagina_freguesiaInput, notificacaoUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type notificacaoCreateManyPagina_freguesiaInputEnvelope = {
    data: notificacaoCreateManyPagina_freguesiaInput | notificacaoCreateManyPagina_freguesiaInput[]
    skipDuplicates?: boolean
  }

  export type moradaCreateWithoutPagina_freguesiaInput = {
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutMoradaInput
    utilizador?: utilizadorCreateNestedManyWithoutMoradaInput
  }

  export type moradaUncheckedCreateWithoutPagina_freguesiaInput = {
    id_morada?: number
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutMoradaInput
    utilizador?: utilizadorUncheckedCreateNestedManyWithoutMoradaInput
  }

  export type moradaCreateOrConnectWithoutPagina_freguesiaInput = {
    where: moradaWhereUniqueInput
    create: XOR<moradaCreateWithoutPagina_freguesiaInput, moradaUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type utilizadorCreateWithoutPagina_freguesiaInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutPagina_freguesiaInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutPagina_freguesiaInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutPagina_freguesiaInput, utilizadorUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type postCreateWithoutPagina_freguesiaInput = {
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioCreateNestedManyWithoutPostInput
    notificacao?: notificacaoCreateNestedManyWithoutPostInput
    utilizador?: utilizadorCreateNestedOneWithoutPostInput
  }

  export type postUncheckedCreateWithoutPagina_freguesiaInput = {
    id_post?: number
    id_utilizador: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioUncheckedCreateNestedManyWithoutPostInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutPagina_freguesiaInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutPagina_freguesiaInput, postUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type postCreateManyPagina_freguesiaInputEnvelope = {
    data: postCreateManyPagina_freguesiaInput | postCreateManyPagina_freguesiaInput[]
    skipDuplicates?: boolean
  }

  export type seguidores_paginaCreateWithoutPagina_freguesiaInput = {
    data_seguimento?: Date | string | null
    utilizador?: utilizadorCreateNestedOneWithoutSeguidores_paginaInput
  }

  export type seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput = {
    id_seguimento?: number
    id_utilizador: number
    data_seguimento?: Date | string | null
  }

  export type seguidores_paginaCreateOrConnectWithoutPagina_freguesiaInput = {
    where: seguidores_paginaWhereUniqueInput
    create: XOR<seguidores_paginaCreateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type seguidores_paginaCreateManyPagina_freguesiaInputEnvelope = {
    data: seguidores_paginaCreateManyPagina_freguesiaInput | seguidores_paginaCreateManyPagina_freguesiaInput[]
    skipDuplicates?: boolean
  }

  export type ticketCreateWithoutPagina_freguesiaInput = {
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoCreateNestedManyWithoutTicketInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutTicketInput
    utilizador?: utilizadorCreateNestedOneWithoutTicketInput
  }

  export type ticketUncheckedCreateWithoutPagina_freguesiaInput = {
    id_ticket?: number
    id_utilizador: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutTicketInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutTicketInput
  }

  export type ticketCreateOrConnectWithoutPagina_freguesiaInput = {
    where: ticketWhereUniqueInput
    create: XOR<ticketCreateWithoutPagina_freguesiaInput, ticketUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type ticketCreateManyPagina_freguesiaInputEnvelope = {
    data: ticketCreateManyPagina_freguesiaInput | ticketCreateManyPagina_freguesiaInput[]
    skipDuplicates?: boolean
  }

  export type moderador_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: moderador_paginaWhereUniqueInput
    update: XOR<moderador_paginaUpdateWithoutPagina_freguesiaInput, moderador_paginaUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<moderador_paginaCreateWithoutPagina_freguesiaInput, moderador_paginaUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type moderador_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: moderador_paginaWhereUniqueInput
    data: XOR<moderador_paginaUpdateWithoutPagina_freguesiaInput, moderador_paginaUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type moderador_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput = {
    where: moderador_paginaScalarWhereInput
    data: XOR<moderador_paginaUpdateManyMutationInput, moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaInput>
  }

  export type moderador_paginaScalarWhereInput = {
    AND?: moderador_paginaScalarWhereInput | moderador_paginaScalarWhereInput[]
    OR?: moderador_paginaScalarWhereInput[]
    NOT?: moderador_paginaScalarWhereInput | moderador_paginaScalarWhereInput[]
    id_moderador?: IntFilter<"moderador_pagina"> | number
    id_pagina?: IntNullableFilter<"moderador_pagina"> | number | null
    id_utilizador?: IntNullableFilter<"moderador_pagina"> | number | null
    funcao?: Enumfuncao_moderadorFilter<"moderador_pagina"> | $Enums.funcao_moderador
  }

  export type notificacaoUpsertWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: notificacaoWhereUniqueInput
    update: XOR<notificacaoUpdateWithoutPagina_freguesiaInput, notificacaoUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<notificacaoCreateWithoutPagina_freguesiaInput, notificacaoUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type notificacaoUpdateWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: notificacaoWhereUniqueInput
    data: XOR<notificacaoUpdateWithoutPagina_freguesiaInput, notificacaoUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type notificacaoUpdateManyWithWhereWithoutPagina_freguesiaInput = {
    where: notificacaoScalarWhereInput
    data: XOR<notificacaoUpdateManyMutationInput, notificacaoUncheckedUpdateManyWithoutPagina_freguesiaInput>
  }

  export type notificacaoScalarWhereInput = {
    AND?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
    OR?: notificacaoScalarWhereInput[]
    NOT?: notificacaoScalarWhereInput | notificacaoScalarWhereInput[]
    id_notificacao?: IntFilter<"notificacao"> | number
    id_utilizador?: IntNullableFilter<"notificacao"> | number | null
    id_pagina?: IntNullableFilter<"notificacao"> | number | null
    tipo_notificacao?: Enumtipo_notificacaoFilter<"notificacao"> | $Enums.tipo_notificacao
    id_post?: IntNullableFilter<"notificacao"> | number | null
    id_ticket?: IntNullableFilter<"notificacao"> | number | null
    data?: DateTimeNullableFilter<"notificacao"> | Date | string | null
    conteudo_notificacao?: StringNullableFilter<"notificacao"> | string | null
    estado_notificacao?: Enumestado_notificacaoFilter<"notificacao"> | $Enums.estado_notificacao
  }

  export type moradaUpsertWithoutPagina_freguesiaInput = {
    update: XOR<moradaUpdateWithoutPagina_freguesiaInput, moradaUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<moradaCreateWithoutPagina_freguesiaInput, moradaUncheckedCreateWithoutPagina_freguesiaInput>
    where?: moradaWhereInput
  }

  export type moradaUpdateToOneWithWhereWithoutPagina_freguesiaInput = {
    where?: moradaWhereInput
    data: XOR<moradaUpdateWithoutPagina_freguesiaInput, moradaUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type moradaUpdateWithoutPagina_freguesiaInput = {
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pedido_pagina?: pedido_paginaUpdateManyWithoutMoradaNestedInput
    utilizador?: utilizadorUpdateManyWithoutMoradaNestedInput
  }

  export type moradaUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_morada?: IntFieldUpdateOperationsInput | number
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutMoradaNestedInput
    utilizador?: utilizadorUncheckedUpdateManyWithoutMoradaNestedInput
  }

  export type utilizadorUpsertWithoutPagina_freguesiaInput = {
    update: XOR<utilizadorUpdateWithoutPagina_freguesiaInput, utilizadorUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<utilizadorCreateWithoutPagina_freguesiaInput, utilizadorUncheckedCreateWithoutPagina_freguesiaInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutPagina_freguesiaInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutPagina_freguesiaInput, utilizadorUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type utilizadorUpdateWithoutPagina_freguesiaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type postUpsertWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: postWhereUniqueInput
    update: XOR<postUpdateWithoutPagina_freguesiaInput, postUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<postCreateWithoutPagina_freguesiaInput, postUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type postUpdateWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: postWhereUniqueInput
    data: XOR<postUpdateWithoutPagina_freguesiaInput, postUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type postUpdateManyWithWhereWithoutPagina_freguesiaInput = {
    where: postScalarWhereInput
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyWithoutPagina_freguesiaInput>
  }

  export type postScalarWhereInput = {
    AND?: postScalarWhereInput | postScalarWhereInput[]
    OR?: postScalarWhereInput[]
    NOT?: postScalarWhereInput | postScalarWhereInput[]
    id_post?: IntFilter<"post"> | number
    id_utilizador?: IntFilter<"post"> | number
    id_pagina?: IntFilter<"post"> | number
    descricao_post?: StringNullableFilter<"post"> | string | null
    media_post?: StringNullableFilter<"post"> | string | null
    estado_post?: Enumestado_postFilter<"post"> | $Enums.estado_post
    aprovacoes?: IntNullableFilter<"post"> | number | null
  }

  export type seguidores_paginaUpsertWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: seguidores_paginaWhereUniqueInput
    update: XOR<seguidores_paginaUpdateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<seguidores_paginaCreateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type seguidores_paginaUpdateWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: seguidores_paginaWhereUniqueInput
    data: XOR<seguidores_paginaUpdateWithoutPagina_freguesiaInput, seguidores_paginaUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type seguidores_paginaUpdateManyWithWhereWithoutPagina_freguesiaInput = {
    where: seguidores_paginaScalarWhereInput
    data: XOR<seguidores_paginaUpdateManyMutationInput, seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaInput>
  }

  export type seguidores_paginaScalarWhereInput = {
    AND?: seguidores_paginaScalarWhereInput | seguidores_paginaScalarWhereInput[]
    OR?: seguidores_paginaScalarWhereInput[]
    NOT?: seguidores_paginaScalarWhereInput | seguidores_paginaScalarWhereInput[]
    id_seguimento?: IntFilter<"seguidores_pagina"> | number
    id_utilizador?: IntFilter<"seguidores_pagina"> | number
    id_pagina?: IntFilter<"seguidores_pagina"> | number
    data_seguimento?: DateTimeNullableFilter<"seguidores_pagina"> | Date | string | null
  }

  export type ticketUpsertWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: ticketWhereUniqueInput
    update: XOR<ticketUpdateWithoutPagina_freguesiaInput, ticketUncheckedUpdateWithoutPagina_freguesiaInput>
    create: XOR<ticketCreateWithoutPagina_freguesiaInput, ticketUncheckedCreateWithoutPagina_freguesiaInput>
  }

  export type ticketUpdateWithWhereUniqueWithoutPagina_freguesiaInput = {
    where: ticketWhereUniqueInput
    data: XOR<ticketUpdateWithoutPagina_freguesiaInput, ticketUncheckedUpdateWithoutPagina_freguesiaInput>
  }

  export type ticketUpdateManyWithWhereWithoutPagina_freguesiaInput = {
    where: ticketScalarWhereInput
    data: XOR<ticketUpdateManyMutationInput, ticketUncheckedUpdateManyWithoutPagina_freguesiaInput>
  }

  export type ticketScalarWhereInput = {
    AND?: ticketScalarWhereInput | ticketScalarWhereInput[]
    OR?: ticketScalarWhereInput[]
    NOT?: ticketScalarWhereInput | ticketScalarWhereInput[]
    id_ticket?: IntFilter<"ticket"> | number
    id_utilizador?: IntFilter<"ticket"> | number
    id_pagina?: IntFilter<"ticket"> | number
    data_criacao?: DateTimeNullableFilter<"ticket"> | Date | string | null
    descricao_problema?: StringNullableFilter<"ticket"> | string | null
    estado_ticket?: Enumestado_ticketFilter<"ticket"> | $Enums.estado_ticket
  }

  export type moradaCreateWithoutPedido_paginaInput = {
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutMoradaInput
    utilizador?: utilizadorCreateNestedManyWithoutMoradaInput
  }

  export type moradaUncheckedCreateWithoutPedido_paginaInput = {
    id_morada?: number
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutMoradaInput
    utilizador?: utilizadorUncheckedCreateNestedManyWithoutMoradaInput
  }

  export type moradaCreateOrConnectWithoutPedido_paginaInput = {
    where: moradaWhereUniqueInput
    create: XOR<moradaCreateWithoutPedido_paginaInput, moradaUncheckedCreateWithoutPedido_paginaInput>
  }

  export type utilizadorCreateWithoutPedido_paginaInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutPedido_paginaInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutPedido_paginaInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutPedido_paginaInput, utilizadorUncheckedCreateWithoutPedido_paginaInput>
  }

  export type moradaUpsertWithoutPedido_paginaInput = {
    update: XOR<moradaUpdateWithoutPedido_paginaInput, moradaUncheckedUpdateWithoutPedido_paginaInput>
    create: XOR<moradaCreateWithoutPedido_paginaInput, moradaUncheckedCreateWithoutPedido_paginaInput>
    where?: moradaWhereInput
  }

  export type moradaUpdateToOneWithWhereWithoutPedido_paginaInput = {
    where?: moradaWhereInput
    data: XOR<moradaUpdateWithoutPedido_paginaInput, moradaUncheckedUpdateWithoutPedido_paginaInput>
  }

  export type moradaUpdateWithoutPedido_paginaInput = {
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutMoradaNestedInput
    utilizador?: utilizadorUpdateManyWithoutMoradaNestedInput
  }

  export type moradaUncheckedUpdateWithoutPedido_paginaInput = {
    id_morada?: IntFieldUpdateOperationsInput | number
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutMoradaNestedInput
    utilizador?: utilizadorUncheckedUpdateManyWithoutMoradaNestedInput
  }

  export type utilizadorUpsertWithoutPedido_paginaInput = {
    update: XOR<utilizadorUpdateWithoutPedido_paginaInput, utilizadorUncheckedUpdateWithoutPedido_paginaInput>
    create: XOR<utilizadorCreateWithoutPedido_paginaInput, utilizadorUncheckedCreateWithoutPedido_paginaInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutPedido_paginaInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutPedido_paginaInput, utilizadorUncheckedUpdateWithoutPedido_paginaInput>
  }

  export type utilizadorUpdateWithoutPedido_paginaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutPedido_paginaInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type utilizadorCreateWithoutPerfilInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutPerfilInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutPerfilInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutPerfilInput, utilizadorUncheckedCreateWithoutPerfilInput>
  }

  export type utilizadorUpsertWithoutPerfilInput = {
    update: XOR<utilizadorUpdateWithoutPerfilInput, utilizadorUncheckedUpdateWithoutPerfilInput>
    create: XOR<utilizadorCreateWithoutPerfilInput, utilizadorUncheckedCreateWithoutPerfilInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutPerfilInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutPerfilInput, utilizadorUncheckedUpdateWithoutPerfilInput>
  }

  export type utilizadorUpdateWithoutPerfilInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutPerfilInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type comentarioCreateWithoutPostInput = {
    conteudo_comentario: string
    data_comentario?: Date | string | null
    utilizador?: utilizadorCreateNestedOneWithoutComentarioInput
  }

  export type comentarioUncheckedCreateWithoutPostInput = {
    id_comentario?: number
    id_utilizador: number
    conteudo_comentario: string
    data_comentario?: Date | string | null
  }

  export type comentarioCreateOrConnectWithoutPostInput = {
    where: comentarioWhereUniqueInput
    create: XOR<comentarioCreateWithoutPostInput, comentarioUncheckedCreateWithoutPostInput>
  }

  export type comentarioCreateManyPostInputEnvelope = {
    data: comentarioCreateManyPostInput | comentarioCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type notificacaoCreateWithoutPostInput = {
    tipo_notificacao: $Enums.tipo_notificacao
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutNotificacaoInput
    ticket?: ticketCreateNestedOneWithoutNotificacaoInput
    utilizador?: utilizadorCreateNestedOneWithoutNotificacaoInput
  }

  export type notificacaoUncheckedCreateWithoutPostInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type notificacaoCreateOrConnectWithoutPostInput = {
    where: notificacaoWhereUniqueInput
    create: XOR<notificacaoCreateWithoutPostInput, notificacaoUncheckedCreateWithoutPostInput>
  }

  export type notificacaoCreateManyPostInputEnvelope = {
    data: notificacaoCreateManyPostInput | notificacaoCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type pagina_freguesiaCreateWithoutPostInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutPostInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutPostInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutPostInput, pagina_freguesiaUncheckedCreateWithoutPostInput>
  }

  export type utilizadorCreateWithoutPostInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutPostInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutPostInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutPostInput, utilizadorUncheckedCreateWithoutPostInput>
  }

  export type comentarioUpsertWithWhereUniqueWithoutPostInput = {
    where: comentarioWhereUniqueInput
    update: XOR<comentarioUpdateWithoutPostInput, comentarioUncheckedUpdateWithoutPostInput>
    create: XOR<comentarioCreateWithoutPostInput, comentarioUncheckedCreateWithoutPostInput>
  }

  export type comentarioUpdateWithWhereUniqueWithoutPostInput = {
    where: comentarioWhereUniqueInput
    data: XOR<comentarioUpdateWithoutPostInput, comentarioUncheckedUpdateWithoutPostInput>
  }

  export type comentarioUpdateManyWithWhereWithoutPostInput = {
    where: comentarioScalarWhereInput
    data: XOR<comentarioUpdateManyMutationInput, comentarioUncheckedUpdateManyWithoutPostInput>
  }

  export type comentarioScalarWhereInput = {
    AND?: comentarioScalarWhereInput | comentarioScalarWhereInput[]
    OR?: comentarioScalarWhereInput[]
    NOT?: comentarioScalarWhereInput | comentarioScalarWhereInput[]
    id_comentario?: IntFilter<"comentario"> | number
    id_post?: IntFilter<"comentario"> | number
    id_utilizador?: IntFilter<"comentario"> | number
    conteudo_comentario?: StringFilter<"comentario"> | string
    data_comentario?: DateTimeNullableFilter<"comentario"> | Date | string | null
  }

  export type notificacaoUpsertWithWhereUniqueWithoutPostInput = {
    where: notificacaoWhereUniqueInput
    update: XOR<notificacaoUpdateWithoutPostInput, notificacaoUncheckedUpdateWithoutPostInput>
    create: XOR<notificacaoCreateWithoutPostInput, notificacaoUncheckedCreateWithoutPostInput>
  }

  export type notificacaoUpdateWithWhereUniqueWithoutPostInput = {
    where: notificacaoWhereUniqueInput
    data: XOR<notificacaoUpdateWithoutPostInput, notificacaoUncheckedUpdateWithoutPostInput>
  }

  export type notificacaoUpdateManyWithWhereWithoutPostInput = {
    where: notificacaoScalarWhereInput
    data: XOR<notificacaoUpdateManyMutationInput, notificacaoUncheckedUpdateManyWithoutPostInput>
  }

  export type pagina_freguesiaUpsertWithoutPostInput = {
    update: XOR<pagina_freguesiaUpdateWithoutPostInput, pagina_freguesiaUncheckedUpdateWithoutPostInput>
    create: XOR<pagina_freguesiaCreateWithoutPostInput, pagina_freguesiaUncheckedCreateWithoutPostInput>
    where?: pagina_freguesiaWhereInput
  }

  export type pagina_freguesiaUpdateToOneWithWhereWithoutPostInput = {
    where?: pagina_freguesiaWhereInput
    data: XOR<pagina_freguesiaUpdateWithoutPostInput, pagina_freguesiaUncheckedUpdateWithoutPostInput>
  }

  export type pagina_freguesiaUpdateWithoutPostInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutPostInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type utilizadorUpsertWithoutPostInput = {
    update: XOR<utilizadorUpdateWithoutPostInput, utilizadorUncheckedUpdateWithoutPostInput>
    create: XOR<utilizadorCreateWithoutPostInput, utilizadorUncheckedCreateWithoutPostInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutPostInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutPostInput, utilizadorUncheckedUpdateWithoutPostInput>
  }

  export type utilizadorUpdateWithoutPostInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutPostInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type ticketCreateWithoutResposta_ticketInput = {
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoCreateNestedManyWithoutTicketInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutTicketInput
    utilizador?: utilizadorCreateNestedOneWithoutTicketInput
  }

  export type ticketUncheckedCreateWithoutResposta_ticketInput = {
    id_ticket?: number
    id_utilizador: number
    id_pagina: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutTicketInput
  }

  export type ticketCreateOrConnectWithoutResposta_ticketInput = {
    where: ticketWhereUniqueInput
    create: XOR<ticketCreateWithoutResposta_ticketInput, ticketUncheckedCreateWithoutResposta_ticketInput>
  }

  export type utilizadorCreateWithoutResposta_ticketInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutResposta_ticketInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutResposta_ticketInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutResposta_ticketInput, utilizadorUncheckedCreateWithoutResposta_ticketInput>
  }

  export type ticketUpsertWithoutResposta_ticketInput = {
    update: XOR<ticketUpdateWithoutResposta_ticketInput, ticketUncheckedUpdateWithoutResposta_ticketInput>
    create: XOR<ticketCreateWithoutResposta_ticketInput, ticketUncheckedCreateWithoutResposta_ticketInput>
    where?: ticketWhereInput
  }

  export type ticketUpdateToOneWithWhereWithoutResposta_ticketInput = {
    where?: ticketWhereInput
    data: XOR<ticketUpdateWithoutResposta_ticketInput, ticketUncheckedUpdateWithoutResposta_ticketInput>
  }

  export type ticketUpdateWithoutResposta_ticketInput = {
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUpdateManyWithoutTicketNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutTicketNestedInput
    utilizador?: utilizadorUpdateOneWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateWithoutResposta_ticketInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type utilizadorUpsertWithoutResposta_ticketInput = {
    update: XOR<utilizadorUpdateWithoutResposta_ticketInput, utilizadorUncheckedUpdateWithoutResposta_ticketInput>
    create: XOR<utilizadorCreateWithoutResposta_ticketInput, utilizadorUncheckedCreateWithoutResposta_ticketInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutResposta_ticketInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutResposta_ticketInput, utilizadorUncheckedUpdateWithoutResposta_ticketInput>
  }

  export type utilizadorUpdateWithoutResposta_ticketInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutResposta_ticketInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type pagina_freguesiaCreateWithoutSeguidores_paginaInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutSeguidores_paginaInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutSeguidores_paginaInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutSeguidores_paginaInput, pagina_freguesiaUncheckedCreateWithoutSeguidores_paginaInput>
  }

  export type utilizadorCreateWithoutSeguidores_paginaInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutSeguidores_paginaInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutSeguidores_paginaInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutSeguidores_paginaInput, utilizadorUncheckedCreateWithoutSeguidores_paginaInput>
  }

  export type pagina_freguesiaUpsertWithoutSeguidores_paginaInput = {
    update: XOR<pagina_freguesiaUpdateWithoutSeguidores_paginaInput, pagina_freguesiaUncheckedUpdateWithoutSeguidores_paginaInput>
    create: XOR<pagina_freguesiaCreateWithoutSeguidores_paginaInput, pagina_freguesiaUncheckedCreateWithoutSeguidores_paginaInput>
    where?: pagina_freguesiaWhereInput
  }

  export type pagina_freguesiaUpdateToOneWithWhereWithoutSeguidores_paginaInput = {
    where?: pagina_freguesiaWhereInput
    data: XOR<pagina_freguesiaUpdateWithoutSeguidores_paginaInput, pagina_freguesiaUncheckedUpdateWithoutSeguidores_paginaInput>
  }

  export type pagina_freguesiaUpdateWithoutSeguidores_paginaInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutSeguidores_paginaInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type utilizadorUpsertWithoutSeguidores_paginaInput = {
    update: XOR<utilizadorUpdateWithoutSeguidores_paginaInput, utilizadorUncheckedUpdateWithoutSeguidores_paginaInput>
    create: XOR<utilizadorCreateWithoutSeguidores_paginaInput, utilizadorUncheckedCreateWithoutSeguidores_paginaInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutSeguidores_paginaInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutSeguidores_paginaInput, utilizadorUncheckedUpdateWithoutSeguidores_paginaInput>
  }

  export type utilizadorUpdateWithoutSeguidores_paginaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutSeguidores_paginaInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type notificacaoCreateWithoutTicketInput = {
    tipo_notificacao: $Enums.tipo_notificacao
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutNotificacaoInput
    post?: postCreateNestedOneWithoutNotificacaoInput
    utilizador?: utilizadorCreateNestedOneWithoutNotificacaoInput
  }

  export type notificacaoUncheckedCreateWithoutTicketInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type notificacaoCreateOrConnectWithoutTicketInput = {
    where: notificacaoWhereUniqueInput
    create: XOR<notificacaoCreateWithoutTicketInput, notificacaoUncheckedCreateWithoutTicketInput>
  }

  export type notificacaoCreateManyTicketInputEnvelope = {
    data: notificacaoCreateManyTicketInput | notificacaoCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type resposta_ticketCreateWithoutTicketInput = {
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
    utilizador?: utilizadorCreateNestedOneWithoutResposta_ticketInput
  }

  export type resposta_ticketUncheckedCreateWithoutTicketInput = {
    id_resposta?: number
    id_utilizador: number
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
  }

  export type resposta_ticketCreateOrConnectWithoutTicketInput = {
    where: resposta_ticketWhereUniqueInput
    create: XOR<resposta_ticketCreateWithoutTicketInput, resposta_ticketUncheckedCreateWithoutTicketInput>
  }

  export type resposta_ticketCreateManyTicketInputEnvelope = {
    data: resposta_ticketCreateManyTicketInput | resposta_ticketCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type pagina_freguesiaCreateWithoutTicketInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutTicketInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutTicketInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutTicketInput, pagina_freguesiaUncheckedCreateWithoutTicketInput>
  }

  export type utilizadorCreateWithoutTicketInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutTicketInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutTicketInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutTicketInput, utilizadorUncheckedCreateWithoutTicketInput>
  }

  export type notificacaoUpsertWithWhereUniqueWithoutTicketInput = {
    where: notificacaoWhereUniqueInput
    update: XOR<notificacaoUpdateWithoutTicketInput, notificacaoUncheckedUpdateWithoutTicketInput>
    create: XOR<notificacaoCreateWithoutTicketInput, notificacaoUncheckedCreateWithoutTicketInput>
  }

  export type notificacaoUpdateWithWhereUniqueWithoutTicketInput = {
    where: notificacaoWhereUniqueInput
    data: XOR<notificacaoUpdateWithoutTicketInput, notificacaoUncheckedUpdateWithoutTicketInput>
  }

  export type notificacaoUpdateManyWithWhereWithoutTicketInput = {
    where: notificacaoScalarWhereInput
    data: XOR<notificacaoUpdateManyMutationInput, notificacaoUncheckedUpdateManyWithoutTicketInput>
  }

  export type resposta_ticketUpsertWithWhereUniqueWithoutTicketInput = {
    where: resposta_ticketWhereUniqueInput
    update: XOR<resposta_ticketUpdateWithoutTicketInput, resposta_ticketUncheckedUpdateWithoutTicketInput>
    create: XOR<resposta_ticketCreateWithoutTicketInput, resposta_ticketUncheckedCreateWithoutTicketInput>
  }

  export type resposta_ticketUpdateWithWhereUniqueWithoutTicketInput = {
    where: resposta_ticketWhereUniqueInput
    data: XOR<resposta_ticketUpdateWithoutTicketInput, resposta_ticketUncheckedUpdateWithoutTicketInput>
  }

  export type resposta_ticketUpdateManyWithWhereWithoutTicketInput = {
    where: resposta_ticketScalarWhereInput
    data: XOR<resposta_ticketUpdateManyMutationInput, resposta_ticketUncheckedUpdateManyWithoutTicketInput>
  }

  export type resposta_ticketScalarWhereInput = {
    AND?: resposta_ticketScalarWhereInput | resposta_ticketScalarWhereInput[]
    OR?: resposta_ticketScalarWhereInput[]
    NOT?: resposta_ticketScalarWhereInput | resposta_ticketScalarWhereInput[]
    id_resposta?: IntFilter<"resposta_ticket"> | number
    id_ticket?: IntFilter<"resposta_ticket"> | number
    id_utilizador?: IntFilter<"resposta_ticket"> | number
    data_resposta?: DateTimeNullableFilter<"resposta_ticket"> | Date | string | null
    conteudo_resposta?: StringNullableFilter<"resposta_ticket"> | string | null
    estado_resposta?: Enumestado_respostaFilter<"resposta_ticket"> | $Enums.estado_resposta
  }

  export type pagina_freguesiaUpsertWithoutTicketInput = {
    update: XOR<pagina_freguesiaUpdateWithoutTicketInput, pagina_freguesiaUncheckedUpdateWithoutTicketInput>
    create: XOR<pagina_freguesiaCreateWithoutTicketInput, pagina_freguesiaUncheckedCreateWithoutTicketInput>
    where?: pagina_freguesiaWhereInput
  }

  export type pagina_freguesiaUpdateToOneWithWhereWithoutTicketInput = {
    where?: pagina_freguesiaWhereInput
    data: XOR<pagina_freguesiaUpdateWithoutTicketInput, pagina_freguesiaUncheckedUpdateWithoutTicketInput>
  }

  export type pagina_freguesiaUpdateWithoutTicketInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutTicketInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type utilizadorUpsertWithoutTicketInput = {
    update: XOR<utilizadorUpdateWithoutTicketInput, utilizadorUncheckedUpdateWithoutTicketInput>
    create: XOR<utilizadorCreateWithoutTicketInput, utilizadorUncheckedCreateWithoutTicketInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutTicketInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutTicketInput, utilizadorUncheckedUpdateWithoutTicketInput>
  }

  export type utilizadorUpdateWithoutTicketInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutTicketInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type comentarioCreateWithoutUtilizadorInput = {
    conteudo_comentario: string
    data_comentario?: Date | string | null
    post?: postCreateNestedOneWithoutComentarioInput
  }

  export type comentarioUncheckedCreateWithoutUtilizadorInput = {
    id_comentario?: number
    id_post: number
    conteudo_comentario: string
    data_comentario?: Date | string | null
  }

  export type comentarioCreateOrConnectWithoutUtilizadorInput = {
    where: comentarioWhereUniqueInput
    create: XOR<comentarioCreateWithoutUtilizadorInput, comentarioUncheckedCreateWithoutUtilizadorInput>
  }

  export type comentarioCreateManyUtilizadorInputEnvelope = {
    data: comentarioCreateManyUtilizadorInput | comentarioCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type moderador_paginaCreateWithoutUtilizadorInput = {
    funcao: $Enums.funcao_moderador
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutModerador_paginaInput
  }

  export type moderador_paginaUncheckedCreateWithoutUtilizadorInput = {
    id_moderador?: number
    id_pagina?: number | null
    funcao: $Enums.funcao_moderador
  }

  export type moderador_paginaCreateOrConnectWithoutUtilizadorInput = {
    where: moderador_paginaWhereUniqueInput
    create: XOR<moderador_paginaCreateWithoutUtilizadorInput, moderador_paginaUncheckedCreateWithoutUtilizadorInput>
  }

  export type moderador_paginaCreateManyUtilizadorInputEnvelope = {
    data: moderador_paginaCreateManyUtilizadorInput | moderador_paginaCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type notificacaoCreateWithoutUtilizadorInput = {
    tipo_notificacao: $Enums.tipo_notificacao
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutNotificacaoInput
    post?: postCreateNestedOneWithoutNotificacaoInput
    ticket?: ticketCreateNestedOneWithoutNotificacaoInput
  }

  export type notificacaoUncheckedCreateWithoutUtilizadorInput = {
    id_notificacao?: number
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type notificacaoCreateOrConnectWithoutUtilizadorInput = {
    where: notificacaoWhereUniqueInput
    create: XOR<notificacaoCreateWithoutUtilizadorInput, notificacaoUncheckedCreateWithoutUtilizadorInput>
  }

  export type notificacaoCreateManyUtilizadorInputEnvelope = {
    data: notificacaoCreateManyUtilizadorInput | notificacaoCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type pagina_freguesiaCreateWithoutUtilizadorInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutUtilizadorInput = {
    id_pagina?: number
    id_morada: number
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutUtilizadorInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutUtilizadorInput, pagina_freguesiaUncheckedCreateWithoutUtilizadorInput>
  }

  export type pagina_freguesiaCreateManyUtilizadorInputEnvelope = {
    data: pagina_freguesiaCreateManyUtilizadorInput | pagina_freguesiaCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type pedido_paginaCreateWithoutUtilizadorInput = {
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
    morada?: moradaCreateNestedOneWithoutPedido_paginaInput
  }

  export type pedido_paginaUncheckedCreateWithoutUtilizadorInput = {
    id_pedido?: number
    id_morada: number
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
  }

  export type pedido_paginaCreateOrConnectWithoutUtilizadorInput = {
    where: pedido_paginaWhereUniqueInput
    create: XOR<pedido_paginaCreateWithoutUtilizadorInput, pedido_paginaUncheckedCreateWithoutUtilizadorInput>
  }

  export type pedido_paginaCreateManyUtilizadorInputEnvelope = {
    data: pedido_paginaCreateManyUtilizadorInput | pedido_paginaCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type perfilCreateWithoutUtilizadorInput = {
    foto_perfil?: string | null
    foto_capa?: string | null
    biografia?: string | null
  }

  export type perfilUncheckedCreateWithoutUtilizadorInput = {
    id_perfil?: number
    foto_perfil?: string | null
    foto_capa?: string | null
    biografia?: string | null
  }

  export type perfilCreateOrConnectWithoutUtilizadorInput = {
    where: perfilWhereUniqueInput
    create: XOR<perfilCreateWithoutUtilizadorInput, perfilUncheckedCreateWithoutUtilizadorInput>
  }

  export type perfilCreateManyUtilizadorInputEnvelope = {
    data: perfilCreateManyUtilizadorInput | perfilCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type postCreateWithoutUtilizadorInput = {
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioCreateNestedManyWithoutPostInput
    notificacao?: notificacaoCreateNestedManyWithoutPostInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutPostInput
  }

  export type postUncheckedCreateWithoutUtilizadorInput = {
    id_post?: number
    id_pagina: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioUncheckedCreateNestedManyWithoutPostInput
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutUtilizadorInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutUtilizadorInput, postUncheckedCreateWithoutUtilizadorInput>
  }

  export type postCreateManyUtilizadorInputEnvelope = {
    data: postCreateManyUtilizadorInput | postCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type resposta_ticketCreateWithoutUtilizadorInput = {
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
    ticket?: ticketCreateNestedOneWithoutResposta_ticketInput
  }

  export type resposta_ticketUncheckedCreateWithoutUtilizadorInput = {
    id_resposta?: number
    id_ticket: number
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
  }

  export type resposta_ticketCreateOrConnectWithoutUtilizadorInput = {
    where: resposta_ticketWhereUniqueInput
    create: XOR<resposta_ticketCreateWithoutUtilizadorInput, resposta_ticketUncheckedCreateWithoutUtilizadorInput>
  }

  export type resposta_ticketCreateManyUtilizadorInputEnvelope = {
    data: resposta_ticketCreateManyUtilizadorInput | resposta_ticketCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type seguidores_paginaCreateWithoutUtilizadorInput = {
    data_seguimento?: Date | string | null
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutSeguidores_paginaInput
  }

  export type seguidores_paginaUncheckedCreateWithoutUtilizadorInput = {
    id_seguimento?: number
    id_pagina: number
    data_seguimento?: Date | string | null
  }

  export type seguidores_paginaCreateOrConnectWithoutUtilizadorInput = {
    where: seguidores_paginaWhereUniqueInput
    create: XOR<seguidores_paginaCreateWithoutUtilizadorInput, seguidores_paginaUncheckedCreateWithoutUtilizadorInput>
  }

  export type seguidores_paginaCreateManyUtilizadorInputEnvelope = {
    data: seguidores_paginaCreateManyUtilizadorInput | seguidores_paginaCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type ticketCreateWithoutUtilizadorInput = {
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoCreateNestedManyWithoutTicketInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutTicketInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutTicketInput
  }

  export type ticketUncheckedCreateWithoutUtilizadorInput = {
    id_ticket?: number
    id_pagina: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    notificacao?: notificacaoUncheckedCreateNestedManyWithoutTicketInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutTicketInput
  }

  export type ticketCreateOrConnectWithoutUtilizadorInput = {
    where: ticketWhereUniqueInput
    create: XOR<ticketCreateWithoutUtilizadorInput, ticketUncheckedCreateWithoutUtilizadorInput>
  }

  export type ticketCreateManyUtilizadorInputEnvelope = {
    data: ticketCreateManyUtilizadorInput | ticketCreateManyUtilizadorInput[]
    skipDuplicates?: boolean
  }

  export type moradaCreateWithoutUtilizadorInput = {
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutMoradaInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutMoradaInput
  }

  export type moradaUncheckedCreateWithoutUtilizadorInput = {
    id_morada?: number
    freguesia?: string | null
    cidade: string
    rua?: string | null
    codigo_postal: number
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutMoradaInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutMoradaInput
  }

  export type moradaCreateOrConnectWithoutUtilizadorInput = {
    where: moradaWhereUniqueInput
    create: XOR<moradaCreateWithoutUtilizadorInput, moradaUncheckedCreateWithoutUtilizadorInput>
  }

  export type comentarioUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: comentarioWhereUniqueInput
    update: XOR<comentarioUpdateWithoutUtilizadorInput, comentarioUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<comentarioCreateWithoutUtilizadorInput, comentarioUncheckedCreateWithoutUtilizadorInput>
  }

  export type comentarioUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: comentarioWhereUniqueInput
    data: XOR<comentarioUpdateWithoutUtilizadorInput, comentarioUncheckedUpdateWithoutUtilizadorInput>
  }

  export type comentarioUpdateManyWithWhereWithoutUtilizadorInput = {
    where: comentarioScalarWhereInput
    data: XOR<comentarioUpdateManyMutationInput, comentarioUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type moderador_paginaUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: moderador_paginaWhereUniqueInput
    update: XOR<moderador_paginaUpdateWithoutUtilizadorInput, moderador_paginaUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<moderador_paginaCreateWithoutUtilizadorInput, moderador_paginaUncheckedCreateWithoutUtilizadorInput>
  }

  export type moderador_paginaUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: moderador_paginaWhereUniqueInput
    data: XOR<moderador_paginaUpdateWithoutUtilizadorInput, moderador_paginaUncheckedUpdateWithoutUtilizadorInput>
  }

  export type moderador_paginaUpdateManyWithWhereWithoutUtilizadorInput = {
    where: moderador_paginaScalarWhereInput
    data: XOR<moderador_paginaUpdateManyMutationInput, moderador_paginaUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type notificacaoUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: notificacaoWhereUniqueInput
    update: XOR<notificacaoUpdateWithoutUtilizadorInput, notificacaoUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<notificacaoCreateWithoutUtilizadorInput, notificacaoUncheckedCreateWithoutUtilizadorInput>
  }

  export type notificacaoUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: notificacaoWhereUniqueInput
    data: XOR<notificacaoUpdateWithoutUtilizadorInput, notificacaoUncheckedUpdateWithoutUtilizadorInput>
  }

  export type notificacaoUpdateManyWithWhereWithoutUtilizadorInput = {
    where: notificacaoScalarWhereInput
    data: XOR<notificacaoUpdateManyMutationInput, notificacaoUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type pagina_freguesiaUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: pagina_freguesiaWhereUniqueInput
    update: XOR<pagina_freguesiaUpdateWithoutUtilizadorInput, pagina_freguesiaUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<pagina_freguesiaCreateWithoutUtilizadorInput, pagina_freguesiaUncheckedCreateWithoutUtilizadorInput>
  }

  export type pagina_freguesiaUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: pagina_freguesiaWhereUniqueInput
    data: XOR<pagina_freguesiaUpdateWithoutUtilizadorInput, pagina_freguesiaUncheckedUpdateWithoutUtilizadorInput>
  }

  export type pagina_freguesiaUpdateManyWithWhereWithoutUtilizadorInput = {
    where: pagina_freguesiaScalarWhereInput
    data: XOR<pagina_freguesiaUpdateManyMutationInput, pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type pedido_paginaUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: pedido_paginaWhereUniqueInput
    update: XOR<pedido_paginaUpdateWithoutUtilizadorInput, pedido_paginaUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<pedido_paginaCreateWithoutUtilizadorInput, pedido_paginaUncheckedCreateWithoutUtilizadorInput>
  }

  export type pedido_paginaUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: pedido_paginaWhereUniqueInput
    data: XOR<pedido_paginaUpdateWithoutUtilizadorInput, pedido_paginaUncheckedUpdateWithoutUtilizadorInput>
  }

  export type pedido_paginaUpdateManyWithWhereWithoutUtilizadorInput = {
    where: pedido_paginaScalarWhereInput
    data: XOR<pedido_paginaUpdateManyMutationInput, pedido_paginaUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type perfilUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: perfilWhereUniqueInput
    update: XOR<perfilUpdateWithoutUtilizadorInput, perfilUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<perfilCreateWithoutUtilizadorInput, perfilUncheckedCreateWithoutUtilizadorInput>
  }

  export type perfilUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: perfilWhereUniqueInput
    data: XOR<perfilUpdateWithoutUtilizadorInput, perfilUncheckedUpdateWithoutUtilizadorInput>
  }

  export type perfilUpdateManyWithWhereWithoutUtilizadorInput = {
    where: perfilScalarWhereInput
    data: XOR<perfilUpdateManyMutationInput, perfilUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type perfilScalarWhereInput = {
    AND?: perfilScalarWhereInput | perfilScalarWhereInput[]
    OR?: perfilScalarWhereInput[]
    NOT?: perfilScalarWhereInput | perfilScalarWhereInput[]
    id_perfil?: IntFilter<"perfil"> | number
    id_utilizador?: IntFilter<"perfil"> | number
    foto_perfil?: StringNullableFilter<"perfil"> | string | null
    foto_capa?: StringNullableFilter<"perfil"> | string | null
    biografia?: StringNullableFilter<"perfil"> | string | null
  }

  export type postUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: postWhereUniqueInput
    update: XOR<postUpdateWithoutUtilizadorInput, postUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<postCreateWithoutUtilizadorInput, postUncheckedCreateWithoutUtilizadorInput>
  }

  export type postUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: postWhereUniqueInput
    data: XOR<postUpdateWithoutUtilizadorInput, postUncheckedUpdateWithoutUtilizadorInput>
  }

  export type postUpdateManyWithWhereWithoutUtilizadorInput = {
    where: postScalarWhereInput
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type resposta_ticketUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: resposta_ticketWhereUniqueInput
    update: XOR<resposta_ticketUpdateWithoutUtilizadorInput, resposta_ticketUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<resposta_ticketCreateWithoutUtilizadorInput, resposta_ticketUncheckedCreateWithoutUtilizadorInput>
  }

  export type resposta_ticketUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: resposta_ticketWhereUniqueInput
    data: XOR<resposta_ticketUpdateWithoutUtilizadorInput, resposta_ticketUncheckedUpdateWithoutUtilizadorInput>
  }

  export type resposta_ticketUpdateManyWithWhereWithoutUtilizadorInput = {
    where: resposta_ticketScalarWhereInput
    data: XOR<resposta_ticketUpdateManyMutationInput, resposta_ticketUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type seguidores_paginaUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: seguidores_paginaWhereUniqueInput
    update: XOR<seguidores_paginaUpdateWithoutUtilizadorInput, seguidores_paginaUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<seguidores_paginaCreateWithoutUtilizadorInput, seguidores_paginaUncheckedCreateWithoutUtilizadorInput>
  }

  export type seguidores_paginaUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: seguidores_paginaWhereUniqueInput
    data: XOR<seguidores_paginaUpdateWithoutUtilizadorInput, seguidores_paginaUncheckedUpdateWithoutUtilizadorInput>
  }

  export type seguidores_paginaUpdateManyWithWhereWithoutUtilizadorInput = {
    where: seguidores_paginaScalarWhereInput
    data: XOR<seguidores_paginaUpdateManyMutationInput, seguidores_paginaUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type ticketUpsertWithWhereUniqueWithoutUtilizadorInput = {
    where: ticketWhereUniqueInput
    update: XOR<ticketUpdateWithoutUtilizadorInput, ticketUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<ticketCreateWithoutUtilizadorInput, ticketUncheckedCreateWithoutUtilizadorInput>
  }

  export type ticketUpdateWithWhereUniqueWithoutUtilizadorInput = {
    where: ticketWhereUniqueInput
    data: XOR<ticketUpdateWithoutUtilizadorInput, ticketUncheckedUpdateWithoutUtilizadorInput>
  }

  export type ticketUpdateManyWithWhereWithoutUtilizadorInput = {
    where: ticketScalarWhereInput
    data: XOR<ticketUpdateManyMutationInput, ticketUncheckedUpdateManyWithoutUtilizadorInput>
  }

  export type moradaUpsertWithoutUtilizadorInput = {
    update: XOR<moradaUpdateWithoutUtilizadorInput, moradaUncheckedUpdateWithoutUtilizadorInput>
    create: XOR<moradaCreateWithoutUtilizadorInput, moradaUncheckedCreateWithoutUtilizadorInput>
    where?: moradaWhereInput
  }

  export type moradaUpdateToOneWithWhereWithoutUtilizadorInput = {
    where?: moradaWhereInput
    data: XOR<moradaUpdateWithoutUtilizadorInput, moradaUncheckedUpdateWithoutUtilizadorInput>
  }

  export type moradaUpdateWithoutUtilizadorInput = {
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutMoradaNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutMoradaNestedInput
  }

  export type moradaUncheckedUpdateWithoutUtilizadorInput = {
    id_morada?: IntFieldUpdateOperationsInput | number
    freguesia?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: StringFieldUpdateOperationsInput | string
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_postal?: IntFieldUpdateOperationsInput | number
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutMoradaNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutMoradaNestedInput
  }

  export type pagina_freguesiaCreateWithoutNotificacaoInput = {
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutPagina_freguesiaInput
    morada?: moradaCreateNestedOneWithoutPagina_freguesiaInput
    utilizador?: utilizadorCreateNestedOneWithoutPagina_freguesiaInput
    post?: postCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaUncheckedCreateWithoutNotificacaoInput = {
    id_pagina?: number
    id_morada: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    post?: postUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutPagina_freguesiaInput
    ticket?: ticketUncheckedCreateNestedManyWithoutPagina_freguesiaInput
  }

  export type pagina_freguesiaCreateOrConnectWithoutNotificacaoInput = {
    where: pagina_freguesiaWhereUniqueInput
    create: XOR<pagina_freguesiaCreateWithoutNotificacaoInput, pagina_freguesiaUncheckedCreateWithoutNotificacaoInput>
  }

  export type postCreateWithoutNotificacaoInput = {
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioCreateNestedManyWithoutPostInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutPostInput
    utilizador?: utilizadorCreateNestedOneWithoutPostInput
  }

  export type postUncheckedCreateWithoutNotificacaoInput = {
    id_post?: number
    id_utilizador: number
    id_pagina: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
    comentario?: comentarioUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutNotificacaoInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutNotificacaoInput, postUncheckedCreateWithoutNotificacaoInput>
  }

  export type ticketCreateWithoutNotificacaoInput = {
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutTicketInput
    pagina_freguesia?: pagina_freguesiaCreateNestedOneWithoutTicketInput
    utilizador?: utilizadorCreateNestedOneWithoutTicketInput
  }

  export type ticketUncheckedCreateWithoutNotificacaoInput = {
    id_ticket?: number
    id_utilizador: number
    id_pagina: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutTicketInput
  }

  export type ticketCreateOrConnectWithoutNotificacaoInput = {
    where: ticketWhereUniqueInput
    create: XOR<ticketCreateWithoutNotificacaoInput, ticketUncheckedCreateWithoutNotificacaoInput>
  }

  export type utilizadorCreateWithoutNotificacaoInput = {
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilCreateNestedManyWithoutUtilizadorInput
    post?: postCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketCreateNestedManyWithoutUtilizadorInput
    morada?: moradaCreateNestedOneWithoutUtilizadorInput
  }

  export type utilizadorUncheckedCreateWithoutNotificacaoInput = {
    id_utilizador?: number
    id_morada?: number | null
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
    comentario?: comentarioUncheckedCreateNestedManyWithoutUtilizadorInput
    moderador_pagina?: moderador_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    pagina_freguesia?: pagina_freguesiaUncheckedCreateNestedManyWithoutUtilizadorInput
    pedido_pagina?: pedido_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    perfil?: perfilUncheckedCreateNestedManyWithoutUtilizadorInput
    post?: postUncheckedCreateNestedManyWithoutUtilizadorInput
    resposta_ticket?: resposta_ticketUncheckedCreateNestedManyWithoutUtilizadorInput
    seguidores_pagina?: seguidores_paginaUncheckedCreateNestedManyWithoutUtilizadorInput
    ticket?: ticketUncheckedCreateNestedManyWithoutUtilizadorInput
  }

  export type utilizadorCreateOrConnectWithoutNotificacaoInput = {
    where: utilizadorWhereUniqueInput
    create: XOR<utilizadorCreateWithoutNotificacaoInput, utilizadorUncheckedCreateWithoutNotificacaoInput>
  }

  export type pagina_freguesiaUpsertWithoutNotificacaoInput = {
    update: XOR<pagina_freguesiaUpdateWithoutNotificacaoInput, pagina_freguesiaUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<pagina_freguesiaCreateWithoutNotificacaoInput, pagina_freguesiaUncheckedCreateWithoutNotificacaoInput>
    where?: pagina_freguesiaWhereInput
  }

  export type pagina_freguesiaUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: pagina_freguesiaWhereInput
    data: XOR<pagina_freguesiaUpdateWithoutNotificacaoInput, pagina_freguesiaUncheckedUpdateWithoutNotificacaoInput>
  }

  export type pagina_freguesiaUpdateWithoutNotificacaoInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutNotificacaoInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type postUpsertWithoutNotificacaoInput = {
    update: XOR<postUpdateWithoutNotificacaoInput, postUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<postCreateWithoutNotificacaoInput, postUncheckedCreateWithoutNotificacaoInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutNotificacaoInput, postUncheckedUpdateWithoutNotificacaoInput>
  }

  export type postUpdateWithoutNotificacaoInput = {
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUpdateManyWithoutPostNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutPostNestedInput
    utilizador?: utilizadorUpdateOneWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutNotificacaoInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUncheckedUpdateManyWithoutPostNestedInput
  }

  export type ticketUpsertWithoutNotificacaoInput = {
    update: XOR<ticketUpdateWithoutNotificacaoInput, ticketUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<ticketCreateWithoutNotificacaoInput, ticketUncheckedCreateWithoutNotificacaoInput>
    where?: ticketWhereInput
  }

  export type ticketUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: ticketWhereInput
    data: XOR<ticketUpdateWithoutNotificacaoInput, ticketUncheckedUpdateWithoutNotificacaoInput>
  }

  export type ticketUpdateWithoutNotificacaoInput = {
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    resposta_ticket?: resposta_ticketUpdateManyWithoutTicketNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutTicketNestedInput
    utilizador?: utilizadorUpdateOneWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateWithoutNotificacaoInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type utilizadorUpsertWithoutNotificacaoInput = {
    update: XOR<utilizadorUpdateWithoutNotificacaoInput, utilizadorUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<utilizadorCreateWithoutNotificacaoInput, utilizadorUncheckedCreateWithoutNotificacaoInput>
    where?: utilizadorWhereInput
  }

  export type utilizadorUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: utilizadorWhereInput
    data: XOR<utilizadorUpdateWithoutNotificacaoInput, utilizadorUncheckedUpdateWithoutNotificacaoInput>
  }

  export type utilizadorUpdateWithoutNotificacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
    morada?: moradaUpdateOneWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutNotificacaoInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    id_morada?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type pagina_freguesiaCreateManyMoradaInput = {
    id_pagina?: number
    id_utilizador?: number | null
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
  }

  export type pedido_paginaCreateManyMoradaInput = {
    id_pedido?: number
    id_utilizador: number
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
  }

  export type utilizadorCreateManyMoradaInput = {
    id_utilizador?: number
    nome: string
    password: string
    email: string
    data_nascimento: Date | string
    contacto?: string | null
    tipo_utilizador?: $Enums.tipo_utilizador
  }

  export type pagina_freguesiaUpdateWithoutMoradaInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    utilizador?: utilizadorUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutMoradaInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateManyWithoutMoradaInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pedido_paginaUpdateWithoutMoradaInput = {
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    utilizador?: utilizadorUpdateOneWithoutPedido_paginaNestedInput
  }

  export type pedido_paginaUncheckedUpdateWithoutMoradaInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pedido_paginaUncheckedUpdateManyWithoutMoradaInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type utilizadorUpdateWithoutMoradaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUpdateManyWithoutUtilizadorNestedInput
    post?: postUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUpdateManyWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateWithoutMoradaInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
    comentario?: comentarioUncheckedUpdateManyWithoutUtilizadorNestedInput
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutUtilizadorNestedInput
    pagina_freguesia?: pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorNestedInput
    pedido_pagina?: pedido_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    perfil?: perfilUncheckedUpdateManyWithoutUtilizadorNestedInput
    post?: postUncheckedUpdateManyWithoutUtilizadorNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutUtilizadorNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutUtilizadorNestedInput
  }

  export type utilizadorUncheckedUpdateManyWithoutMoradaInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_utilizador?: Enumtipo_utilizadorFieldUpdateOperationsInput | $Enums.tipo_utilizador
  }

  export type moderador_paginaCreateManyPagina_freguesiaInput = {
    id_moderador?: number
    id_utilizador?: number | null
    funcao: $Enums.funcao_moderador
  }

  export type notificacaoCreateManyPagina_freguesiaInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type postCreateManyPagina_freguesiaInput = {
    id_post?: number
    id_utilizador: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
  }

  export type seguidores_paginaCreateManyPagina_freguesiaInput = {
    id_seguimento?: number
    id_utilizador: number
    data_seguimento?: Date | string | null
  }

  export type ticketCreateManyPagina_freguesiaInput = {
    id_ticket?: number
    id_utilizador: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
  }

  export type moderador_paginaUpdateWithoutPagina_freguesiaInput = {
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
    utilizador?: utilizadorUpdateOneWithoutModerador_paginaNestedInput
  }

  export type moderador_paginaUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_moderador?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaInput = {
    id_moderador?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type notificacaoUpdateWithoutPagina_freguesiaInput = {
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
    post?: postUpdateOneWithoutNotificacaoNestedInput
    ticket?: ticketUpdateOneWithoutNotificacaoNestedInput
    utilizador?: utilizadorUpdateOneWithoutNotificacaoNestedInput
  }

  export type notificacaoUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoUncheckedUpdateManyWithoutPagina_freguesiaInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type postUpdateWithoutPagina_freguesiaInput = {
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUpdateManyWithoutPostNestedInput
    notificacao?: notificacaoUpdateManyWithoutPostNestedInput
    utilizador?: utilizadorUpdateOneWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUncheckedUpdateManyWithoutPostNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateManyWithoutPagina_freguesiaInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type seguidores_paginaUpdateWithoutPagina_freguesiaInput = {
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    utilizador?: utilizadorUpdateOneWithoutSeguidores_paginaNestedInput
  }

  export type seguidores_paginaUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_seguimento?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaInput = {
    id_seguimento?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ticketUpdateWithoutPagina_freguesiaInput = {
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUpdateManyWithoutTicketNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutTicketNestedInput
    utilizador?: utilizadorUpdateOneWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateWithoutPagina_freguesiaInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUncheckedUpdateManyWithoutTicketNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateManyWithoutPagina_freguesiaInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
  }

  export type comentarioCreateManyPostInput = {
    id_comentario?: number
    id_utilizador: number
    conteudo_comentario: string
    data_comentario?: Date | string | null
  }

  export type notificacaoCreateManyPostInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type comentarioUpdateWithoutPostInput = {
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    utilizador?: utilizadorUpdateOneWithoutComentarioNestedInput
  }

  export type comentarioUncheckedUpdateWithoutPostInput = {
    id_comentario?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comentarioUncheckedUpdateManyWithoutPostInput = {
    id_comentario?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificacaoUpdateWithoutPostInput = {
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutNotificacaoNestedInput
    ticket?: ticketUpdateOneWithoutNotificacaoNestedInput
    utilizador?: utilizadorUpdateOneWithoutNotificacaoNestedInput
  }

  export type notificacaoUncheckedUpdateWithoutPostInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoUncheckedUpdateManyWithoutPostInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoCreateManyTicketInput = {
    id_notificacao?: number
    id_utilizador?: number | null
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type resposta_ticketCreateManyTicketInput = {
    id_resposta?: number
    id_utilizador: number
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
  }

  export type notificacaoUpdateWithoutTicketInput = {
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutNotificacaoNestedInput
    post?: postUpdateOneWithoutNotificacaoNestedInput
    utilizador?: utilizadorUpdateOneWithoutNotificacaoNestedInput
  }

  export type notificacaoUncheckedUpdateWithoutTicketInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoUncheckedUpdateManyWithoutTicketInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type resposta_ticketUpdateWithoutTicketInput = {
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
    utilizador?: utilizadorUpdateOneWithoutResposta_ticketNestedInput
  }

  export type resposta_ticketUncheckedUpdateWithoutTicketInput = {
    id_resposta?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type resposta_ticketUncheckedUpdateManyWithoutTicketInput = {
    id_resposta?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type comentarioCreateManyUtilizadorInput = {
    id_comentario?: number
    id_post: number
    conteudo_comentario: string
    data_comentario?: Date | string | null
  }

  export type moderador_paginaCreateManyUtilizadorInput = {
    id_moderador?: number
    id_pagina?: number | null
    funcao: $Enums.funcao_moderador
  }

  export type notificacaoCreateManyUtilizadorInput = {
    id_notificacao?: number
    id_pagina?: number | null
    tipo_notificacao: $Enums.tipo_notificacao
    id_post?: number | null
    id_ticket?: number | null
    data?: Date | string | null
    conteudo_notificacao?: string | null
    estado_notificacao?: $Enums.estado_notificacao
  }

  export type pagina_freguesiaCreateManyUtilizadorInput = {
    id_pagina?: number
    id_morada: number
    nome_pagina: string
    descricao?: string | null
    foto_perfil?: string | null
    foto_capa?: string | null
  }

  export type pedido_paginaCreateManyUtilizadorInput = {
    id_pedido?: number
    id_morada: number
    dados_comprovacao: string
    estado_pedido?: $Enums.estado_pedido
    data_pedido?: Date | string | null
  }

  export type perfilCreateManyUtilizadorInput = {
    id_perfil?: number
    foto_perfil?: string | null
    foto_capa?: string | null
    biografia?: string | null
  }

  export type postCreateManyUtilizadorInput = {
    id_post?: number
    id_pagina: number
    descricao_post?: string | null
    media_post?: string | null
    estado_post?: $Enums.estado_post
    aprovacoes?: number | null
  }

  export type resposta_ticketCreateManyUtilizadorInput = {
    id_resposta?: number
    id_ticket: number
    data_resposta?: Date | string | null
    conteudo_resposta?: string | null
    estado_resposta: $Enums.estado_resposta
  }

  export type seguidores_paginaCreateManyUtilizadorInput = {
    id_seguimento?: number
    id_pagina: number
    data_seguimento?: Date | string | null
  }

  export type ticketCreateManyUtilizadorInput = {
    id_ticket?: number
    id_pagina: number
    data_criacao?: Date | string | null
    descricao_problema?: string | null
    estado_ticket?: $Enums.estado_ticket
  }

  export type comentarioUpdateWithoutUtilizadorInput = {
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: postUpdateOneWithoutComentarioNestedInput
  }

  export type comentarioUncheckedUpdateWithoutUtilizadorInput = {
    id_comentario?: IntFieldUpdateOperationsInput | number
    id_post?: IntFieldUpdateOperationsInput | number
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comentarioUncheckedUpdateManyWithoutUtilizadorInput = {
    id_comentario?: IntFieldUpdateOperationsInput | number
    id_post?: IntFieldUpdateOperationsInput | number
    conteudo_comentario?: StringFieldUpdateOperationsInput | string
    data_comentario?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type moderador_paginaUpdateWithoutUtilizadorInput = {
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutModerador_paginaNestedInput
  }

  export type moderador_paginaUncheckedUpdateWithoutUtilizadorInput = {
    id_moderador?: IntFieldUpdateOperationsInput | number
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type moderador_paginaUncheckedUpdateManyWithoutUtilizadorInput = {
    id_moderador?: IntFieldUpdateOperationsInput | number
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    funcao?: Enumfuncao_moderadorFieldUpdateOperationsInput | $Enums.funcao_moderador
  }

  export type notificacaoUpdateWithoutUtilizadorInput = {
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutNotificacaoNestedInput
    post?: postUpdateOneWithoutNotificacaoNestedInput
    ticket?: ticketUpdateOneWithoutNotificacaoNestedInput
  }

  export type notificacaoUncheckedUpdateWithoutUtilizadorInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type notificacaoUncheckedUpdateManyWithoutUtilizadorInput = {
    id_notificacao?: IntFieldUpdateOperationsInput | number
    id_pagina?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_notificacao?: Enumtipo_notificacaoFieldUpdateOperationsInput | $Enums.tipo_notificacao
    id_post?: NullableIntFieldUpdateOperationsInput | number | null
    id_ticket?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_notificacao?: NullableStringFieldUpdateOperationsInput | string | null
    estado_notificacao?: Enumestado_notificacaoFieldUpdateOperationsInput | $Enums.estado_notificacao
  }

  export type pagina_freguesiaUpdateWithoutUtilizadorInput = {
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUpdateManyWithoutPagina_freguesiaNestedInput
    morada?: moradaUpdateOneWithoutPagina_freguesiaNestedInput
    post?: postUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateWithoutUtilizadorInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    moderador_pagina?: moderador_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    post?: postUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    seguidores_pagina?: seguidores_paginaUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
    ticket?: ticketUncheckedUpdateManyWithoutPagina_freguesiaNestedInput
  }

  export type pagina_freguesiaUncheckedUpdateManyWithoutUtilizadorInput = {
    id_pagina?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    nome_pagina?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pedido_paginaUpdateWithoutUtilizadorInput = {
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    morada?: moradaUpdateOneWithoutPedido_paginaNestedInput
  }

  export type pedido_paginaUncheckedUpdateWithoutUtilizadorInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pedido_paginaUncheckedUpdateManyWithoutUtilizadorInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_morada?: IntFieldUpdateOperationsInput | number
    dados_comprovacao?: StringFieldUpdateOperationsInput | string
    estado_pedido?: Enumestado_pedidoFieldUpdateOperationsInput | $Enums.estado_pedido
    data_pedido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type perfilUpdateWithoutUtilizadorInput = {
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type perfilUncheckedUpdateWithoutUtilizadorInput = {
    id_perfil?: IntFieldUpdateOperationsInput | number
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type perfilUncheckedUpdateManyWithoutUtilizadorInput = {
    id_perfil?: IntFieldUpdateOperationsInput | number
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    foto_capa?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type postUpdateWithoutUtilizadorInput = {
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUpdateManyWithoutPostNestedInput
    notificacao?: notificacaoUpdateManyWithoutPostNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutUtilizadorInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: comentarioUncheckedUpdateManyWithoutPostNestedInput
    notificacao?: notificacaoUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateManyWithoutUtilizadorInput = {
    id_post?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    descricao_post?: NullableStringFieldUpdateOperationsInput | string | null
    media_post?: NullableStringFieldUpdateOperationsInput | string | null
    estado_post?: Enumestado_postFieldUpdateOperationsInput | $Enums.estado_post
    aprovacoes?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type resposta_ticketUpdateWithoutUtilizadorInput = {
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
    ticket?: ticketUpdateOneWithoutResposta_ticketNestedInput
  }

  export type resposta_ticketUncheckedUpdateWithoutUtilizadorInput = {
    id_resposta?: IntFieldUpdateOperationsInput | number
    id_ticket?: IntFieldUpdateOperationsInput | number
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type resposta_ticketUncheckedUpdateManyWithoutUtilizadorInput = {
    id_resposta?: IntFieldUpdateOperationsInput | number
    id_ticket?: IntFieldUpdateOperationsInput | number
    data_resposta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conteudo_resposta?: NullableStringFieldUpdateOperationsInput | string | null
    estado_resposta?: Enumestado_respostaFieldUpdateOperationsInput | $Enums.estado_resposta
  }

  export type seguidores_paginaUpdateWithoutUtilizadorInput = {
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutSeguidores_paginaNestedInput
  }

  export type seguidores_paginaUncheckedUpdateWithoutUtilizadorInput = {
    id_seguimento?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type seguidores_paginaUncheckedUpdateManyWithoutUtilizadorInput = {
    id_seguimento?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_seguimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ticketUpdateWithoutUtilizadorInput = {
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUpdateManyWithoutTicketNestedInput
    resposta_ticket?: resposta_ticketUpdateManyWithoutTicketNestedInput
    pagina_freguesia?: pagina_freguesiaUpdateOneWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateWithoutUtilizadorInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
    notificacao?: notificacaoUncheckedUpdateManyWithoutTicketNestedInput
    resposta_ticket?: resposta_ticketUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type ticketUncheckedUpdateManyWithoutUtilizadorInput = {
    id_ticket?: IntFieldUpdateOperationsInput | number
    id_pagina?: IntFieldUpdateOperationsInput | number
    data_criacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao_problema?: NullableStringFieldUpdateOperationsInput | string | null
    estado_ticket?: Enumestado_ticketFieldUpdateOperationsInput | $Enums.estado_ticket
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}